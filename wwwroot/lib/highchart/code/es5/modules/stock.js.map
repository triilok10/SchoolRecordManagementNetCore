{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.3 (2024-05-22)\n *\n * Highcharts Stock as a plugin for Highcharts\n *\n * (c) 2010-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/stock', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/DataModifyComposition.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Series/Point.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Axis, Point, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var pointTooltipFormatter = Point.prototype.tooltipFormatter;\n        var addEvent = U.addEvent, arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, defined = U.defined, isArray = U.isArray, isNumber = U.isNumber, isString = U.isString, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var DataModifyComposition;\n        (function (DataModifyComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends the series, axis and point classes with\n             * compare and cumulative support.\n             *\n             * @private\n             *\n             * @param SeriesClass\n             * Series class to use.\n             *\n             * @param AxisClass\n             * Axis class to extend.\n             *\n             * @param PointClass\n             * Point class to use.\n             */\n            function compose(SeriesClass, AxisClass, PointClass) {\n                var axisProto = AxisClass.prototype, pointProto = PointClass.prototype, seriesProto = SeriesClass.prototype;\n                if (!seriesProto.setCompare) {\n                    seriesProto.setCompare = seriesSetCompare;\n                    seriesProto.setCumulative = seriesSetCumulative;\n                    addEvent(SeriesClass, 'afterInit', afterInit);\n                    addEvent(SeriesClass, 'afterGetExtremes', afterGetExtremes);\n                    addEvent(SeriesClass, 'afterProcessData', afterProcessData);\n                }\n                if (!axisProto.setCompare) {\n                    axisProto.setCompare = axisSetCompare;\n                    axisProto.setModifier = setModifier;\n                    axisProto.setCumulative = axisSetCumulative;\n                    pointProto.tooltipFormatter = tooltipFormatter;\n                }\n                return SeriesClass;\n            }\n            DataModifyComposition.compose = compose;\n            /* ********************************************************************** *\n             *  Start shared compare and cumulative logic                             *\n             * ********************************************************************** */\n            /**\n             * Shared code for the axis.setCompare() and the axis.setCumulative()\n             * methods. Inits the 'compare' or the 'cumulative' mode.\n             * @private\n             */\n            function setModifier(mode, modeState, redraw) {\n                if (!this.isXAxis) {\n                    this.series.forEach(function (series) {\n                        if (mode === 'compare' &&\n                            typeof modeState !== 'boolean') {\n                            series.setCompare(modeState, false);\n                        }\n                        else if (mode === 'cumulative' &&\n                            !isString(modeState)) {\n                            series.setCumulative(modeState, false);\n                        }\n                    });\n                    if (pick(redraw, true)) {\n                        this.chart.redraw();\n                    }\n                }\n            }\n            /**\n             * Extend the tooltip formatter by adding support for the point.change\n             * variable as well as the changeDecimals option.\n             *\n             * @ignore\n             * @function Highcharts.Point#tooltipFormatter\n             *\n             * @param {string} pointFormat\n             */\n            function tooltipFormatter(pointFormat) {\n                var point = this, numberFormatter = point.series.chart.numberFormatter, replace = function (value) {\n                    pointFormat = pointFormat.replace('{point.' + value + '}', (point[value] > 0 && value === 'change' ? '+' : '') +\n                        numberFormatter(point[value], pick(point.series.tooltipOptions.changeDecimals, 2)));\n                };\n                if (defined(point.change)) {\n                    replace('change');\n                }\n                if (defined(point.cumulativeSum)) {\n                    replace('cumulativeSum');\n                }\n                return pointTooltipFormatter.apply(this, [pointFormat]);\n            }\n            /**\n             * Extend series.init by adding a methods to modify the y values used\n             * for plotting on the y axis. For compare mode, this method is called both\n             * from the axis when finding dataMin and dataMax,\n             * and from the series.translate method.\n             *\n             * @ignore\n             * @function Highcharts.Series#init\n             */\n            function afterInit() {\n                var compare = this.options.compare;\n                var dataModify;\n                if (compare === 'percent' ||\n                    compare === 'value' ||\n                    this.options.cumulative) {\n                    dataModify = new Additions(this);\n                    if (compare === 'percent' || compare === 'value') {\n                        // Set comparison mode\n                        dataModify.initCompare(compare);\n                    }\n                    else {\n                        // Set Cumulative Sum mode\n                        dataModify.initCumulative();\n                    }\n                }\n                this.dataModify = dataModify;\n            }\n            /**\n             * Adjust the extremes (compare and cumulative modify the data).\n             * @private\n             */\n            function afterGetExtremes(e) {\n                var dataExtremes = e.dataExtremes, activeYData = dataExtremes.activeYData;\n                if (this.dataModify && dataExtremes) {\n                    var extremes = void 0;\n                    if (this.options.compare) {\n                        extremes = [\n                            this.dataModify.modifyValue(dataExtremes.dataMin),\n                            this.dataModify.modifyValue(dataExtremes.dataMax)\n                        ];\n                    }\n                    else if (this.options.cumulative &&\n                        isArray(activeYData) &&\n                        // If only one y visible, sum doesn't change\n                        // so no need to change extremes\n                        activeYData.length >= 2) {\n                        extremes = Additions.getCumulativeExtremes(activeYData);\n                    }\n                    if (extremes) {\n                        dataExtremes.dataMin = arrayMin(extremes);\n                        dataExtremes.dataMax = arrayMax(extremes);\n                    }\n                }\n            }\n            /* ********************************************************************** *\n             *  End shared compare and cumulative logic                               *\n             * ********************************************************************** */\n            /* ********************************************************************** *\n             *  Start value compare logic                                             *\n             * ********************************************************************** */\n            /**\n             * Highcharts Stock only. Set the\n             * [compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n             * mode of the series after render time.\n             * In most cases it is more useful running\n             * {@link Axis#setCompare} on the X axis to update all its series.\n             *\n             * @function Highcharts.Series#setCompare\n             *\n             * @param {string|null} [compare]\n             *        Can be one of `undefined` (default), `null`, `\"percent\"`\n             *        or `\"value\"`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function seriesSetCompare(compare, redraw) {\n                // Survive to export, #5485 (and for options generally)\n                this.options.compare = this.userOptions.compare = compare;\n                // Fire series.init() that will set or delete series.dataModify\n                this.update({}, pick(redraw, true));\n                if (this.dataModify && (compare === 'value' || compare === 'percent')) {\n                    this.dataModify.initCompare(compare);\n                }\n                else {\n                    // When disabling, clear the points\n                    this.points.forEach(function (point) {\n                        delete point.change;\n                    });\n                }\n            }\n            /**\n             * Extend series.processData by finding the first y value in the plot area,\n             * used for comparing the following values\n             *\n             * @ignore\n             * @function Highcharts.Series#processData\n             */\n            function afterProcessData() {\n                var series = this;\n                if (series.xAxis && // Not pies\n                    series.processedYData &&\n                    series.dataModify) {\n                    var processedXData = series.processedXData, processedYData = series.processedYData, length_1 = processedYData.length, compareStart = series.options.compareStart === true ? 0 : 1;\n                    var keyIndex = -1, i = void 0;\n                    // For series with more than one value (range, OHLC etc), compare\n                    // against close or the pointValKey (#4922, #3112, #9854)\n                    if (series.pointArrayMap) {\n                        keyIndex = series.pointArrayMap.indexOf(series.options.pointValKey || series.pointValKey || 'y');\n                    }\n                    // Find the first value for comparison\n                    for (i = 0; i < length_1 - compareStart; i++) {\n                        var compareValue = processedYData[i] && keyIndex > -1 ?\n                            processedYData[i][keyIndex] : processedYData[i];\n                        if (isNumber(compareValue) &&\n                            compareValue !== 0 &&\n                            processedXData[i + compareStart] >= (series.xAxis.min || 0)) {\n                            series.dataModify.compareValue = compareValue;\n                            break;\n                        }\n                    }\n                }\n            }\n            /**\n             * Highcharts Stock only. Set the compare mode on all series\n             * belonging to a Y axis.\n             *\n             * @see [plotOptions.series.compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n             *\n             * @sample stock/members/axis-setcompare/\n             *         Set compare\n             *\n             * @function Highcharts.Axis#setCompare\n             *\n             * @param {string|null} [compare]\n             *        The compare mode. Can be one of `undefined` (default), `null`,\n             *        `\"value\"` or `\"percent\"`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function axisSetCompare(compare, redraw) {\n                this.setModifier('compare', compare, redraw);\n            }\n            /* ********************************************************************** *\n             *  End value compare logic                                               *\n             * ********************************************************************** */\n            /* ********************************************************************** *\n             *  Start Cumulative Sum logic, author: Rafal Sebestjanski                *\n             * ********************************************************************** */\n            /**\n             * Highcharts Stock only. Set the\n             * [cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n             * mode of the series after render time.\n             * In most cases it is more useful running\n             * {@link Axis#setCumulative} on the Y axis to update all its series.\n             *\n             * @function Highcharts.Series#setCumulative\n             *\n             * @param {boolean} [cumulative=false]\n             *        Either enable or disable Cumulative Sum mode.\n             *        Can be one of `false` (default) or `true`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function seriesSetCumulative(cumulative, redraw) {\n                // Set default value to false\n                cumulative = pick(cumulative, false);\n                // Survive to export, #5485 (and for options generally)\n                this.options.cumulative = this.userOptions.cumulative = cumulative;\n                // Fire series.init() that will set or delete series.dataModify\n                this.update({}, pick(redraw, true));\n                // If should, turn on the Cumulative Sum mode\n                if (this.dataModify) {\n                    this.dataModify.initCumulative();\n                }\n                else {\n                    // When disabling, clear the points\n                    this.points.forEach(function (point) {\n                        delete point.cumulativeSum;\n                    });\n                }\n            }\n            /**\n             * Highcharts Stock only. Set the cumulative mode on all series\n             * belonging to a Y axis.\n             *\n             * @see [plotOptions.series.cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n             *\n             * @sample stock/members/axis-setcumulative/\n             *         Set cumulative\n             *\n             * @function Highcharts.Axis#setCumulative\n             *\n             * @param {boolean} [cumulative]\n             *        Whether to disable or enable the cumulative mode.\n             *        Can be one of `undefined` (default, treated as `false`),\n             *        `false` or `true`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function axisSetCumulative(cumulative, redraw) {\n                this.setModifier('cumulative', cumulative, redraw);\n            }\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(series) {\n                    this.series = series;\n                }\n                /* *\n                *\n                *  Functions\n                *\n                * */\n                /**\n                 * @private\n                 */\n                Additions.prototype.modifyValue = function () {\n                    return 0;\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#getCumulativeExtremes\n                 *\n                 * @param {Array} [activeYData]\n                 *        An array cointaining all the points' y values\n                 *        in a visible range.\n                 */\n                Additions.getCumulativeExtremes = function (activeYData) {\n                    var cumulativeDataMin = Infinity, cumulativeDataMax = -Infinity;\n                    activeYData.reduce(function (prev, cur) {\n                        var sum = prev + cur;\n                        cumulativeDataMin = Math.min(cumulativeDataMin, sum, prev);\n                        cumulativeDataMax = Math.max(cumulativeDataMax, sum, prev);\n                        return sum;\n                    });\n                    return [cumulativeDataMin, cumulativeDataMax];\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#initCompare\n                 *\n                 * @param {string} [compare]\n                 *        Can be one of `\"percent\"` or `\"value\"`.\n                 */\n                Additions.prototype.initCompare = function (compare) {\n                    // Set the modifyValue method\n                    this.modifyValue = function (value, index) {\n                        if (value === null) {\n                            value = 0;\n                        }\n                        var compareValue = this.compareValue;\n                        if (typeof value !== 'undefined' &&\n                            typeof compareValue !== 'undefined') { // #2601, #5814\n                            // Get the modified value\n                            if (compare === 'value') {\n                                value -= compareValue;\n                                // Compare percent\n                            }\n                            else {\n                                var compareBase = this.series.options.compareBase;\n                                value = 100 * (value / compareValue) -\n                                    (compareBase === 100 ? 0 : 100);\n                            }\n                            // Record for tooltip etc.\n                            if (typeof index !== 'undefined') {\n                                var point = this.series.points[index];\n                                if (point) {\n                                    point.change = value;\n                                }\n                            }\n                            return value;\n                        }\n                        return 0;\n                    };\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#initCumulative\n                 */\n                Additions.prototype.initCumulative = function () {\n                    // Set the modifyValue method\n                    this.modifyValue = function (value, index) {\n                        if (value === null) {\n                            value = 0;\n                        }\n                        if (value !== void 0 && index !== void 0) {\n                            var prevPoint = index > 0 ?\n                                this.series.points[index - 1] : null;\n                            // Get the modified value\n                            if (prevPoint && prevPoint.cumulativeSum) {\n                                value = correctFloat(prevPoint.cumulativeSum + value);\n                            }\n                            // Record for tooltip etc.\n                            var point = this.series.points[index];\n                            var cumulativeStart = point.series.options.cumulativeStart, withinRange = point.x <= this.series.xAxis.max &&\n                                point.x >= this.series.xAxis.min;\n                            if (point) {\n                                if (!cumulativeStart || withinRange) {\n                                    point.cumulativeSum = value;\n                                }\n                                else {\n                                    point.cumulativeSum = void 0;\n                                }\n                            }\n                            return value;\n                        }\n                        return 0;\n                    };\n                };\n                return Additions;\n            }());\n            DataModifyComposition.Additions = Additions;\n        })(DataModifyComposition || (DataModifyComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Compare the values of the series against the first non-null, non-\n         * zero value in the visible range. The y axis will show percentage\n         * or absolute change depending on whether `compare` is set to `\"percent\"`\n         * or `\"value\"`. When this is applied to multiple series, it allows\n         * comparing the development of the series against each other. Adds\n         * a `change` field to every point object.\n         *\n         * @see [compareBase](#plotOptions.series.compareBase)\n         * @see [Axis.setCompare()](/class-reference/Highcharts.Axis#setCompare)\n         * @see [Series.setCompare()](/class-reference/Highcharts.Series#setCompare)\n         *\n         * @sample {highstock} stock/plotoptions/series-compare-percent/\n         *         Percent\n         * @sample {highstock} stock/plotoptions/series-compare-value/\n         *         Value\n         *\n         * @type      {string}\n         * @since     1.0.1\n         * @product   highstock\n         * @validvalue [\"percent\", \"value\"]\n         * @apioption plotOptions.series.compare\n         */\n        /**\n         * Defines if comparison should start from the first point within the visible\n         * range or should start from the last point **before** the range.\n         *\n         * In other words, this flag determines if first point within the visible range\n         * will have 0% (`compareStart=true`) or should have been already calculated\n         * according to the previous point (`compareStart=false`).\n         *\n         * @sample {highstock} stock/plotoptions/series-comparestart/\n         *         Calculate compare within visible range\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since     6.0.0\n         * @product   highstock\n         * @apioption plotOptions.series.compareStart\n         */\n        /**\n         * When [compare](#plotOptions.series.compare) is `percent`, this option\n         * dictates whether to use 0 or 100 as the base of comparison.\n         *\n         * @sample {highstock} stock/plotoptions/series-comparebase/\n         *         Compare base is 100\n         *\n         * @type       {number}\n         * @default    0\n         * @since      5.0.6\n         * @product    highstock\n         * @validvalue [0, 100]\n         * @apioption  plotOptions.series.compareBase\n         */\n        /**\n         * Cumulative Sum feature replaces points' values with the following formula:\n         * `sum of all previous points' values + current point's value`.\n         * Works only for points in a visible range.\n         * Adds the `cumulativeSum` field to each point object that can be accessed\n         * e.g. in the [tooltip.pointFormat](https://api.highcharts.com/highstock/tooltip.pointFormat).\n         *\n         * With `dataGrouping` enabled, default grouping approximation is set to `sum`.\n         *\n         * @see [Axis.setCumulative()](/class-reference/Highcharts.Axis#setCumulative)\n         * @see [Series.setCumulative()](/class-reference/Highcharts.Series#setCumulative)\n         *\n         * @sample {highstock} stock/plotoptions/series-cumulative-sum/\n         *         Cumulative Sum\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since 9.3.0\n         * @product   highstock\n         * @apioption plotOptions.series.cumulative\n         */\n        /**\n         * Defines if cumulation should start from the first point within the visible\n         * range or should start from the last point **before** the range.\n         *\n         * In other words, this flag determines if first point within the visible range\n         * will start at 0 (`cumulativeStart=true`) or should have been already calculated\n         * according to the previous point (`cumulativeStart=false`).\n         *\n         * @sample {highstock} stock/plotoptions/series-cumulativestart/\n         *         Cumulative Start\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since 11.4.2\n         * @product   highstock\n         * @apioption plotOptions.series.cumulativeStart\n         */\n        ''; // Keeps doclets above in transpiled file\n\n        return DataModifyComposition;\n    });\n    _registerModule(_modules, 'Stock/Navigator/ChartNavigatorComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, NavigatorClass) {\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                var chartProto = ChartClass.prototype;\n                NavigatorConstructor = NavigatorClass;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            var _a;\n            var legend = this.legend, navigator = this.navigator;\n            var legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                var scrollbarHeight = navigator.scrollbarHeight, scrollButtonSize = navigator.scrollButtonSize;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (((_a = this.scrollbar) === null || _a === void 0 ? void 0 : _a.options.margin) || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // False if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            var options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            var chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                var extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            var navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ChartNavigatorComposition = {\n            compose: compose\n        };\n\n        return ChartNavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisSetExtremes(e) {\n            var axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            var zoomed;\n            if (axis.isXAxis &&\n                ((navigator === null || navigator === void 0 ? void 0 : navigator.enabled) || (rangeSelector === null || rangeSelector === void 0 ? void 0 : rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y' && e.trigger === 'zoom') {\n                    zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom selection,\n                    // then when the reset button is pressed, revert to this state. This\n                    // should apply only if the chart is initialized with a range (#6612),\n                    // otherwise zoom all the way out.\n                }\n                else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    var previousZoom = navigatorAxis.previousZoom;\n                    // Minimum defined, zooming in\n                    if (defined(e.min)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                        // Minimum undefined, resetting zoom\n                    }\n                    else if (previousZoom) {\n                        e.min = previousZoom[0];\n                        e.max = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NavigatorAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function NavigatorAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.compose = function (AxisClass) {\n                if (!AxisClass.keepProps.includes('navigatorAxis')) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.prototype.destroy = function () {\n                this.axis = void 0;\n            };\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            NavigatorAxisAdditions.prototype.toFixedRange = function (pxMin, pxMax, fixedMin, fixedMax) {\n                var axis = this.axis, halfPointRange = (axis.pointRange || 0) / 2;\n                var newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            };\n            return NavigatorAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        var NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Border radius of the handles.\n                 *\n                 * @sample {highstock} stock/navigator/handles-border-radius/\n                 *      Border radius on the navigator handles.\n                 *\n                 * @since 11.4.2\n                 */\n                borderRadius: 0,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null,\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * `xAxis.maxPadding`, but the value is set in terms of axis values,\n                 * percentage or pixels.\n                 *\n                 * If it's a number, it is interpreted as axis values, which in a\n                 * datetime axis equals milliseconds.\n                 *\n                 * If it's a percentage string, is interpreted as percentages of the\n                 * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n                 *\n                 * If it's a pixel string, it is interpreted as a fixed pixel value, but\n                 * limited to 90% of the axis length.\n                 *\n                 * If it's undefined, the value is inherited from `xAxis.overscroll`.\n                 *\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @type    {number | string | undefined}\n                 * @since   6.0.0\n                 * @apioption navigator.xAxis.overscroll\n                 */\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                id: 'navigator-x-axis',\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                id: 'navigator-y-axis',\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // Keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [_modules['Core/Renderer/SVG/Symbols.js'], _modules['Core/Utilities.js']], function (rect, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n            if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n                if (ar || !(i in from)) {\n                    if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n                    ar[i] = from[i];\n                }\n            }\n            return to.concat(ar || Array.prototype.slice.call(from));\n        };\n        var relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options) {\n            if (options === void 0) { options = {}; }\n            var halfWidth = options.width ? options.width / 2 : width, markerPosition = 1.5, r = relativeLength(options.borderRadius || 0, Math.min(halfWidth * 2, height));\n            height = options.height || height;\n            return __spreadArray([\n                ['M', -markerPosition, height / 2 - 3.5],\n                ['L', -markerPosition, height / 2 + 4.5],\n                ['M', markerPosition - 1, height / 2 - 3.5],\n                ['L', markerPosition - 1, height / 2 + 4.5]\n            ], rect.rect(-halfWidth - 1, 0.5, halfWidth * 2 + 1, height, { r: r }), true);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Utilities/StockUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Sets the chart.fixedRange to the specified value. If the value is larger\n         * than actual range, sets it to the maximum possible range. (#20327)\n         *\n         * @private\n         * @function Highcharts.StockChart#setFixedRange\n         * @param {number|undefined} range\n         *        Range to set in axis units.\n         */\n        function setFixedRange(range) {\n            var xAxis = this.xAxis[0];\n            if (defined(xAxis.dataMax) &&\n                defined(xAxis.dataMin) &&\n                range) {\n                this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n            }\n            else {\n                this.fixedRange = range;\n            }\n        }\n        var StockUtilities = {\n            setFixedRange: setFixedRange\n        };\n\n        return StockUtilities;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Stock/Utilities/StockUtilities.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, StockUtilities, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var composed = H.composed;\n        var getRendererType = RendererRegistry.getRendererType;\n        var setFixedRange = StockUtilities.setFixedRange;\n        var addEvent = U.addEvent, extend = U.extend, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, AxisClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            if (pushUnique(composed, 'Navigator')) {\n                ChartClass.prototype.setFixedRange = setFixedRange;\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                setOptions({ navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorComposition = {\n            compose: compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, 'Axis.Scrollbar')) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                var axisMin = pick(axis.options && axis.options.min, axis.min);\n                var axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin: axisMin,\n                    axisMax: axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                var axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        var _a = getExtremes(axis), axisMin = _a.axisMin, axisMax = _a.axisMax, unitedMin = _a.scrollMin, unitedMax = _a.scrollMax, range = unitedMax - unitedMin;\n                        var to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            var animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scrollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                var axis = this, _a = getExtremes(axis), scrollMin = _a.scrollMin, scrollMax = _a.scrollMax, scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                var offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        var xPosition = void 0;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        var ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)',\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, crisp = U.crisp, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        var Scrollbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Scrollbar(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Scrollbar.compose = function (AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            };\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            Scrollbar.swapXY = function (path, vertical) {\n                if (vertical) {\n                    path.forEach(function (seg) {\n                        var len = seg.length;\n                        var temp;\n                        for (var i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            Scrollbar.prototype.addEvents = function () {\n                var buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                var _events = [\n                    // Mouse events\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler],\n                    // Touch events\n                    [bar, 'touchstart', mouseDownHandler],\n                    [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n                    [bar.ownerDocument, 'touchend', mouseUpHandler]\n                ];\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            };\n            Scrollbar.prototype.buttonToMaxClick = function (e) {\n                var scroller = this;\n                var range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            Scrollbar.prototype.buttonToMinClick = function (e) {\n                var scroller = this;\n                var range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            Scrollbar.prototype.cursorToScrollbarPosition = function (normalizedEvent) {\n                var scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // `minWidth` distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            Scrollbar.prototype.destroy = function () {\n                var scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            };\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            Scrollbar.prototype.drawScrollbarButton = function (index) {\n                var scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    var rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        width: size,\n                        height: size,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    var arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            Scrollbar.prototype.init = function (renderer, options, chart) {\n                var scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // Backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            };\n            Scrollbar.prototype.mouseDownHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            };\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            Scrollbar.prototype.mouseMoveHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                var scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            };\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            Scrollbar.prototype.mouseUpHandler = function (e) {\n                var scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            };\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scrollbar\n             */\n            Scrollbar.prototype.position = function (x, y, width, height) {\n                var scroller = this, options = scroller.options, buttonsEnabled = options.buttonsEnabled, _a = options.margin, margin = _a === void 0 ? 0 : _a, vertical = options.vertical, method = scroller.rendered ? 'animate' : 'attr';\n                var xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // Width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            Scrollbar.prototype.removeEvents = function () {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            };\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            Scrollbar.prototype.render = function () {\n                var scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // Initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                var trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -crisp(0, trackBorderWidth),\n                    y: -crisp(0, trackBorderWidth)\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-crisp(0, scroller.scrollbarStrokeWidth), -crisp(0, scroller.scrollbarStrokeWidth));\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            };\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            Scrollbar.prototype.setRange = function (from, to) {\n                var scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                var toPX = fullWidth * Math.min(to, 1);\n                var fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                var newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                var newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            };\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            Scrollbar.prototype.shouldUpdateExtremes = function (eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            };\n            Scrollbar.prototype.trackClick = function (e) {\n                var _a;\n                var scroller = this;\n                var normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            Scrollbar.prototype.update = function (options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            };\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            Scrollbar.prototype.updatePosition = function (from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Scrollbar.defaultOptions = ScrollbarDefaults;\n            return Scrollbar;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Stock/Navigator/ChartNavigatorComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Utilities.js']], function (Axis, ChartNavigatorComposition, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, clamp = U.clamp, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        var Navigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Navigator(chart) {\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Navigator.compose = function (ChartClass, AxisClass, SeriesClass) {\n                ChartNavigatorComposition.compose(ChartClass, Navigator);\n                NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawHandle = function (x, index, inverted, verb) {\n                var navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawOutline = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                var left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // Top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin],\n                        ['M', left, zoomedMax],\n                        ['L', left + height, zoomedMax],\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // Upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // Left\n                        ['M', left, lineTop],\n                        // Upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // Lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // Lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // Upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // Right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            navigatorTop + halfOutline\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // Upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawMasks = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                var height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach(function (shade, i) {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            };\n            /**\n             * Generate DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            Navigator.prototype.renderElements = function () {\n                var navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add();\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach(function (hasMask, index) {\n                    var shade = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup);\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ?\n                                navigatorOptions.maskFill :\n                                'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                    navigator.shades[index] = shade;\n                });\n                // Create the outline:\n                navigator.outline = renderer.path()\n                    .addClass('highcharts-navigator-outline')\n                    .add(navigatorGroup);\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles && navigatorOptions.handles.enabled) {\n                    var handlesOptions_1 = navigatorOptions.handles, height_1 = handlesOptions_1.height, width_1 = handlesOptions_1.width;\n                    [0, 1].forEach(function (index) {\n                        navigator.handles[index] = renderer.symbol(handlesOptions_1.symbols[index], -width_1 / 2 - 1, 0, width_1, height_1, handlesOptions_1);\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width_1 / 2),\n                                rotationOriginY: (height_1 + width_1) / 2\n                            });\n                        }\n                        // Z index is 6 for right handle, 7 for left. Can't be 10,\n                        // because of the tooltip in inverted chart (#2908).\n                        navigator.handles[index].attr({ zIndex: 7 - index })\n                            .addClass('highcharts-navigator-handle ' +\n                            'highcharts-navigator-handle-' +\n                            ['left', 'right'][index]).add(navigatorGroup);\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions_1.backgroundColor,\n                                stroke: handlesOptions_1.borderColor,\n                                'stroke-width': handlesOptions_1.lineWidth\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            };\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            Navigator.prototype.update = function (options) {\n                // Remove references to old navigator series in base series\n                (this.series || []).forEach(function (series) {\n                    if (series.baseSeries) {\n                        delete series.baseSeries.navigatorSeries;\n                    }\n                });\n                // Destroy and rebuild navigator\n                this.destroy();\n                var chartOptions = this.chart.options;\n                merge(true, chartOptions.navigator, options);\n                this.init(this.chart);\n            };\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            Navigator.prototype.render = function (min, max, pxMin, pxMax) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                var navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // In case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                var zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                var newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                var zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                fireEvent(this, 'afterRender');\n            };\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            Navigator.prototype.addMouseEvents = function () {\n                var navigator = this, chart = navigator.chart, container = chart.container;\n                var eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                eventsToUnbind.push(\n                // Add mouse move and mouseup events. These are bind to doc/div,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n                // Touch events\n                addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            };\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            Navigator.prototype.getPartsEvents = function (eventName) {\n                var navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            };\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            Navigator.prototype.shadesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                var navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // It has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            fireEvent(this, 'setRange', {\n                                min: Math.min(ext.min, ext.max),\n                                max: Math.max(ext.min, ext.max),\n                                redraw: true,\n                                eventArguments: {\n                                    trigger: 'navigator'\n                                }\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            Navigator.prototype.handlesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.setFixedRange(void 0);\n            };\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseMove = function (e) {\n                var _a;\n                var navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                var left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = ((_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // Outside left\n                            chartX = dragOffset;\n                            // Outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            };\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseUp = function (e) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                var zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        fireEvent(this, 'setRange', {\n                            min: Math.min(ext.min, ext.max),\n                            max: Math.max(ext.min, ext.max),\n                            redraw: true,\n                            animation: navigator.hasDragged ? false : null,\n                            eventArguments: {\n                                trigger: 'navigator',\n                                triggerOp: 'navigator-drag',\n                                DOMEvent: DOMEvent // #1838\n                            }\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            Navigator.prototype.removeEvents = function () {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            };\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            Navigator.prototype.removeBaseSeriesEvents = function () {\n                var baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            };\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            Navigator.prototype.init = function (chart) {\n                var chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n                var navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    // An x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // Inherit base xAxis' break, ordinal options and overscroll\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal,\n                        overscroll: baseXaxis.options.overscroll\n                    }, navigatorOptions.xAxis, {\n                        type: 'datetime',\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true,\n                        startOnTick: false,\n                        endOnTick: false,\n                        minPadding: 0,\n                        maxPadding: 0,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: [scrollButtonSize, 0, -scrollButtonSize, 0],\n                        width: height\n                    } : {\n                        offsets: [0, -scrollButtonSize, 0, scrollButtonSize],\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false),\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // Reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // In case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart: chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            var axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // From pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // From value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    var options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        var range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            };\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            Navigator.prototype.getUnionExtremes = function (returnFalseOnNoBaseSeries) {\n                var baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                var ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            };\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            Navigator.prototype.setBaseSeries = function (baseSeriesOptions, redraw) {\n                var chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, function (s) { return (!s.options.isInternal); }).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach(function (series, i) {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            };\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            Navigator.prototype.updateNavigatorSeries = function (addEvents, redraw) {\n                var _a, _b;\n                var navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null,\n                    linkedTo: null,\n                    group: 'nav',\n                    padXAxis: false,\n                    xAxis: (_a = this.navigatorOptions.xAxis) === null || _a === void 0 ? void 0 : _a.id,\n                    yAxis: (_b = this.navigatorOptions.yAxis) === null || _b === void 0 ? void 0 : _b.id,\n                    showInLegend: false,\n                    stacking: void 0,\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter(function (navSeries) {\n                        var base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                var baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach(function (base) {\n                        var linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        var navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            // Set data on initial run with dataSorting enabled (#20318)\n                            chart.setSortedData();\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach(function (userSeriesOptions, i) {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            };\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            Navigator.prototype.addBaseSeriesEvents = function () {\n                var _this = this;\n                var navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach(function (base) {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitly\n                    // not adapting to data changes.\n                    if (_this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', _this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            };\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            Navigator.prototype.getBaseSeriesMin = function (currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            };\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            Navigator.prototype.modifyNavigatorAxisExtremes = function () {\n                var xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    var unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            };\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            Navigator.prototype.modifyBaseAxisExtremes = function () {\n                var _a;\n                var baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick((_a = baseXAxis.ordinal) === null || _a === void 0 ? void 0 : _a.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                var newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // Don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            };\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            Navigator.prototype.updatedDataHandler = function () {\n                var navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            };\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            Navigator.prototype.shouldStickToMin = function (baseSeries, navigator) {\n                var xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                var stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            };\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            Navigator.prototype.addChartEvents = function () {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    var navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    var chart = this, navigator = chart.navigator;\n                    var marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }), addEvent(Navigator, 'setRange', function (e) {\n                    this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n                }));\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            Navigator.prototype.destroy = function () {\n                var _this = this;\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach(function (s) {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach(function (prop) {\n                    if (_this[prop] && _this[prop].destroy) {\n                        _this[prop].destroy();\n                    }\n                    _this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach(function (coll) {\n                    destroyObjectProperties(coll);\n                });\n            };\n            return Navigator;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Core/Axis/OrdinalAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Axis, H, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, css = U.css, defined = U.defined, error = U.error, isNumber = U.isNumber, pick = U.pick, timeUnits = U.timeUnits, isString = U.isString;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Extends the axis with ordinal support.\n         * @private\n         */\n        var OrdinalAxis;\n        (function (OrdinalAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends the axis with ordinal support.\n             *\n             * @private\n             *\n             * @param AxisClass\n             * Axis class to extend.\n             *\n             * @param ChartClass\n             * Chart class to use.\n             *\n             * @param SeriesClass\n             * Series class to use.\n             */\n            function compose(AxisClass, SeriesClass, ChartClass) {\n                var axisProto = AxisClass.prototype;\n                if (!axisProto.ordinal2lin) {\n                    axisProto.getTimeTicks = getTimeTicks;\n                    axisProto.index2val = index2val;\n                    axisProto.lin2val = lin2val;\n                    axisProto.val2lin = val2lin;\n                    // Record this to prevent overwriting by broken-axis module (#5979)\n                    axisProto.ordinal2lin = axisProto.val2lin;\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'foundExtremes', onAxisFoundExtremes);\n                    addEvent(AxisClass, 'afterSetScale', onAxisAfterSetScale);\n                    addEvent(AxisClass, 'initialAxisTranslation', onAxisInitialAxisTranslation);\n                    addEvent(ChartClass, 'pan', onChartPan);\n                    addEvent(SeriesClass, 'updatedData', onSeriesUpdatedData);\n                }\n                return AxisClass;\n            }\n            OrdinalAxis.compose = compose;\n            /**\n             * In an ordinal axis, there might be areas with dense concentrations of\n             * points, then large gaps between some. Creating equally distributed\n             * ticks over this entire range may lead to a huge number of ticks that\n             * will later be removed. So instead, break the positions up in\n             * segments, find the tick positions for each segment then concatenize\n             * them. This method is used from both data grouping logic and X axis\n             * tick position logic.\n             * @private\n             */\n            function getTimeTicks(normalizedInterval, min, max, startOfWeek, positions, closestDistance, findHigherRanks) {\n                if (positions === void 0) { positions = []; }\n                if (closestDistance === void 0) { closestDistance = 0; }\n                var higherRanks = {}, tickPixelIntervalOption = this.options.tickPixelInterval, time = this.chart.time, \n                // Record all the start positions of a segment, to use when\n                // deciding what's a gap in the data.\n                segmentStarts = [];\n                var end, segmentPositions, hasCrossedHigherRank, info, outsideMax, start = 0, groupPositions = [], lastGroupPosition = -Number.MAX_VALUE;\n                // The positions are not always defined, for example for ordinal\n                // positions when data has regular interval (#1557, #2090)\n                if ((!this.options.ordinal && !this.options.breaks) ||\n                    !positions ||\n                    positions.length < 3 ||\n                    typeof min === 'undefined') {\n                    return time.getTimeTicks.apply(time, arguments);\n                }\n                // Analyze the positions array to split it into segments on gaps\n                // larger than 5 times the closest distance. The closest distance is\n                // already found at this point, so we reuse that instead of\n                // computing it again.\n                var posLength = positions.length;\n                for (end = 0; end < posLength; end++) {\n                    outsideMax = end && positions[end - 1] > max;\n                    if (positions[end] < min) { // Set the last position before min\n                        start = end;\n                    }\n                    if (end === posLength - 1 ||\n                        positions[end + 1] - positions[end] > closestDistance * 5 ||\n                        outsideMax) {\n                        // For each segment, calculate the tick positions from the\n                        // getTimeTicks utility function. The interval will be the\n                        // same regardless of how long the segment is.\n                        if (positions[end] > lastGroupPosition) { // #1475\n                            segmentPositions = time.getTimeTicks(normalizedInterval, positions[start], positions[end], startOfWeek);\n                            // Prevent duplicate groups, for example for multiple\n                            // segments within one larger time frame (#1475)\n                            while (segmentPositions.length &&\n                                segmentPositions[0] <= lastGroupPosition) {\n                                segmentPositions.shift();\n                            }\n                            if (segmentPositions.length) {\n                                lastGroupPosition =\n                                    segmentPositions[segmentPositions.length - 1];\n                            }\n                            segmentStarts.push(groupPositions.length);\n                            groupPositions = groupPositions.concat(segmentPositions);\n                        }\n                        // Set start of next segment\n                        start = end + 1;\n                    }\n                    if (outsideMax) {\n                        break;\n                    }\n                }\n                // Get the grouping info from the last of the segments. The info is\n                // the same for all segments.\n                if (segmentPositions) {\n                    info = segmentPositions.info;\n                    // Optionally identify ticks with higher rank, for example\n                    // when the ticks have crossed midnight.\n                    if (findHigherRanks && info.unitRange <= timeUnits.hour) {\n                        end = groupPositions.length - 1;\n                        // Compare points two by two\n                        for (start = 1; start < end; start++) {\n                            if (time.dateFormat('%d', groupPositions[start]) !==\n                                time.dateFormat('%d', groupPositions[start - 1])) {\n                                higherRanks[groupPositions[start]] = 'day';\n                                hasCrossedHigherRank = true;\n                            }\n                        }\n                        // If the complete array has crossed midnight, we want\n                        // to mark the first positions also as higher rank\n                        if (hasCrossedHigherRank) {\n                            higherRanks[groupPositions[0]] = 'day';\n                        }\n                        info.higherRanks = higherRanks;\n                    }\n                    // Save the info\n                    info.segmentStarts = segmentStarts;\n                    groupPositions.info = info;\n                }\n                else {\n                    error(12, false, this.chart);\n                }\n                // Don't show ticks within a gap in the ordinal axis, where the\n                // space between two points is greater than a portion of the tick\n                // pixel interval\n                if (findHigherRanks && defined(tickPixelIntervalOption)) {\n                    var length_1 = groupPositions.length, translatedArr = [], distances = [];\n                    var itemToRemove = void 0, translated = void 0, lastTranslated = void 0, medianDistance = void 0, distance = void 0, i = length_1;\n                    // Find median pixel distance in order to keep a reasonably even\n                    // distance between ticks (#748)\n                    while (i--) {\n                        translated = this.translate(groupPositions[i]);\n                        if (lastTranslated) {\n                            distances[i] = lastTranslated - translated;\n                        }\n                        translatedArr[i] = lastTranslated = translated;\n                    }\n                    distances.sort(function (a, b) { return a - b; });\n                    medianDistance = distances[Math.floor(distances.length / 2)];\n                    if (medianDistance < tickPixelIntervalOption * 0.6) {\n                        medianDistance = null;\n                    }\n                    // Now loop over again and remove ticks where needed\n                    i = groupPositions[length_1 - 1] > max ? length_1 - 1 : length_1; // #817\n                    lastTranslated = void 0;\n                    while (i--) {\n                        translated = translatedArr[i];\n                        distance = Math.abs(lastTranslated - translated);\n                        // #4175 - when axis is reversed, the distance, is negative but\n                        // tickPixelIntervalOption positive, so we need to compare the\n                        // same values\n                        // Remove ticks that are closer than 0.6 times the pixel\n                        // interval from the one to the right, but not if it is close to\n                        // the median distance (#748).\n                        if (lastTranslated &&\n                            distance < tickPixelIntervalOption * 0.8 &&\n                            (medianDistance === null || distance < medianDistance * 0.8)) {\n                            // Is this a higher ranked position with a normal\n                            // position to the right?\n                            if (higherRanks[groupPositions[i]] &&\n                                !higherRanks[groupPositions[i + 1]]) {\n                                // Yes: remove the lower ranked neighbour to the\n                                // right\n                                itemToRemove = i + 1;\n                                lastTranslated = translated; // #709\n                            }\n                            else {\n                                // No: remove this one\n                                itemToRemove = i;\n                            }\n                            groupPositions.splice(itemToRemove, 1);\n                        }\n                        else {\n                            lastTranslated = translated;\n                        }\n                    }\n                }\n                return groupPositions;\n            }\n            /**\n             * Get axis position of given index of the extended ordinal positions.\n             * Used only when panning an ordinal axis.\n             *\n             * @private\n             * @function Highcharts.Axis#index2val\n             * @param {number} index\n             * The index value of searched point\n             */\n            function index2val(index) {\n                var axis = this, ordinal = axis.ordinal, \n                // Context could be changed to extendedOrdinalPositions.\n                ordinalPositions = ordinal.positions;\n                // The visible range contains only equally spaced values.\n                if (!ordinalPositions) {\n                    return index;\n                }\n                var i = ordinalPositions.length - 1, distance;\n                if (index < 0) { // Out of range, in effect panning to the left\n                    index = ordinalPositions[0];\n                }\n                else if (index > i) { // Out of range, panning to the right\n                    index = ordinalPositions[i];\n                }\n                else { // Split it up\n                    i = Math.floor(index);\n                    distance = index - i; // The decimal\n                }\n                if (typeof distance !== 'undefined' &&\n                    typeof ordinalPositions[i] !== 'undefined') {\n                    return ordinalPositions[i] + (distance ?\n                        distance *\n                            (ordinalPositions[i + 1] - ordinalPositions[i]) :\n                        0);\n                }\n                return index;\n            }\n            /**\n             * Translate from linear (internal) to axis value.\n             *\n             * @private\n             * @function Highcharts.Axis#lin2val\n             * @param {number} val\n             * The linear abstracted value.\n             */\n            function lin2val(val) {\n                var axis = this, ordinal = axis.ordinal, localMin = axis.old ? axis.old.min : axis.min, localA = axis.old ? axis.old.transA : axis.transA;\n                // Always use extendedPositions (#19816)\n                var positions = ordinal.getExtendedPositions();\n                // In some cases (especially in early stages of the chart creation) the\n                // getExtendedPositions might return undefined.\n                if (positions && positions.length) {\n                    // Convert back from modivied value to pixels. // #15970\n                    var pixelVal = correctFloat((val - localMin) * localA +\n                        axis.minPixelPadding), index = correctFloat(ordinal.getIndexOfPoint(pixelVal, positions)), mantissa = correctFloat(index % 1);\n                    // Check if the index is inside position array. If true,\n                    // read/approximate value for that exact index.\n                    if (index >= 0 && index <= positions.length - 1) {\n                        var leftNeighbour = positions[Math.floor(index)], rightNeighbour = positions[Math.ceil(index)], distance = rightNeighbour - leftNeighbour;\n                        return positions[Math.floor(index)] + mantissa * distance;\n                    }\n                }\n                // If the value is outside positions array, return initial value\n                return val; // #16784\n            }\n            /**\n             * Internal function to calculate the precise index in ordinalPositions\n             * array.\n             * @private\n             */\n            function getIndexInArray(ordinalPositions, val) {\n                var index = OrdinalAxis.Additions.findIndexOf(ordinalPositions, val, true);\n                if (ordinalPositions[index] === val) {\n                    return index;\n                }\n                var percent = (val - ordinalPositions[index]) /\n                    (ordinalPositions[index + 1] - ordinalPositions[index]);\n                return index + percent;\n            }\n            /**\n            * @private\n            */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (!axis.ordinal) {\n                    axis.ordinal = new OrdinalAxis.Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisFoundExtremes() {\n                var axis = this, eventArgs = axis.eventArgs, options = axis.options;\n                if (axis.isXAxis &&\n                    defined(options.overscroll) &&\n                    options.overscroll !== 0 &&\n                    isNumber(axis.max) &&\n                    isNumber(axis.min)) {\n                    if (axis.options.ordinal && !axis.ordinal.originalOrdinalRange) {\n                        // Calculate the original ordinal range\n                        axis.ordinal.getExtendedPositions(false);\n                    }\n                    if (axis.max === axis.dataMax &&\n                        (\n                        // Panning is an exception. We don't want to apply\n                        // overscroll when panning over the dataMax\n                        (eventArgs === null || eventArgs === void 0 ? void 0 : eventArgs.trigger) !== 'pan' ||\n                            axis.isInternal) &&\n                        // Scrollbar buttons are the other execption\n                        (eventArgs === null || eventArgs === void 0 ? void 0 : eventArgs.trigger) !== 'navigator') {\n                        var overscroll = axis.ordinal.convertOverscroll(options.overscroll);\n                        axis.max += overscroll;\n                        // Live data and buttons require translation for the min:\n                        if (!axis.isInternal &&\n                            defined(axis.userMin) &&\n                            (eventArgs === null || eventArgs === void 0 ? void 0 : eventArgs.trigger) !== 'mousewheel') {\n                            axis.min += overscroll;\n                        }\n                    }\n                }\n            }\n            /**\n             * For ordinal axis, that loads data async, redraw axis after data is\n             * loaded. If we don't do that, axis will have the same extremes as\n             * previously, but ordinal positions won't be calculated. See #10290\n             * @private\n             */\n            function onAxisAfterSetScale() {\n                var axis = this;\n                if (axis.horiz && !axis.isDirty) {\n                    axis.isDirty = axis.isOrdinal &&\n                        axis.chart.navigator &&\n                        !axis.chart.navigator.adaptToUpdatedData;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInitialAxisTranslation() {\n                var axis = this;\n                if (axis.ordinal) {\n                    axis.ordinal.beforeSetTickPositions();\n                    axis.tickInterval = axis.ordinal.postProcessTickInterval(axis.tickInterval);\n                }\n            }\n            /**\n             * Extending the Chart.pan method for ordinal axes\n             * @private\n             */\n            function onChartPan(e) {\n                var chart = this, xAxis = chart.xAxis[0], overscroll = xAxis.ordinal.convertOverscroll(xAxis.options.overscroll), chartX = e.originalEvent.chartX, panning = chart.options.chart.panning;\n                var runBase = false;\n                if (panning &&\n                    panning.type !== 'y' &&\n                    xAxis.options.ordinal &&\n                    xAxis.series.length) {\n                    var mouseDownX = chart.mouseDownX, extremes = xAxis.getExtremes(), dataMin = extremes.dataMin, dataMax = extremes.dataMax, min = extremes.min, max = extremes.max, hoverPoints = chart.hoverPoints, closestPointRange = (xAxis.closestPointRange ||\n                        (xAxis.ordinal && xAxis.ordinal.overscrollPointsRange)), pointPixelWidth = (xAxis.translationSlope *\n                        (xAxis.ordinal.slope || closestPointRange)), \n                    // How many ordinal units did we move?\n                    movedUnits = Math.round((mouseDownX - chartX) / pointPixelWidth), \n                    // Get index of all the chart's points\n                    extendedOrdinalPositions = xAxis.ordinal.getExtendedPositions(), extendedAxis = {\n                        ordinal: {\n                            positions: extendedOrdinalPositions,\n                            extendedOrdinalPositions: extendedOrdinalPositions\n                        }\n                    }, index2val_1 = xAxis.index2val, val2lin_1 = xAxis.val2lin;\n                    var trimmedRange = void 0, ordinalPositions = void 0;\n                    // Make sure panning to the edges does not decrease the zoomed range\n                    if ((min <= dataMin && movedUnits < 0) ||\n                        (max + overscroll >= dataMax && movedUnits > 0)) {\n                        return;\n                    }\n                    // We have an ordinal axis, but the data is equally spaced\n                    if (!extendedAxis.ordinal.positions) {\n                        runBase = true;\n                    }\n                    else if (Math.abs(movedUnits) > 1) {\n                        // Remove active points for shared tooltip\n                        if (hoverPoints) {\n                            hoverPoints.forEach(function (point) {\n                                point.setState();\n                            });\n                        }\n                        // In grouped data series, the last ordinal position represents\n                        // the grouped data, which is to the left of the real data max.\n                        // If we don't compensate for this, we will be allowed to pan\n                        // grouped data series passed the right of the plot area.\n                        ordinalPositions = extendedAxis.ordinal.positions;\n                        if (dataMax >\n                            ordinalPositions[ordinalPositions.length - 1]) {\n                            ordinalPositions.push(dataMax);\n                        }\n                        // Get the new min and max values by getting the ordinal index\n                        // for the current extreme, then add the moved units and\n                        // translate back to values. This happens on the extended\n                        // ordinal positions if the new position is out of range, else\n                        // it happens on the current x axis which is smaller and faster.\n                        chart.setFixedRange(max - min);\n                        trimmedRange = xAxis.navigatorAxis\n                            .toFixedRange(void 0, void 0, index2val_1.apply(extendedAxis, [\n                            val2lin_1.apply(extendedAxis, [min, true]) +\n                                movedUnits\n                        ]), index2val_1.apply(extendedAxis, [\n                            val2lin_1.apply(extendedAxis, [max, true]) +\n                                movedUnits\n                        ]));\n                        // Apply it if it is within the available data range\n                        if (trimmedRange.min >= Math.min(extremes.dataMin, min) &&\n                            trimmedRange.max <= Math.max(dataMax, max) + overscroll) {\n                            xAxis.setExtremes(trimmedRange.min, trimmedRange.max, true, false, { trigger: 'pan' });\n                        }\n                        chart.mouseDownX = chartX; // Set new reference for next run\n                        css(chart.container, { cursor: 'move' });\n                    }\n                }\n                else {\n                    runBase = true;\n                }\n                // Revert to the linear chart.pan version\n                if (runBase || (panning && /y/.test(panning.type))) {\n                    if (overscroll) {\n                        xAxis.max = xAxis.dataMax + overscroll;\n                    }\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesUpdatedData() {\n                var xAxis = this.xAxis;\n                // Destroy the extended ordinal index on updated data\n                // and destroy extendedOrdinalPositions, #16055.\n                if (xAxis && xAxis.options.ordinal) {\n                    delete xAxis.ordinal.index;\n                    delete xAxis.ordinal.originalOrdinalRange;\n                }\n            }\n            /**\n             * Translate from a linear axis value to the corresponding ordinal axis\n             * position. If there are no gaps in the ordinal axis this will be the\n             * same. The translated value is the value that the point would have if\n             * the axis was linear, using the same min and max.\n             *\n             * @private\n             * @function Highcharts.Axis#val2lin\n             * @param {number} val\n             * The axis value.\n             * @param {boolean} [toIndex]\n             * Whether to return the index in the ordinalPositions or the new value.\n             */\n            function val2lin(val, toIndex) {\n                var axis = this, ordinal = axis.ordinal, ordinalPositions = ordinal.positions;\n                var slope = ordinal.slope, extendedOrdinalPositions;\n                if (!ordinalPositions) {\n                    return val;\n                }\n                var ordinalLength = ordinalPositions.length;\n                var ordinalIndex;\n                // If the searched value is inside visible plotArea, ivastigate the\n                // value basing on ordinalPositions.\n                if (ordinalPositions[0] <= val &&\n                    ordinalPositions[ordinalLength - 1] >= val) {\n                    ordinalIndex = getIndexInArray(ordinalPositions, val);\n                    // Final return value is based on ordinalIndex\n                }\n                else {\n                    extendedOrdinalPositions =\n                        ordinal.getExtendedPositions &&\n                            ordinal.getExtendedPositions();\n                    if (!(extendedOrdinalPositions && extendedOrdinalPositions.length)) {\n                        return val;\n                    }\n                    var length_2 = extendedOrdinalPositions.length;\n                    if (!slope) {\n                        slope =\n                            (extendedOrdinalPositions[length_2 - 1] -\n                                extendedOrdinalPositions[0]) /\n                                length_2;\n                    }\n                    // `originalPointReference` is equal to the index of first point of\n                    // ordinalPositions in extendedOrdinalPositions.\n                    var originalPositionsReference = getIndexInArray(extendedOrdinalPositions, ordinalPositions[0]);\n                    // If the searched value is outside the visiblePlotArea,\n                    // check if it is inside extendedOrdinalPositions.\n                    if (val >= extendedOrdinalPositions[0] &&\n                        val <=\n                            extendedOrdinalPositions[length_2 - 1]) {\n                        // Return Value\n                        ordinalIndex = getIndexInArray(extendedOrdinalPositions, val) -\n                            originalPositionsReference;\n                    }\n                    else {\n                        if (!toIndex) {\n                            // If the value is outside positions array,\n                            // return initial value, #16784\n                            return val;\n                        }\n                        // Since ordinal.slope is the average distance between 2\n                        // points on visible plotArea, this can be used to calculate\n                        // the approximate position of the point, which is outside\n                        // the extendedOrdinalPositions.\n                        if (val < extendedOrdinalPositions[0]) {\n                            var diff = extendedOrdinalPositions[0] - val, approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                -originalPositionsReference -\n                                    approximateIndexOffset;\n                        }\n                        else {\n                            var diff = val -\n                                extendedOrdinalPositions[length_2 - 1], approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                approximateIndexOffset +\n                                    length_2 -\n                                    originalPositionsReference;\n                        }\n                    }\n                }\n                return toIndex ? ordinalIndex : slope * (ordinalIndex || 0) +\n                    ordinal.offset;\n            }\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(axis) {\n                    this.index = {};\n                    this.axis = axis;\n                }\n                /* *\n                *\n                *  Functions\n                *\n                * */\n                /**\n                 * Calculate the ordinal positions before tick positions are calculated.\n                 * @private\n                 */\n                Additions.prototype.beforeSetTickPositions = function () {\n                    var _a;\n                    var axis = this.axis, ordinal = axis.ordinal, extremes = axis.getExtremes(), min = extremes.min, max = extremes.max, hasBreaks = (_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks, isOrdinal = axis.options.ordinal;\n                    var len, uniqueOrdinalPositions, dist, minIndex, maxIndex, slope, i, ordinalPositions = [], overscrollPointsRange = Number.MAX_VALUE, useOrdinal = false, adjustOrdinalExtremesPoints = false, isBoosted = false;\n                    // Apply the ordinal logic\n                    if (isOrdinal || hasBreaks) { // #4167 YAxis is never ordinal ?\n                        var distanceBetweenPoint_1 = 0;\n                        axis.series.forEach(function (series, i) {\n                            uniqueOrdinalPositions = [];\n                            // For an axis with multiple series, check if the distance\n                            // between points is identical throughout all series.\n                            if (i > 0 &&\n                                series.options.id !== 'highcharts-navigator-series' &&\n                                series.processedXData.length > 1) {\n                                adjustOrdinalExtremesPoints =\n                                    distanceBetweenPoint_1 !== series.processedXData[1] -\n                                        series.processedXData[0];\n                            }\n                            distanceBetweenPoint_1 =\n                                series.processedXData[1] - series.processedXData[0];\n                            if (series.boosted) {\n                                isBoosted = series.boosted;\n                            }\n                            if (series.reserveSpace() &&\n                                (series\n                                    .takeOrdinalPosition !== false || hasBreaks)) {\n                                // Concatenate the processed X data into the existing\n                                // positions, or the empty array\n                                ordinalPositions = ordinalPositions.concat(series.processedXData);\n                                len = ordinalPositions.length;\n                                // Remove duplicates (#1588)\n                                ordinalPositions.sort(function (a, b) {\n                                    // Without a custom function it is sorted as strings\n                                    return a - b;\n                                });\n                                overscrollPointsRange = Math.min(overscrollPointsRange, pick(\n                                // Check for a single-point series:\n                                series.closestPointRange, overscrollPointsRange));\n                                if (len) {\n                                    i = 0;\n                                    while (i < len - 1) {\n                                        if (ordinalPositions[i] !==\n                                            ordinalPositions[i + 1]) {\n                                            uniqueOrdinalPositions.push(ordinalPositions[i + 1]);\n                                        }\n                                        i++;\n                                    }\n                                    // Check first item:\n                                    if (uniqueOrdinalPositions[0] !==\n                                        ordinalPositions[0]) {\n                                        uniqueOrdinalPositions.unshift(ordinalPositions[0]);\n                                    }\n                                    ordinalPositions = uniqueOrdinalPositions;\n                                }\n                            }\n                        });\n                        if (!axis.ordinal.originalOrdinalRange) {\n                            // Calculate current originalOrdinalRange\n                            axis.ordinal.originalOrdinalRange =\n                                (ordinalPositions.length - 1) * overscrollPointsRange;\n                        }\n                        // If the distance between points is not identical throughout\n                        // all series, remove the first and last ordinal position to\n                        // avoid enabling ordinal logic when it is not needed, #17405.\n                        // Only for boosted series because changes are negligible.\n                        if (adjustOrdinalExtremesPoints && isBoosted) {\n                            ordinalPositions.pop();\n                            ordinalPositions.shift();\n                        }\n                        // Cache the length\n                        len = ordinalPositions.length;\n                        // Check if we really need the overhead of mapping axis data\n                        // against the ordinal positions. If the series consist of\n                        // evenly spaced data any way, we don't need any ordinal logic.\n                        if (len > 2) { // Two points have equal distance by default\n                            dist = ordinalPositions[1] - ordinalPositions[0];\n                            i = len - 1;\n                            while (i-- && !useOrdinal) {\n                                if (ordinalPositions[i + 1] - ordinalPositions[i] !==\n                                    dist) {\n                                    useOrdinal = true;\n                                }\n                            }\n                            // When zooming in on a week, prevent axis padding for\n                            // weekends even though the data within the week is evenly\n                            // spaced.\n                            if (!axis.options.keepOrdinalPadding &&\n                                (ordinalPositions[0] - min > dist ||\n                                    (max -\n                                        ordinalPositions[ordinalPositions.length - 1]) > dist)) {\n                                useOrdinal = true;\n                            }\n                        }\n                        else if (axis.options.overscroll) {\n                            if (len === 2) {\n                                // Exactly two points, distance for overscroll is fixed:\n                                overscrollPointsRange =\n                                    ordinalPositions[1] - ordinalPositions[0];\n                            }\n                            else if (len === 1) {\n                                // We have just one point, closest distance is unknown.\n                                // Assume then it is last point and overscrolled range:\n                                overscrollPointsRange = axis.ordinal.convertOverscroll(axis.options.overscroll);\n                                ordinalPositions = [\n                                    ordinalPositions[0],\n                                    ordinalPositions[0] + overscrollPointsRange\n                                ];\n                            }\n                            else {\n                                // In case of zooming in on overscrolled range, stick to\n                                // the old range:\n                                overscrollPointsRange = ordinal.overscrollPointsRange;\n                            }\n                        }\n                        // Record the slope and offset to compute the linear values from\n                        // the array index. Since the ordinal positions may exceed the\n                        // current range, get the start and end positions within it\n                        // (#719, #665b)\n                        if (useOrdinal || axis.forceOrdinal) {\n                            if (axis.options.overscroll) {\n                                ordinal.overscrollPointsRange = overscrollPointsRange;\n                                ordinalPositions = ordinalPositions.concat(ordinal.getOverscrollPositions());\n                            }\n                            // Register\n                            ordinal.positions = ordinalPositions;\n                            // This relies on the ordinalPositions being set. Use\n                            // Math.max and Math.min to prevent padding on either sides\n                            // of the data.\n                            minIndex = axis.ordinal2lin(// #5979\n                            Math.max(min, ordinalPositions[0]), true);\n                            maxIndex = Math.max(axis.ordinal2lin(Math.min(max, ordinalPositions[ordinalPositions.length - 1]), true), 1); // #3339\n                            // Set the slope and offset of the values compared to the\n                            // indices in the ordinal positions.\n                            ordinal.slope = slope =\n                                (max - min) / (maxIndex - minIndex);\n                            ordinal.offset = min - (minIndex * slope);\n                        }\n                        else {\n                            ordinal.overscrollPointsRange = pick(axis.closestPointRange, ordinal.overscrollPointsRange);\n                            ordinal.positions = axis.ordinal.slope = ordinal.offset =\n                                void 0;\n                        }\n                    }\n                    axis.isOrdinal = isOrdinal && useOrdinal; // #3818, #4196, #4926\n                    ordinal.groupIntervalFactor = null; // Reset for next run\n                };\n                /**\n                 * Faster way of using the Array.indexOf method.\n                 * Works for sorted arrays only with unique values.\n                 *\n                 * @param {Array} sortedArray\n                 *        The sorted array inside which we are looking for.\n                 * @param {number} key\n                 *        The key to being found.\n                 * @param {boolean} indirectSearch\n                 *        In case of lack of the point in the array, should return\n                 *        value be equal to -1 or the closest smaller index.\n                 *  @private\n                 */\n                Additions.findIndexOf = function (sortedArray, key, indirectSearch) {\n                    var start = 0, end = sortedArray.length - 1, middle;\n                    while (start < end) {\n                        middle = Math.ceil((start + end) / 2);\n                        // Key found as the middle element.\n                        if (sortedArray[middle] <= key) {\n                            // Continue searching to the right.\n                            start = middle;\n                        }\n                        else {\n                            // Continue searching to the left.\n                            end = middle - 1;\n                        }\n                    }\n                    if (sortedArray[start] === key) {\n                        return start;\n                    }\n                    // Key could not be found.\n                    return !indirectSearch ? -1 : start;\n                };\n                /**\n                 * Get the ordinal positions for the entire data set. This is necessary\n                 * in chart panning because we need to find out what points or data\n                 * groups are available outside the visible range. When a panning\n                 * operation starts, if an index for the given grouping does not exists,\n                 * it is created and cached. This index is deleted on updated data, so\n                 * it will be regenerated the next time a panning operation starts.\n                 * @private\n                 */\n                Additions.prototype.getExtendedPositions = function (withOverscroll) {\n                    var _a;\n                    if (withOverscroll === void 0) { withOverscroll = true; }\n                    var ordinal = this, axis = ordinal.axis, axisProto = axis.constructor.prototype, chart = axis.chart, grouping = (_a = axis.series[0]) === null || _a === void 0 ? void 0 : _a.currentDataGrouping, key = grouping ?\n                        grouping.count + grouping.unitName :\n                        'raw', overscroll = withOverscroll ?\n                        axis.ordinal.convertOverscroll(axis.options.overscroll) : 0, extremes = axis.getExtremes();\n                    var fakeAxis, fakeSeries = void 0, ordinalIndex = ordinal.index;\n                    // If this is the first time, or the ordinal index is deleted by\n                    // updatedData,\n                    // create it.\n                    if (!ordinalIndex) {\n                        ordinalIndex = ordinal.index = {};\n                    }\n                    if (!ordinalIndex[key]) {\n                        // Create a fake axis object where the extended ordinal\n                        // positions are emulated\n                        fakeAxis = {\n                            series: [],\n                            chart: chart,\n                            forceOrdinal: false,\n                            getExtremes: function () {\n                                return {\n                                    min: extremes.dataMin,\n                                    max: extremes.dataMax + overscroll\n                                };\n                            },\n                            applyGrouping: axisProto.applyGrouping,\n                            getGroupPixelWidth: axisProto.getGroupPixelWidth,\n                            getTimeTicks: axisProto.getTimeTicks,\n                            options: {\n                                ordinal: true\n                            },\n                            ordinal: {\n                                getGroupIntervalFactor: this.getGroupIntervalFactor\n                            },\n                            ordinal2lin: axisProto.ordinal2lin,\n                            getIndexOfPoint: axisProto.getIndexOfPoint,\n                            val2lin: axisProto.val2lin // #2590\n                        };\n                        fakeAxis.ordinal.axis = fakeAxis;\n                        // Add the fake series to hold the full data, then apply\n                        // processData to it\n                        axis.series.forEach(function (series) {\n                            var _a, _b, _c;\n                            fakeSeries = {\n                                xAxis: fakeAxis,\n                                xData: series.xData.slice(),\n                                chart: chart,\n                                groupPixelWidth: series.groupPixelWidth,\n                                destroyGroupedData: H.noop,\n                                getProcessedData: Series.prototype.getProcessedData,\n                                applyGrouping: Series.prototype.applyGrouping,\n                                reserveSpace: Series.prototype.reserveSpace,\n                                visible: series.visible\n                            };\n                            if (withOverscroll) {\n                                fakeSeries.xData = fakeSeries.xData.concat(ordinal.getOverscrollPositions());\n                            }\n                            fakeSeries.options = {\n                                dataGrouping: grouping ? {\n                                    firstAnchor: (_a = series.options.dataGrouping) === null || _a === void 0 ? void 0 : _a.firstAnchor,\n                                    anchor: (_b = series.options.dataGrouping) === null || _b === void 0 ? void 0 : _b.anchor,\n                                    lastAnchor: (_c = series.options.dataGrouping) === null || _c === void 0 ? void 0 : _c.firstAnchor,\n                                    enabled: true,\n                                    forced: true,\n                                    // Doesn't matter which, use the fastest\n                                    approximation: 'open',\n                                    units: [[\n                                            grouping.unitName,\n                                            [grouping.count]\n                                        ]]\n                                } : {\n                                    enabled: false\n                                }\n                            };\n                            fakeAxis.series.push(fakeSeries);\n                            series.processData.apply(fakeSeries);\n                        });\n                        fakeAxis.applyGrouping({ hasExtremesChanged: true });\n                        // Force to use the ordinal when points are evenly spaced (e.g.\n                        // weeks), #3825.\n                        if (((fakeSeries === null || fakeSeries === void 0 ? void 0 : fakeSeries.closestPointRange) !==\n                            (fakeSeries === null || fakeSeries === void 0 ? void 0 : fakeSeries.basePointRange)) &&\n                            fakeSeries.currentDataGrouping) {\n                            fakeAxis.forceOrdinal = true;\n                        }\n                        // Run beforeSetTickPositions to compute the ordinalPositions\n                        axis.ordinal.beforeSetTickPositions.apply({ axis: fakeAxis });\n                        if (!axis.ordinal.originalOrdinalRange &&\n                            fakeAxis.ordinal.originalOrdinalRange) {\n                            axis.ordinal.originalOrdinalRange =\n                                fakeAxis.ordinal.originalOrdinalRange;\n                        }\n                        // Cache it\n                        ordinalIndex[key] = fakeAxis.ordinal.positions;\n                    }\n                    return ordinalIndex[key];\n                };\n                /**\n                 * Find the factor to estimate how wide the plot area would have been if\n                 * ordinal gaps were included. This value is used to compute an imagined\n                 * plot width in order to establish the data grouping interval.\n                 *\n                 * A real world case is the intraday-candlestick example. Without this\n                 * logic, it would show the correct data grouping when viewing a range\n                 * within each day, but once moving the range to include the gap between\n                 * two days, the interval would include the cut-away night hours and the\n                 * data grouping would be wrong. So the below method tries to compensate\n                 * by identifying the most common point interval, in this case days.\n                 *\n                 * An opposite case is presented in issue #718. We have a long array of\n                 * daily data, then one point is appended one hour after the last point.\n                 * We expect the data grouping not to change.\n                 *\n                 * In the future, if we find cases where this estimation doesn't work\n                 * optimally, we might need to add a second pass to the data grouping\n                 * logic, where we do another run with a greater interval if the number\n                 * of data groups is more than a certain fraction of the desired group\n                 * count.\n                 * @private\n                 */\n                Additions.prototype.getGroupIntervalFactor = function (xMin, xMax, series) {\n                    var ordinal = this, processedXData = series.processedXData, len = processedXData.length, distances = [];\n                    var median, i, groupIntervalFactor = ordinal.groupIntervalFactor;\n                    // Only do this computation for the first series, let the other\n                    // inherit it (#2416)\n                    if (!groupIntervalFactor) {\n                        // Register all the distances in an array\n                        for (i = 0; i < len - 1; i++) {\n                            distances[i] = (processedXData[i + 1] -\n                                processedXData[i]);\n                        }\n                        // Sort them and find the median\n                        distances.sort(function (a, b) {\n                            return a - b;\n                        });\n                        median = distances[Math.floor(len / 2)];\n                        // Compensate for series that don't extend through the entire\n                        // axis extent. #1675.\n                        xMin = Math.max(xMin, processedXData[0]);\n                        xMax = Math.min(xMax, processedXData[len - 1]);\n                        ordinal.groupIntervalFactor = groupIntervalFactor =\n                            (len * median) / (xMax - xMin);\n                    }\n                    // Return the factor needed for data grouping\n                    return groupIntervalFactor;\n                };\n                /**\n                 * Get index of point inside the ordinal positions array.\n                 *\n                 * @private\n                 * @param {number} val\n                 * The pixel value of a point.\n                 *\n                 * @param {Array<number>} [ordinalArray]\n                 * An array of all points available on the axis for the given data set.\n                 * Either ordinalPositions if the value is inside the plotArea or\n                 * extendedOrdinalPositions if not.\n                 */\n                Additions.prototype.getIndexOfPoint = function (val, ordinalArray) {\n                    var ordinal = this, axis = ordinal.axis;\n                    var firstPointVal = 0;\n                    // Check whether the series has at least one point inside the chart\n                    var hasPointsInside = function (series) {\n                        var min = axis.min, max = axis.max;\n                        if (defined(min) && defined(max)) {\n                            return series.points.some(function (point) {\n                                return point.x >= min && point.x <= max;\n                            });\n                        }\n                        return false;\n                    };\n                    var firstPointX;\n                    // When more series assign to axis, find the smallest one, #15987.\n                    axis.series.forEach(function (series) {\n                        var _a;\n                        var firstPoint = (_a = series.points) === null || _a === void 0 ? void 0 : _a[0];\n                        if (defined(firstPoint === null || firstPoint === void 0 ? void 0 : firstPoint.plotX) &&\n                            (firstPoint.plotX < firstPointX ||\n                                !defined(firstPointX)) &&\n                            hasPointsInside(series)) {\n                            firstPointX = firstPoint.plotX;\n                            firstPointVal = firstPoint.x;\n                        }\n                    });\n                    // If undefined, give a default value\n                    firstPointX !== null && firstPointX !== void 0 ? firstPointX : (firstPointX = axis.minPixelPadding);\n                    // Distance in pixels between two points on the ordinal axis in the\n                    // current zoom.\n                    var ordinalPointPixelInterval = axis.translationSlope * (ordinal.slope ||\n                        axis.closestPointRange ||\n                        ordinal.overscrollPointsRange), \n                    // `toValue` for the first point.\n                    shiftIndex = correctFloat((val - firstPointX) / ordinalPointPixelInterval);\n                    return Additions.findIndexOf(ordinalArray, firstPointVal, true) + shiftIndex;\n                };\n                /**\n                 * Get ticks for an ordinal axis within a range where points don't\n                 * exist. It is required when overscroll is enabled. We can't base on\n                 * points, because we may not have any, so we use approximated\n                 * pointRange and generate these ticks between Axis.dataMax,\n                 * Axis.dataMax + Axis.overscroll evenly spaced. Used in panning and\n                 * navigator scrolling.\n                 * @private\n                 */\n                Additions.prototype.getOverscrollPositions = function () {\n                    var ordinal = this, axis = ordinal.axis, extraRange = ordinal.convertOverscroll(axis.options.overscroll), distance = ordinal.overscrollPointsRange, positions = [];\n                    var max = axis.dataMax;\n                    if (defined(distance)) {\n                        // Max + pointRange because we need to scroll to the last\n                        while (max <= axis.dataMax + extraRange) {\n                            max += distance;\n                            positions.push(max);\n                        }\n                    }\n                    return positions;\n                };\n                /**\n                 * Make the tick intervals closer because the ordinal gaps make the\n                 * ticks spread out or cluster.\n                 * @private\n                 */\n                Additions.prototype.postProcessTickInterval = function (tickInterval) {\n                    // Problem: https://jsfiddle.net/highcharts/FQm4E/1/. This is a case\n                    // where this algorithm doesn't work optimally. In this case, the\n                    // tick labels are spread out per week, but all the gaps reside\n                    // within weeks. So we have a situation where the labels are courser\n                    // than the ordinal gaps, and thus the tick interval should not be\n                    // altered.\n                    var ordinal = this, axis = ordinal.axis, ordinalSlope = ordinal.slope;\n                    var ret;\n                    if (ordinalSlope) {\n                        if (!axis.options.breaks) {\n                            ret = (tickInterval /\n                                (ordinalSlope / axis.closestPointRange));\n                        }\n                        else {\n                            ret = axis.closestPointRange || tickInterval; // #7275\n                        }\n                    }\n                    else {\n                        ret = tickInterval;\n                    }\n                    return ret;\n                };\n                /**\n                 * If overscroll is pixel or pecentage value, convert it to axis range.\n                 *\n                 * @private\n                 * @param {number | string} overscroll\n                 * Overscroll value in axis range, pixels or percentage value.\n                 * @return {number}\n                 * Overscroll value in axis range.\n                 */\n                Additions.prototype.convertOverscroll = function (overscroll) {\n                    if (overscroll === void 0) { overscroll = 0; }\n                    var ordinal = this, axis = ordinal.axis, calculateOverscroll = function (overscrollPercentage) {\n                        return pick(ordinal.originalOrdinalRange, defined(axis.dataMax) && defined(axis.dataMin) ?\n                            axis.dataMax - axis.dataMin : 0) * overscrollPercentage;\n                    };\n                    if (isString(overscroll)) {\n                        var overscrollValue = parseInt(overscroll, 10);\n                        if (/%$/.test(overscroll)) {\n                            // If overscroll is percentage\n                            return calculateOverscroll(overscrollValue / 100);\n                        }\n                        if (/px/.test(overscroll)) {\n                            // If overscroll is pixels, it is limited to 90% of the axis\n                            // length to prevent division by zero\n                            var limitedOverscrollValue = Math.min(overscrollValue, axis.len * 0.9), pixelToPercent = limitedOverscrollValue / axis.len;\n                            return calculateOverscroll(pixelToPercent / (1 - pixelToPercent));\n                        }\n                        // If overscroll is a string but not pixels or percentage,\n                        // return 0 as no overscroll\n                        return 0;\n                    }\n                    return overscroll;\n                };\n                return Additions;\n            }());\n            OrdinalAxis.Additions = Additions;\n        })(OrdinalAxis || (OrdinalAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OrdinalAxis;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'Février', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'Août',\n         *             'Septembre', 'Octobre', 'Novembre', 'Décembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * The text for the label for the range selector buttons.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorZoom: 'Zoom',\n            /**\n             * The text for the label for the \"from\" input box in the range\n             * selector. Since v9.0, this string is empty as the label is not\n             * rendered by default.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorFrom: '',\n            /**\n             * The text for the label for the \"to\" input box in the range selector.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorTo: '→'\n        };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        var rangeSelector = {\n            /**\n             * Whether to enable all buttons from the start. By default buttons are\n             * only enabled if the corresponding time range exists on the X axis,\n             * but enabling all buttons allows for dynamically loading different\n             * time ranges.\n             *\n             * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n             *         All buttons enabled\n             *\n             * @since     2.0.3\n             */\n            allButtonsEnabled: false,\n            /**\n             * An array of configuration objects for the buttons.\n             *\n             * Defaults to:\n             * ```js\n             * buttons: [{\n             *     type: 'month',\n             *     count: 1,\n             *     text: '1m',\n             *     title: 'View 1 month'\n             * }, {\n             *     type: 'month',\n             *     count: 3,\n             *     text: '3m',\n             *     title: 'View 3 months'\n             * }, {\n             *     type: 'month',\n             *     count: 6,\n             *     text: '6m',\n             *     title: 'View 6 months'\n             * }, {\n             *     type: 'ytd',\n             *     text: 'YTD',\n             *     title: 'View year to date'\n             * }, {\n             *     type: 'year',\n             *     count: 1,\n             *     text: '1y',\n             *     title: 'View 1 year'\n             * }, {\n             *     type: 'all',\n             *     text: 'All',\n             *     title: 'View all'\n             * }]\n             * ```\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by buttons\n             *\n             * @type      {Array<*>}\n             */\n            buttons: void 0,\n            /**\n             * How many units of the defined type the button should span. If `type`\n             * is \"month\" and `count` is 3, the button spans three months.\n             *\n             * @type      {number}\n             * @default   1\n             * @apioption rangeSelector.buttons.count\n             */\n            /**\n             * Fires when clicking on the rangeSelector button. One parameter,\n             * event, is passed to the function, containing common event\n             * information.\n             *\n             * ```js\n             * click: function(e) {\n             *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0,\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%e %b %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%e %b %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected. If the selected range\n             * exceeds the total data range and the 'all' option is available,\n             * the 'all' option, showing the full range, is automatically selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#334eff\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer',\n                /** @ignore */\n                fontSize: '0.8em'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /** @ignore */\n                fontSize: '0.8em'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorDefaults = {\n            lang: lang,\n            rangeSelector: rangeSelector\n        };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, H, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var chartDestroyEvents = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            var rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n            // Get the true range from a start date\n            getTrueRange = function (base, count) {\n                var timeName = type === 'year' ?\n                    'FullYear' : 'Month';\n                var date = new time.Date(base);\n                var basePeriod = time.get(timeName, date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            var min, range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.setFixedRange(max - min);\n                }\n            }\n            var dataMin = pick(this.dataMin, Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (pushUnique(composed, 'RangeSelector')) {\n                var chartProto = ChartClass.prototype;\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n                addEvent(ChartClass, 'afterGetContainer', createRangeSelector);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'redraw', redrawRangeSelector);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                chartProto.callbacks.push(redrawRangeSelector);\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function createRangeSelector() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            var chart = this, rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        function redrawRangeSelector() {\n            var chart = this;\n            var rangeSelector = this.rangeSelector;\n            if (!rangeSelector) {\n                return;\n            }\n            var alignTo;\n            var extremes = chart.xAxis[0].getExtremes();\n            var legend = chart.legend;\n            var verticalAlign = (rangeSelector &&\n                rangeSelector.options.verticalAlign);\n            if (isNumber(extremes.min)) {\n                rangeSelector.render(extremes.min, extremes.max);\n            }\n            // Re-align the legend so that it's below the rangeselector\n            if (legend.display &&\n                verticalAlign === 'top' &&\n                verticalAlign === legend.options.verticalAlign) {\n                // Create a new alignment box for the legend.\n                alignTo = merge(chart.spacingBox);\n                if (legend.options.layout === 'vertical') {\n                    alignTo.y = chart.plotTop;\n                }\n                else {\n                    alignTo.y += rangeSelector.getHeight();\n                }\n                legend.group.placed = false; // Don't animate the alignment.\n                legend.align(alignTo);\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (var i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                var events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach(function (unbind) { return unbind(); });\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        /**\n         *\n         */\n        function onChartGetMargins() {\n            var rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                var rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            var chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n            var rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                var verticalAlign = (optionsRangeSelector &&\n                    optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorComposition = {\n            compose: compose\n        };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js'], _modules['Core/Axis/OrdinalAxis.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U, OrdinalAxis) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, createElement = U.createElement, css = U.css, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, discardElement = U.discardElement, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, pad = U.pad, pick = U.pick, pInt = U.pInt, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            var ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            var date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            var time = ['H', 'k', 'I', 'l', 'M', 'S']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        var RangeSelector = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function RangeSelector(chart) {\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            RangeSelector.compose = function (AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            RangeSelector.prototype.clickButton = function (i, redraw) {\n                var rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n                var dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = baseAxis && Math.round(Math.min(baseAxis.max, pick(dataMax, baseAxis.max))), // #1568\n                baseXAxisOptions, range = rangeOptions._range, rangeMin, ctx, ytdExtremes, addOffsetMin = true;\n                // Chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach(function (series) {\n                                // Reassign it to the last item\n                                var xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instantiated. Temporarily set min and range\n                    // options and axes once defined and remove them on\n                    // chart load (#4317 & #20529).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    var axisRangeUpdateEvent_1 = addEvent(chart, 'afterGetAxes', function () {\n                        var xAxis = chart.xAxis[0];\n                        xAxis.range = xAxis.options.range = range;\n                        xAxis.min = xAxis.options.min = rangeMin;\n                    });\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        var xAxis = chart.xAxis[0];\n                        chart.setFixedRange(rangeOptions._range);\n                        xAxis.options.range = baseXAxisOptions.range;\n                        xAxis.options.min = baseXAxisOptions.min;\n                        axisRangeUpdateEvent_1(); // Remove event\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // Auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                    chart.setFixedRange(rangeOptions._range);\n                }\n                fireEvent(this, 'afterBtnClick');\n            };\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            RangeSelector.prototype.setSelected = function (selected) {\n                this.selected = this.options.selected = selected;\n            };\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            RangeSelector.prototype.init = function (chart) {\n                var rangeSelector = this, options = chart.options.rangeSelector, buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()), selectedOption = options.selected, blurInputs = function () {\n                    var minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && !!minInput.blur) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && !!maxInput.blur) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // Zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (isNumber(this.max) &&\n                                isNumber(this.min) &&\n                                this.max - this.min !== chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n                this.createElements();\n            };\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            RangeSelector.prototype.updateButtonStates = function () {\n                var rangeSelector = this, chart = this.chart, dropdown = this.dropdown, dropdownLabel = this.dropdownLabel, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n                unionExtremes = (chart.scroller &&\n                    chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttonStates = new Array(rangeSelector.buttonOptions.length)\n                    .fill(0), selectedExists = isNumber(selected), buttons = rangeSelector.buttons;\n                var isSelectedTooGreat = false, selectedIndex = null;\n                rangeSelector.buttonOptions.forEach(function (rangeOptions, i) {\n                    var _a;\n                    var range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, offsetRange = rangeOptions._offsetMax -\n                        rangeOptions._offsetMin, isSelected = i === selected, \n                    // Disable buttons where the range exceeds what is allowed i;\n                    // the current view\n                    isTooGreatRange = range >\n                        dataMax - dataMin, \n                    // Disable buttons where the range is smaller than the minimum\n                    // range\n                    isTooSmallRange = range < baseAxis.minRange;\n                    // Do not select the YTD button if not explicitly told so\n                    var isYTDButNotSelected = false, \n                    // Disable the All button if we're already showing all\n                    isSameRange = range === actualRange;\n                    if (isSelected && isTooGreatRange) {\n                        isSelectedTooGreat = true;\n                    }\n                    if (baseAxis.isOrdinal &&\n                        ((_a = baseAxis.ordinal) === null || _a === void 0 ? void 0 : _a.positions) &&\n                        range &&\n                        actualRange < range) {\n                        // Handle ordinal ranges\n                        var positions = baseAxis.ordinal.positions, prevOrdinalPosition = OrdinalAxis.Additions.findIndexOf(positions, baseAxis.min, true), nextOrdinalPosition = Math.min(OrdinalAxis.Additions.findIndexOf(positions, baseAxis.max, true) + 1, positions.length - 1);\n                        if (positions[nextOrdinalPosition] -\n                            positions[prevOrdinalPosition] > range) {\n                            isSameRange = true;\n                        }\n                    }\n                    else if (\n                    // Months and years have variable range so we check the extremes\n                    (type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    var disable = (!allButtonsEnabled &&\n                        !(isSelectedTooGreat && type === 'all') &&\n                        (isTooGreatRange ||\n                            isTooSmallRange ||\n                            hasNoData));\n                    var select = ((isSelectedTooGreat && type === 'all') ||\n                        (isYTDButNotSelected ? false : isSameRange) ||\n                        (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        buttonStates[i] = 3;\n                    }\n                    else if (select) {\n                        if (!selectedExists || i === selected) {\n                            selectedIndex = i;\n                        }\n                    }\n                });\n                if (selectedIndex !== null) {\n                    buttonStates[selectedIndex] = 2;\n                    rangeSelector.setSelected(selectedIndex);\n                }\n                else {\n                    rangeSelector.setSelected();\n                    if (dropdownLabel) {\n                        dropdownLabel.setState(0);\n                        dropdownLabel.attr({\n                            text: (defaultOptions.lang.rangeSelectorZoom || '') + ' ▾'\n                        });\n                    }\n                }\n                for (var i = 0; i < buttonStates.length; i++) {\n                    var state = buttonStates[i];\n                    var button = buttons[i];\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = (state === 3);\n                            if (state === 2) {\n                                if (dropdownLabel) {\n                                    dropdownLabel.setState(2);\n                                    dropdownLabel.attr({\n                                        text: rangeSelector.buttonOptions[i].text + ' ▾'\n                                    });\n                                }\n                                dropdown.selectedIndex = i + 1;\n                            }\n                            var bbox = dropdownLabel.getBBox();\n                            css(dropdown, {\n                                width: \"\".concat(bbox.width, \"px\"),\n                                height: \"\".concat(bbox.height, \"px\")\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            RangeSelector.prototype.computeButtonRange = function (rangeOptions) {\n                var type = rangeOptions.type, count = rangeOptions.count || 1, \n                // These time intervals have a fixed number of milliseconds, as\n                // opposed to month, ytd and year\n                fixedTimes = {\n                    millisecond: 1,\n                    second: 1000,\n                    minute: 60 * 1000,\n                    hour: 3600 * 1000,\n                    day: 24 * 3600 * 1000,\n                    week: 7 * 24 * 3600 * 1000\n                };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            };\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            RangeSelector.prototype.getInputValue = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                var options = this.chart.options\n                    .rangeSelector;\n                var time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            };\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            RangeSelector.prototype.setInputValue = function (name, inputTime) {\n                var options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    var hcTimeAttr = input.getAttribute('data-hc-time');\n                    var updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        var previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            };\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            RangeSelector.prototype.setInputExtremes = function (name, min, max) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    var format = this.inputTypeFormats[input.type];\n                    var time = this.chart.time;\n                    if (format) {\n                        var newMin = time.dateFormat(format, min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        var newMax = time.dateFormat(format, max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.showInput = function (name) {\n                var dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    var isTextInput = input.type === 'text', _a = this.inputGroup, _b = _a.translateX, translateX = _b === void 0 ? 0 : _b, _c = _a.translateY, translateY = _c === void 0 ? 0 : _c, _d = dateBox.x, x = _d === void 0 ? 0 : _d, _e = dateBox.width, width = _e === void 0 ? 0 : _e, _f = dateBox.height, height = _f === void 0 ? 0 : _f, inputBoxWidth = this.options.inputBoxWidth;\n                    css(input, {\n                        width: isTextInput ?\n                            ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: (height - 2) + 'px',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(x +\n                                translateX -\n                                (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.hideInput = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            RangeSelector.prototype.defaultInputDateParser = function (inputDate, useUTC, time) {\n                var hasTimezone = function (str) {\n                    return str.length > 6 &&\n                        (str.lastIndexOf('-') === str.length - 6 ||\n                            str.lastIndexOf('+') === str.length - 6);\n                };\n                var input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    var offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? \"+\".concat(pad(-offset), \":00\") : \"-\".concat(pad(offset), \":00\");\n                }\n                var date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    var parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            };\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            RangeSelector.prototype.drawInput = function (name) {\n                var _a = this, chart = _a.chart, div = _a.div, inputGroup = _a.inputGroup;\n                var rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = defaultOptions.lang, isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes(name) {\n                    var _a;\n                    var maxInput = rangeSelector.maxInput, minInput = rangeSelector.minInput, chartAxis = chart.xAxis[0], unionExtremes = ((_a = chart.scroller) === null || _a === void 0 ? void 0 : _a.getUnionExtremes()) || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, currentExtreme = chart.xAxis[0].getExtremes()[name];\n                    var value = rangeSelector.getInputValue(name);\n                    if (isNumber(value) && value !== currentExtreme) {\n                        // Validate the extremes. If it goes beyond the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typeof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                var text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                var label = renderer\n                    .label(text, 0)\n                    .addClass('highcharts-range-label')\n                    .attr({\n                    padding: text ? 2 : 0,\n                    height: text ? options.inputBoxHeight : 0\n                })\n                    .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and records click\n                // events that bring in the HTML input.\n                var dateBox = renderer\n                    .label('', 0)\n                    .addClass('highcharts-range-input')\n                    .attr({\n                    padding: 2,\n                    width: options.inputBoxWidth,\n                    height: options.inputBoxHeight,\n                    'text-align': 'center'\n                })\n                    .on('click', function () {\n                    // If it is already focused, the onfocus event doesn't fire\n                    // (#3713)\n                    rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                var input = createElement('input', {\n                    name: name,\n                    className: 'highcharts-range-selector'\n                }, void 0, div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = function () {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = function () {\n                    // Update extremes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes(name);\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                var keyDown = false;\n                // Handle changes in the input boxes\n                input.onchange = function () {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes(name);\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = function (event) {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes(name);\n                    }\n                };\n                input.onkeydown = function (event) {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.key === 'ArrowUp' ||\n                        event.key === 'ArrowDown' ||\n                        event.key === 'Tab') {\n                        updateExtremes(name);\n                    }\n                };\n                input.onkeyup = function () {\n                    keyDown = false;\n                };\n                return { dateBox: dateBox, input: input, label: label };\n            };\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            RangeSelector.prototype.getPosition = function () {\n                var chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n                    chart.plotTop - chart.axisOffset[0] :\n                    0; // Set offset only for verticalAlign top\n                return {\n                    buttonTop: top + options.buttonPosition.y,\n                    inputTop: top + options.inputPosition.y - 10\n                };\n            };\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            RangeSelector.prototype.getYTDExtremes = function (dataMax, dataMin, useUTC) {\n                var time = this.chart.time, now = new time.Date(dataMax), year = time.get('FullYear', now), startOfYear = useUTC ?\n                    time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                    +new time.Date(year, 0, 1), min = Math.max(dataMin, startOfYear), ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min: min\n                };\n            };\n            RangeSelector.prototype.createElements = function () {\n                var _a;\n                var chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, inputEnabled = options.inputEnabled, inputsZIndex = pick((_a = chartOptions.chart.style) === null || _a === void 0 ? void 0 : _a.zIndex, 0) + 1;\n                if (options.enabled === false) {\n                    return;\n                }\n                this.group = renderer.g('range-selector-group')\n                    .attr({\n                    zIndex: 7\n                })\n                    .add();\n                this.div = createElement('div', void 0, {\n                    position: 'relative',\n                    height: 0,\n                    zIndex: inputsZIndex\n                });\n                if (this.buttonOptions.length) {\n                    this.renderButtons();\n                }\n                // First create a wrapper outside the container in order to make\n                // the inputs work and make export correct\n                if (container.parentNode) {\n                    container.parentNode.insertBefore(this.div, container);\n                }\n                if (inputEnabled) {\n                    // Create the group to keep the inputs\n                    this.inputGroup = renderer.g('input-group').add(this.group);\n                    var minElems = this.drawInput('min');\n                    this.minDateBox = minElems.dateBox;\n                    this.minLabel = minElems.label;\n                    this.minInput = minElems.input;\n                    var maxElems = this.drawInput('max');\n                    this.maxDateBox = maxElems.dateBox;\n                    this.maxLabel = maxElems.label;\n                    this.maxInput = maxElems.input;\n                }\n            };\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            RangeSelector.prototype.render = function (min, max) {\n                var chart = this.chart, chartOptions = chart.options, options = chartOptions.rangeSelector, \n                // Place inputs above the container\n                inputEnabled = options.inputEnabled;\n                if (options.enabled === false) {\n                    return;\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    var unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        var minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        var x_1 = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach(function (label) {\n                            if (label) {\n                                var width = label.getBBox().width;\n                                if (width) {\n                                    label.attr({ x: x_1 });\n                                    x_1 += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.updateButtonStates();\n            };\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            RangeSelector.prototype.renderButtons = function () {\n                var _this = this;\n                var _a;\n                var _b = this, buttons = _b.buttons, chart = _b.chart, options = _b.options;\n                var lang = defaultOptions.lang;\n                var renderer = chart.renderer;\n                var buttonTheme = merge(options.buttonTheme);\n                var states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                var width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                var dropdown = this.dropdown = createElement('select', void 0, {\n                    position: 'absolute',\n                    padding: 0,\n                    border: 0,\n                    cursor: 'pointer',\n                    opacity: 0.0001\n                }, this.div);\n                // Create a label for dropdown select element\n                var userButtonTheme = (_a = chart.userOptions.rangeSelector) === null || _a === void 0 ? void 0 : _a.buttonTheme;\n                this.dropdownLabel = renderer.button('', 0, 0, function () { }, merge(buttonTheme, {\n                    'stroke-width': pick(buttonTheme['stroke-width'], 0),\n                    width: 'auto',\n                    paddingLeft: pick(options.buttonTheme.paddingLeft, userButtonTheme === null || userButtonTheme === void 0 ? void 0 : userButtonTheme.padding, 8),\n                    paddingRight: pick(options.buttonTheme.paddingRight, userButtonTheme === null || userButtonTheme === void 0 ? void 0 : userButtonTheme.padding, 8)\n                }), states && states.hover, states && states.select, states && states.disabled)\n                    .hide()\n                    .add(this.group);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', function () {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                var mouseOver = H.isMS ? 'mouseover' : 'mouseenter', mouseOut = H.isMS ? 'mouseout' : 'mouseleave';\n                addEvent(dropdown, mouseOver, function () {\n                    fireEvent(_this.dropdownLabel.element, mouseOver);\n                });\n                addEvent(dropdown, mouseOut, function () {\n                    fireEvent(_this.dropdownLabel.element, mouseOut);\n                });\n                addEvent(dropdown, 'change', function () {\n                    var button = _this.buttons[dropdown.selectedIndex - 1];\n                    fireEvent(button.element, 'click');\n                });\n                this.zoomText = renderer\n                    .label(lang.rangeSelectorZoom || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach(function (rangeOptions, i) {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, function (e) {\n                        // Extract events from button object and call\n                        var buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        var callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            _this.clickButton(i);\n                        }\n                        _this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width: width\n                    })\n                        .add(_this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            };\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            RangeSelector.prototype.alignElements = function () {\n                var _this = this;\n                var _a;\n                var _b = this, buttonGroup = _b.buttonGroup, buttons = _b.buttons, chart = _b.chart, group = _b.group, inputGroup = _b.inputGroup, options = _b.options, zoomText = _b.zoomText;\n                var chartOptions = chart.options;\n                var navButtonOptions = (chartOptions.exporting &&\n                    chartOptions.exporting.enabled !== false &&\n                    chartOptions.navigation &&\n                    chartOptions.navigation.buttonOptions);\n                var buttonPosition = options.buttonPosition, inputPosition = options.inputPosition, verticalAlign = options.verticalAlign;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is used both by the buttonGroup and the inputGroup.\n                var getXOffsetForExportButton = function (group, position) {\n                    if (navButtonOptions &&\n                        _this.titleCollision(chart) &&\n                        verticalAlign === 'top' &&\n                        position.align === 'right' && ((position.y -\n                        group.getBBox().height - 12) <\n                        ((navButtonOptions.y || 0) +\n                            (navButtonOptions.height || 0) +\n                            chart.spacing[0]))) {\n                        return -40;\n                    }\n                    return 0;\n                };\n                var plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    var translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            var width_1 = 0;\n                            if (zoomText) {\n                                width_1 += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach(function (button, i) {\n                                width_1 += button.width || 0;\n                                if (i !== buttons.length - 1) {\n                                    width_1 += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width_1;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        // Detect collision between button group and exporting\n                        var xOffsetForExportButton_1 = getXOffsetForExportButton(buttonGroup, buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton_1);\n                        if ((_a = this.buttonGroup) === null || _a === void 0 ? void 0 : _a.translateY) {\n                            this.dropdownLabel\n                                .attr({ y: this.buttonGroup.translateY });\n                        }\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    var xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // Fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign: verticalAlign\n                    }, true, chart.spacingBox);\n                    var alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    var groupHeight = group.getBBox().height + 20; // # 20 padding\n                    var translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        var legendOptions = chart.legend && chart.legend.options;\n                        var legendHeight = (legendOptions &&\n                            legendOptions.verticalAlign === 'bottom' &&\n                            legendOptions.enabled &&\n                            !legendOptions.floating ?\n                            (chart.legend.legendHeight +\n                                pick(legendOptions.margin, 10)) :\n                            0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    var _c = this, minInput = _c.minInput, maxInput = _c.maxInput, dropdown = _c.dropdown;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            };\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            RangeSelector.prototype.alignButtonGroup = function (xOffsetForExportButton, width) {\n                var _a = this, chart = _a.chart, options = _a.options, buttonGroup = _a.buttonGroup;\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft - chart.spacing[3];\n                var translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            RangeSelector.prototype.positionButtons = function () {\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options, zoomText = _a.zoomText;\n                var verb = chart.hasLoaded ? 'animate' : 'attr';\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft;\n                var buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (var i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // Increase the button position for the next button\n                        buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            };\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            RangeSelector.prototype.handleCollision = function (xOffsetForExportButton) {\n                var _this = this;\n                var _a = this, chart = _a.chart, buttonGroup = _a.buttonGroup, inputGroup = _a.inputGroup;\n                var _b = this.options, buttonPosition = _b.buttonPosition, dropdown = _b.dropdown, inputPosition = _b.inputPosition;\n                var maxButtonWidth = function () {\n                    var buttonWidth = 0;\n                    _this.buttons.forEach(function (button) {\n                        var bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                var groupsOverlap = function (buttonGroupWidth) {\n                    if ((inputGroup === null || inputGroup === void 0 ? void 0 : inputGroup.alignOptions) && buttonGroup) {\n                        var inputGroupX = (inputGroup.alignAttr.translateX +\n                            inputGroup.alignOptions.x -\n                            xOffsetForExportButton +\n                            // `getBBox` for detecing left margin\n                            inputGroup.getBBox().x +\n                            // 2px padding to not overlap input and label\n                            2);\n                        var inputGroupWidth = inputGroup.alignOptions.width || 0;\n                        var buttonGroupX = buttonGroup.alignAttr.translateX +\n                            buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                var moveInputsDown = function () {\n                    if (inputGroup && buttonGroup) {\n                        inputGroup.attr({\n                            translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                0 :\n                                -xOffsetForExportButton),\n                            translateY: inputGroup.alignAttr.translateY +\n                                buttonGroup.getBBox().height + 10\n                        });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons();\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons();\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons();\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            };\n            /**\n             * Collapse the buttons and show the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            RangeSelector.prototype.collapseButtons = function () {\n                var _a = this, buttons = _a.buttons, zoomText = _a.zoomText;\n                if (this.isCollapsed === true) {\n                    return;\n                }\n                this.isCollapsed = true;\n                zoomText.hide();\n                buttons.forEach(function (button) { return void button.hide(); });\n                this.showDropdown();\n            };\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            RangeSelector.prototype.expandButtons = function () {\n                var _a = this, buttons = _a.buttons, zoomText = _a.zoomText;\n                if (this.isCollapsed === false) {\n                    return;\n                }\n                this.isCollapsed = false;\n                this.hideDropdown();\n                zoomText.show();\n                buttons.forEach(function (button) { return void button.show(); });\n                this.positionButtons();\n            };\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            RangeSelector.prototype.showDropdown = function () {\n                var _a = this, buttonGroup = _a.buttonGroup, chart = _a.chart, dropdownLabel = _a.dropdownLabel, dropdown = _a.dropdown;\n                if (buttonGroup && dropdown) {\n                    var _b = buttonGroup.translateX, translateX = _b === void 0 ? 0 : _b, _c = buttonGroup.translateY, translateY = _c === void 0 ? 0 : _c, left = chart.plotLeft + translateX, top_1 = translateY;\n                    dropdownLabel\n                        .attr({ x: left, y: top_1 })\n                        .show();\n                    css(dropdown, {\n                        left: left + 'px',\n                        top: top_1 + 'px',\n                        visibility: 'inherit'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            RangeSelector.prototype.hideDropdown = function () {\n                var dropdown = this.dropdown;\n                if (dropdown) {\n                    this.dropdownLabel.hide();\n                    css(dropdown, {\n                        visibility: 'hidden',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            };\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            RangeSelector.prototype.getHeight = function () {\n                var rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n                var rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                var minPosition = Math.min(inputPositionY, buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            };\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            RangeSelector.prototype.titleCollision = function (chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            };\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            RangeSelector.prototype.update = function (options, redraw) {\n                if (redraw === void 0) { redraw = true; }\n                var chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                if (redraw) {\n                    this.render();\n                }\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            RangeSelector.prototype.destroy = function () {\n                var rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach(function (unbind) { return unbind(); });\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            };\n            return RangeSelector;\n        }());\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // Keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Core/Chart/StockChart.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Templating.js'], _modules['Core/Defaults.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Stock/Utilities/StockUtilities.js'], _modules['Core/Utilities.js']], function (Chart, F, D, NavigatorDefaults, RangeSelectorDefaults, ScrollbarDefaults, StockUtilities, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var format = F.format;\n        var getOptions = D.getOptions;\n        var setFixedRange = StockUtilities.setFixedRange;\n        var addEvent = U.addEvent, clamp = U.clamp, crisp = U.crisp, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, isString = U.isString, merge = U.merge, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get stock-specific default axis options.\n         *\n         * @private\n         * @function getDefaultAxisOptions\n         */\n        function getDefaultAxisOptions(coll, options, defaultOptions) {\n            var _a, _b, _c, _d;\n            if (coll === 'xAxis') {\n                return {\n                    minPadding: 0,\n                    maxPadding: 0,\n                    overscroll: 0,\n                    ordinal: true\n                };\n            }\n            if (coll === 'yAxis') {\n                return {\n                    labels: {\n                        y: -2\n                    },\n                    opposite: (_b = (_a = defaultOptions.opposite) !== null && _a !== void 0 ? _a : options.opposite) !== null && _b !== void 0 ? _b : true,\n                    showLastLabel: !!(\n                    // #6104, show last label by default for category axes\n                    options.categories ||\n                        options.type === 'category'),\n                    title: {\n                        text: ((_c = defaultOptions.title) === null || _c === void 0 ? void 0 : _c.text) !== 'Values' ?\n                            (_d = defaultOptions.title) === null || _d === void 0 ? void 0 : _d.text :\n                            null\n                    }\n                };\n            }\n            return {};\n        }\n        /**\n         * Get stock-specific forced axis options.\n         *\n         * @private\n         * @function getForcedAxisOptions\n         */\n        function getForcedAxisOptions(type, chartOptions) {\n            if (type === 'xAxis') {\n                // Always disable startOnTick:true on the main axis when the navigator\n                // is enabled (#1090)\n                var navigatorEnabled = pick(chartOptions.navigator && chartOptions.navigator.enabled, NavigatorDefaults.enabled, true);\n                var axisOptions = {\n                    type: 'datetime',\n                    categories: void 0\n                };\n                if (navigatorEnabled) {\n                    axisOptions.startOnTick = false;\n                    axisOptions.endOnTick = false;\n                }\n                return axisOptions;\n            }\n            return {};\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Stock-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n         *\n         * @requires modules/stock\n         *\n         * @class\n         * @name Highcharts.StockChart\n         * @extends Highcharts.Chart\n         */\n        var StockChart = /** @class */ (function (_super) {\n            __extends(StockChart, _super);\n            function StockChart() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the chart. The constructor's arguments are passed on\n             * directly.\n             *\n             * @function Highcharts.StockChart#init\n             *\n             * @param {Highcharts.Options} userOptions\n             *        Custom options.\n             *\n             * @param {Function} [callback]\n             *        Function to run when the chart has loaded and all external\n             *        images are loaded.\n             *\n             *\n             * @emits Highcharts.StockChart#event:init\n             * @emits Highcharts.StockChart#event:afterInit\n             */\n            StockChart.prototype.init = function (userOptions, callback) {\n                var defaultOptions = getOptions(), xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis, \n                // Always disable startOnTick:true on the main axis when the\n                // navigator is enabled (#1090)\n                navigatorEnabled = pick(userOptions.navigator && userOptions.navigator.enabled, NavigatorDefaults.enabled, true);\n                // Avoid doing these twice\n                userOptions.xAxis = userOptions.yAxis = void 0;\n                var options = merge({\n                    chart: {\n                        panning: {\n                            enabled: true,\n                            type: 'x'\n                        },\n                        zooming: {\n                            pinchType: 'x',\n                            mouseWheel: {\n                                type: 'x'\n                            }\n                        }\n                    },\n                    navigator: {\n                        enabled: navigatorEnabled\n                    },\n                    scrollbar: {\n                        // #4988 - check if setOptions was called\n                        enabled: pick(ScrollbarDefaults.enabled, true)\n                    },\n                    rangeSelector: {\n                        // #4988 - check if setOptions was called\n                        enabled: pick(RangeSelectorDefaults.rangeSelector.enabled, true)\n                    },\n                    title: {\n                        text: null\n                    },\n                    tooltip: {\n                        split: pick(defaultOptions.tooltip && defaultOptions.tooltip.split, true),\n                        crosshairs: true\n                    },\n                    legend: {\n                        enabled: false\n                    }\n                }, userOptions, // User's options\n                {\n                    isStock: true // Internal flag\n                });\n                userOptions.xAxis = xAxisOptions;\n                userOptions.yAxis = yAxisOptions;\n                // Apply X axis options to both single and multi y axes\n                options.xAxis = splat(userOptions.xAxis || {}).map(function (xAxisOptions) { return merge(getDefaultAxisOptions('xAxis', xAxisOptions, defaultOptions.xAxis), \n                // #7690\n                xAxisOptions, // User options\n                getForcedAxisOptions('xAxis', userOptions)); });\n                // Apply Y axis options to both single and multi y axes\n                options.yAxis = splat(userOptions.yAxis || {}).map(function (yAxisOptions) { return merge(getDefaultAxisOptions('yAxis', yAxisOptions, defaultOptions.yAxis), \n                // #7690\n                yAxisOptions // User options\n                ); });\n                _super.prototype.init.call(this, options, callback);\n            };\n            /**\n             * Factory for creating different axis types.\n             * Extended to add stock defaults.\n             *\n             * @private\n             * @function Highcharts.StockChart#createAxis\n             * @param {string} coll\n             * An axis type.\n             * @param {Chart.CreateAxisOptionsObject} options\n             * The axis creation options.\n             */\n            StockChart.prototype.createAxis = function (coll, options) {\n                options.axis = merge(getDefaultAxisOptions(coll, options.axis, getOptions()[coll]), options.axis, getForcedAxisOptions(coll, this.userOptions));\n                return _super.prototype.createAxis.call(this, coll, options);\n            };\n            return StockChart;\n        }(Chart));\n        addEvent(Chart, 'update', function (e) {\n            var chart = this, options = e.options;\n            // Use case: enabling scrollbar from a disabled state.\n            // Scrollbar needs to be initialized from a controller, Navigator in this\n            // case (#6615)\n            if ('scrollbar' in options && chart.navigator) {\n                merge(true, chart.options.scrollbar, options.scrollbar);\n                chart.navigator.update({});\n                delete options.scrollbar;\n            }\n        });\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        (function (StockChart) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(ChartClass, AxisClass, SeriesClass, SVGRendererClass) {\n                var seriesProto = SeriesClass.prototype;\n                if (!seriesProto.forceCropping) {\n                    addEvent(AxisClass, 'afterDrawCrosshair', onAxisAfterDrawCrosshair);\n                    addEvent(AxisClass, 'afterHideCrosshair', onAxisAfterHideCrosshair);\n                    addEvent(AxisClass, 'autoLabelAlign', onAxisAutoLabelAlign);\n                    addEvent(AxisClass, 'destroy', onAxisDestroy);\n                    addEvent(AxisClass, 'getPlotLinePath', onAxisGetPlotLinePath);\n                    ChartClass.prototype.setFixedRange = setFixedRange;\n                    seriesProto.forceCropping = seriesForceCropping;\n                    addEvent(SeriesClass, 'setOptions', onSeriesSetOptions);\n                    SVGRendererClass.prototype.crispPolyLine = svgRendererCrispPolyLine;\n                }\n            }\n            StockChart.compose = compose;\n            /**\n             * Extend crosshairs to also draw the label.\n             * @private\n             */\n            function onAxisAfterDrawCrosshair(event) {\n                var axis = this;\n                // Check if the label has to be drawn\n                if (!axis.crosshair ||\n                    !axis.crosshair.label ||\n                    !axis.crosshair.label.enabled ||\n                    !axis.cross ||\n                    !isNumber(axis.min) ||\n                    !isNumber(axis.max)) {\n                    return;\n                }\n                var chart = axis.chart, log = axis.logarithmic, options = axis.crosshair.label, // The label's options\n                horiz = axis.horiz, // Axis orientation\n                opposite = axis.opposite, // Axis position\n                left = axis.left, // Left position\n                top = axis.top, // Top position\n                width = axis.width, tickInside = axis.options.tickPosition === 'inside', snap = axis.crosshair.snap !== false, e = event.e || (axis.cross && axis.cross.e), point = event.point;\n                var crossLabel = axis.crossLabel, // The svgElement\n                posx, posy, formatOption = options.format, formatFormat = '', limit, offset = 0, \n                // Use last available event (#5287)\n                min = axis.min, max = axis.max;\n                if (log) {\n                    min = log.lin2log(axis.min);\n                    max = log.lin2log(axis.max);\n                }\n                var align = (horiz ? 'center' : opposite ?\n                    (axis.labelAlign === 'right' ? 'right' : 'left') :\n                    (axis.labelAlign === 'left' ? 'left' : 'center'));\n                // If the label does not exist yet, create it.\n                if (!crossLabel) {\n                    crossLabel = axis.crossLabel = chart.renderer\n                        .label('', 0, void 0, options.shape || 'callout')\n                        .addClass('highcharts-crosshair-label highcharts-color-' + (point && point.series ?\n                        point.series.colorIndex :\n                        axis.series[0] && this.series[0].colorIndex))\n                        .attr({\n                        align: options.align || align,\n                        padding: pick(options.padding, 8),\n                        r: pick(options.borderRadius, 3),\n                        zIndex: 2\n                    })\n                        .add(axis.labelGroup);\n                    // Presentational\n                    if (!chart.styledMode) {\n                        crossLabel\n                            .attr({\n                            fill: options.backgroundColor ||\n                                ( // #14888\n                                point && point.series &&\n                                    point.series.color) ||\n                                \"#666666\" /* Palette.neutralColor60 */,\n                            stroke: options.borderColor || '',\n                            'stroke-width': options.borderWidth || 0\n                        })\n                            .css(extend({\n                            color: \"#ffffff\" /* Palette.backgroundColor */,\n                            fontWeight: 'normal',\n                            fontSize: '0.7em',\n                            textAlign: 'center'\n                        }, options.style || {}));\n                    }\n                }\n                if (horiz) {\n                    posx = snap ? (point.plotX || 0) + left : e.chartX;\n                    posy = top + (opposite ? 0 : axis.height);\n                }\n                else {\n                    posx = left + axis.offset + (opposite ? width : 0);\n                    posy = snap ? (point.plotY || 0) + top : e.chartY;\n                }\n                if (!formatOption && !options.formatter) {\n                    if (axis.dateTime) {\n                        formatFormat = '%b %d, %Y';\n                    }\n                    formatOption =\n                        '{value' + (formatFormat ? ':' + formatFormat : '') + '}';\n                }\n                // Show the label\n                var value = snap ?\n                    (axis.isXAxis ? point.x : point.y) :\n                    axis.toValue(horiz ? e.chartX : e.chartY);\n                // Crosshair should be rendered within Axis range (#7219) and the point\n                // of currentPriceIndicator should be inside the plot area (#14879).\n                var isInside = point && point.series ?\n                    point.series.isPointInside(point) :\n                    (isNumber(value) && value > min && value < max);\n                var text = '';\n                if (formatOption) {\n                    text = format(formatOption, { value: value }, chart);\n                }\n                else if (options.formatter && isNumber(value)) {\n                    text = options.formatter.call(axis, value);\n                }\n                crossLabel.attr({\n                    text: text,\n                    x: posx,\n                    y: posy,\n                    visibility: isInside ? 'inherit' : 'hidden'\n                });\n                var crossBox = crossLabel.getBBox();\n                // Now it is placed we can correct its position\n                if (isNumber(crossLabel.x) && !horiz && !opposite) {\n                    posx = crossLabel.x - (crossBox.width / 2);\n                }\n                if (isNumber(crossLabel.y)) {\n                    if (horiz) {\n                        if ((tickInside && !opposite) || (!tickInside && opposite)) {\n                            posy = crossLabel.y - crossBox.height;\n                        }\n                    }\n                    else {\n                        posy = crossLabel.y - (crossBox.height / 2);\n                    }\n                }\n                // Check the edges\n                if (horiz) {\n                    limit = {\n                        left: left,\n                        right: left + axis.width\n                    };\n                }\n                else {\n                    limit = {\n                        left: axis.labelAlign === 'left' ? left : 0,\n                        right: axis.labelAlign === 'right' ?\n                            left + axis.width :\n                            chart.chartWidth\n                    };\n                }\n                var translateX = crossLabel.translateX || 0;\n                // Left edge\n                if (translateX < limit.left) {\n                    offset = limit.left - translateX;\n                }\n                // Right edge\n                if (translateX + crossBox.width >= limit.right) {\n                    offset = -(translateX + crossBox.width - limit.right);\n                }\n                // Show the crosslabel\n                crossLabel.attr({\n                    x: posx + offset,\n                    y: posy,\n                    // First set x and y, then anchorX and anchorY, when box is actually\n                    // calculated, #5702\n                    anchorX: horiz ?\n                        posx :\n                        (axis.opposite ? 0 : chart.chartWidth),\n                    anchorY: horiz ?\n                        (axis.opposite ? chart.chartHeight : 0) :\n                        posy + crossBox.height / 2\n                });\n            }\n            /**\n             * Wrapper to hide the label.\n             * @private\n             */\n            function onAxisAfterHideCrosshair() {\n                var axis = this;\n                if (axis.crossLabel) {\n                    axis.crossLabel = axis.crossLabel.hide();\n                }\n            }\n            /**\n             * Override the automatic label alignment so that the first Y axis' labels\n             * are drawn on top of the grid line, and subsequent axes are drawn outside.\n             * @private\n             */\n            function onAxisAutoLabelAlign(e) {\n                var axis = this, chart = axis.chart, options = axis.options, panes = chart._labelPanes = chart._labelPanes || {}, labelOptions = options.labels;\n                if (chart.options.isStock && axis.coll === 'yAxis') {\n                    var key = options.top + ',' + options.height;\n                    // Do it only for the first Y axis of each pane\n                    if (!panes[key] && labelOptions.enabled) {\n                        if (labelOptions.distance === 15 && // Default\n                            axis.side === 1) {\n                            labelOptions.distance = 0;\n                        }\n                        if (typeof labelOptions.align === 'undefined') {\n                            labelOptions.align = 'right';\n                        }\n                        panes[key] = axis;\n                        e.align = 'right';\n                        e.preventDefault();\n                    }\n                }\n            }\n            /**\n             * Clear axis from label panes. (#6071)\n             * @private\n             */\n            function onAxisDestroy() {\n                var axis = this, chart = axis.chart, key = (axis.options &&\n                    (axis.options.top + ',' + axis.options.height));\n                if (key && chart._labelPanes && chart._labelPanes[key] === axis) {\n                    delete chart._labelPanes[key];\n                }\n            }\n            /**\n             * Override getPlotLinePath to allow for multipane charts.\n             * @private\n             */\n            function onAxisGetPlotLinePath(e) {\n                var axis = this, series = (axis.isLinked && !axis.series && axis.linkedParent ?\n                    axis.linkedParent.series :\n                    axis.series), chart = axis.chart, renderer = chart.renderer, axisLeft = axis.left, axisTop = axis.top, result = [], translatedValue = e.translatedValue, value = e.value, force = e.force, \n                /**\n                 * Return the other axis based on either the axis option or on\n                 * related series.\n                 * @private\n                 */\n                getAxis = function (coll) {\n                    var otherColl = coll === 'xAxis' ? 'yAxis' : 'xAxis', opt = axis.options[otherColl];\n                    // Other axis indexed by number\n                    if (isNumber(opt)) {\n                        return [chart[otherColl][opt]];\n                    }\n                    // Other axis indexed by id (like navigator)\n                    if (isString(opt)) {\n                        return [chart.get(opt)];\n                    }\n                    // Auto detect based on existing series\n                    return series.map(function (s) { return s[otherColl]; });\n                };\n                var x1, y1, x2, y2, axes = [], // #3416 need a default array\n                axes2, uniqueAxes, transVal;\n                if ( // For stock chart, by default render paths across the panes\n                // except the case when `acrossPanes` is disabled by user (#6644)\n                (chart.options.isStock && e.acrossPanes !== false) &&\n                    // Ignore in case of colorAxis or zAxis. #3360, #3524, #6720\n                    axis.coll === 'xAxis' || axis.coll === 'yAxis') {\n                    e.preventDefault();\n                    // Get the related axes based on series\n                    axes = getAxis(axis.coll);\n                    // Get the related axes based options.*Axis setting #2810\n                    axes2 = (axis.isXAxis ? chart.yAxis : chart.xAxis);\n                    for (var _i = 0, axes2_1 = axes2; _i < axes2_1.length; _i++) {\n                        var A = axes2_1[_i];\n                        if (defined(A.options.id) ?\n                            A.options.id.indexOf('navigator') === -1 :\n                            true) {\n                            var a = (A.isXAxis ? 'yAxis' : 'xAxis'), rax = (defined(A.options[a]) ?\n                                chart[a][A.options[a]] :\n                                chart[a][0]);\n                            if (axis === rax) {\n                                axes.push(A);\n                            }\n                        }\n                    }\n                    // Remove duplicates in the axes array. If there are no axes in the\n                    // axes array, we are adding an axis without data, so we need to\n                    // populate this with grid lines (#2796).\n                    uniqueAxes = axes.length ?\n                        [] :\n                        [axis.isXAxis ? chart.yAxis[0] : chart.xAxis[0]]; // #3742\n                    var _loop_1 = function (axis2) {\n                        if (uniqueAxes.indexOf(axis2) === -1 &&\n                            // Do not draw on axis which overlap completely. #5424\n                            !find(uniqueAxes, function (unique) { return (unique.pos === axis2.pos &&\n                                unique.len === axis2.len); })) {\n                            uniqueAxes.push(axis2);\n                        }\n                    };\n                    for (var _a = 0, axes_1 = axes; _a < axes_1.length; _a++) {\n                        var axis2 = axes_1[_a];\n                        _loop_1(axis2);\n                    }\n                    transVal = pick(translatedValue, axis.translate(value || 0, void 0, void 0, e.old));\n                    if (isNumber(transVal)) {\n                        if (axis.horiz) {\n                            for (var _b = 0, uniqueAxes_1 = uniqueAxes; _b < uniqueAxes_1.length; _b++) {\n                                var axis2 = uniqueAxes_1[_b];\n                                var skip = void 0;\n                                y1 = axis2.pos;\n                                y2 = y1 + axis2.len;\n                                x1 = x2 = Math.round(transVal + axis.transB);\n                                // Outside plot area\n                                if (force !== 'pass' &&\n                                    (x1 < axisLeft || x1 > axisLeft + axis.width)) {\n                                    if (force) {\n                                        x1 = x2 = clamp(x1, axisLeft, axisLeft + axis.width);\n                                    }\n                                    else {\n                                        skip = true;\n                                    }\n                                }\n                                if (!skip) {\n                                    result.push(['M', x1, y1], ['L', x2, y2]);\n                                }\n                            }\n                        }\n                        else {\n                            for (var _c = 0, uniqueAxes_2 = uniqueAxes; _c < uniqueAxes_2.length; _c++) {\n                                var axis2 = uniqueAxes_2[_c];\n                                var skip = void 0;\n                                x1 = axis2.pos;\n                                x2 = x1 + axis2.len;\n                                y1 = y2 = Math.round(axisTop + axis.height - transVal);\n                                // Outside plot area\n                                if (force !== 'pass' &&\n                                    (y1 < axisTop || y1 > axisTop + axis.height)) {\n                                    if (force) {\n                                        y1 = y2 = clamp(y1, axisTop, axisTop + axis.height);\n                                    }\n                                    else {\n                                        skip = true;\n                                    }\n                                }\n                                if (!skip) {\n                                    result.push(['M', x1, y1], ['L', x2, y2]);\n                                }\n                            }\n                        }\n                    }\n                    e.path = result.length > 0 ?\n                        renderer.crispPolyLine(result, e.lineWidth || 1) :\n                        // #3557 getPlotLinePath in regular Highcharts also returns null\n                        void 0;\n                }\n            }\n            /**\n             * Handle som Stock-specific series defaults, override the plotOptions\n             * before series options are handled.\n             * @private\n             */\n            function onSeriesSetOptions(e) {\n                var series = this;\n                if (series.chart.options.isStock) {\n                    var overrides = void 0;\n                    if (series.is('column') || series.is('columnrange')) {\n                        overrides = {\n                            borderWidth: 0,\n                            shadow: false\n                        };\n                    }\n                    else if (!series.is('scatter') && !series.is('sma')) {\n                        overrides = {\n                            marker: {\n                                enabled: false,\n                                radius: 2\n                            }\n                        };\n                    }\n                    if (overrides) {\n                        e.plotOptions[series.type] = merge(e.plotOptions[series.type], overrides);\n                    }\n                }\n            }\n            /**\n             * Based on the data grouping options decides whether\n             * the data should be cropped while processing.\n             *\n             * @ignore\n             * @function Highcharts.Series#forceCropping\n             */\n            function seriesForceCropping() {\n                var series = this, chart = series.chart, options = series.options, dataGroupingOptions = options.dataGrouping, groupingEnabled = (series.allowDG !== false &&\n                    dataGroupingOptions &&\n                    pick(dataGroupingOptions.enabled, chart.options.isStock));\n                return groupingEnabled;\n            }\n            /* eslint-disable jsdoc/check-param-names */\n            /**\n             * Factory function for creating new stock charts. Creates a new\n             * {@link Highcharts.StockChart|StockChart} object with different default\n             * options than the basic Chart.\n             *\n             * @example\n             * let chart = Highcharts.stockChart('container', {\n             *     series: [{\n             *         data: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n             *         pointInterval: 24 * 60 * 60 * 1000\n             *     }]\n             * });\n             *\n             * @function Highcharts.stockChart\n             *\n             * @param {string|Highcharts.HTMLDOMElement} [renderTo]\n             *        The DOM element to render to, or its id.\n             *\n             * @param {Highcharts.Options} options\n             *        The chart options structure as described in the\n             *        [options reference](https://api.highcharts.com/highstock).\n             *\n             * @param {Highcharts.ChartCallbackFunction} [callback]\n             *        A function to execute when the chart object is finished\n             *        rendering and all external image files (`chart.backgroundImage`,\n             *        `chart.plotBackgroundImage` etc) are loaded. Defining a\n             *        [chart.events.load](https://api.highcharts.com/highstock/chart.events.load)\n             *        handler is equivalent.\n             *\n             * @return {Highcharts.StockChart}\n             *         The chart object.\n             */\n            function stockChart(a, b, c) {\n                return new StockChart(a, b, c);\n            }\n            StockChart.stockChart = stockChart;\n            /* eslint-enable jsdoc/check-param-names */\n            /**\n             * Function to crisp a line with multiple segments\n             *\n             * @private\n             * @function Highcharts.SVGRenderer#crispPolyLine\n             */\n            function svgRendererCrispPolyLine(points, width) {\n                // Points format: [['M', 0, 0], ['L', 100, 0]]\n                // normalize to a crisp line\n                for (var i = 0; i < points.length; i = i + 2) {\n                    var start = points[i], end = points[i + 1];\n                    if (defined(start[1]) && start[1] === end[1]) {\n                        start[1] = end[1] = crisp(start[1], width);\n                    }\n                    if (defined(start[2]) && start[2] === end[2]) {\n                        start[2] = end[2] = crisp(start[2], width);\n                    }\n                }\n                return points;\n            }\n        })(StockChart || (StockChart = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return StockChart;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var HLCPoint = /** @class */ (function (_super) {\n            __extends(HLCPoint, _super);\n            function HLCPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return HLCPoint;\n        }(ColumnPoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCPoint;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An HLC chart is a style of financial chart used to describe price\n         * movements over time. It displays high, low and close values per\n         * data point.\n         *\n         * @sample stock/demo/hlc/\n         *         HLC chart\n         *\n         * @extends      plotOptions.column\n         * @excluding    borderColor, borderRadius, borderWidth, crisp, stacking,\n         *               stack\n         * @product      highstock\n         * @optionparent plotOptions.hlc\n         */\n        var HLCSeriesDefaults = {\n            /**\n             * The approximate pixel width of each group. If for example a series\n             * with 30 points is displayed over a 600 pixel wide plot area, no\n             * grouping is performed. If however the series contains so many points\n             * that the spacing is less than the groupPixelWidth, Highcharts will\n             * try to group it into appropriate groups so that each is more or less\n             * two pixels wide. Defaults to `5`.\n             *\n             * @type      {number}\n             * @default   5\n             * @product   highstock\n             * @apioption plotOptions.hlc.dataGrouping.groupPixelWidth\n             */\n            /**\n             * @type      {Highcharts.DataGroupingApproximationValue|Function}\n             * @default   hlc\n             * @product   highstock\n             * @apioption plotOptions.hlc.dataGrouping.approximation\n             */\n            /**\n             * @default   close\n             * @apioption plotOptions.hlc.colorKey\n             */\n            /**\n             * The pixel width of the line/border. Defaults to `1`.\n             *\n             * @sample {highstock} stock/plotoptions/hlc-linewidth/\n             *         A greater line width\n             *\n             * @type    {number}\n             * @default 1\n             * @product highstock\n             *\n             * @public\n             */\n            lineWidth: 1,\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n                    '<b> {series.name}</b><br/>' +\n                    'High: {point.high}<br/>' +\n                    'Low: {point.low}<br/>' +\n                    'Close: {point.close}<br/>'\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: null,\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The pixel width of the line representing the HLC point.\n                     *\n                     * @type    {number}\n                     * @default 3\n                     * @product highstock\n                     */\n                    lineWidth: 3\n                }\n            },\n            /**\n             * Determines which one of  `high`, `low`, `close` values should\n             * be represented as `point.y`, which is later used to set dataLabel\n             * position and [compare](#plotOptions.series.compare).\n             *\n             * @sample {highstock} stock/plotoptions/hlc-pointvalkey/\n             *         Possible values\n             *\n             * @declare    Highcharts.OptionsHLCPointValKeyValue\n             * @type       {string}\n             * @default    close\n             * @validvalue [\"high\", \"low\", \"close\"]\n             * @product    highstock\n             * @apioption  plotOptions.hlc.pointValKey\n             */\n            /**\n             * @default   close\n             * @apioption plotOptions.hlc.colorKey\n             */\n            stickyTracking: true\n        };\n        /**\n         * A `hlc` series. If the [type](#series.hlc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.hlc\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @apioption series.hlc\n         */\n        /**\n         * An array of data points for the series. For the `hlc` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 4 or 3 values. In this case, the values correspond\n         *    to `x,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length of 3\\.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 5, 6, 7],\n         *        [1, 4, 8, 2],\n         *        [2, 3, 4, 10]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.hlc.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        high: 4,\n         *        low: 5,\n         *        close: 2,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        high: 3,\n         *        low: 6,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number>|Array<(number|string),number,number,number>|*>}\n         * @extends   series.arearange.data\n         * @excluding y, marker\n         * @product   highstock\n         * @apioption series.hlc.data\n         */\n        /**\n         * The closing value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.hlc.data.close\n         */\n        (''); // Keeps doclets above in JS file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCSeries.js', [_modules['Series/HLC/HLCPoint.js'], _modules['Series/HLC/HLCSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (HLCPoint, HLCSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var crisp = U.crisp, extend = U.extend, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The hlc series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.hlc\n         *\n         * @augments Highcharts.Series\n         */\n        var HLCSeries = /** @class */ (function (_super) {\n            __extends(HLCSeries, _super);\n            function HLCSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extend the path if close is not between high and low.\n             *\n             * @param {SVGPath} path the path array of the point\n             * @param {number} halfStrokeWidth\n             * @param {number} value value of the point to which the stem should be extended\n             */\n            HLCSeries.prototype.extendStem = function (path, halfStrokeWidth, value) {\n                var start = path[0];\n                var end = path[1];\n                // We don't need to worry about crisp - close value\n                // is already crisped and halfStrokeWidth should remove it.\n                if (typeof start[2] === 'number') {\n                    start[2] = Math.max(value + halfStrokeWidth, start[2]);\n                }\n                if (typeof end[2] === 'number') {\n                    end[2] = Math.min(value - halfStrokeWidth, end[2]);\n                }\n            };\n            /**\n             * Function to create SVGPath of the point based on the\n             * plot positions of this point.\n             * @private\n             */\n            HLCSeries.prototype.getPointPath = function (point, graphic) {\n                // Crisp vector coordinates\n                var strokeWidth = graphic.strokeWidth(), series = point.series, \n                // #2596:\n                crispX = crisp(point.plotX || 0, strokeWidth), halfWidth = Math.round(point.shapeArgs.width / 2);\n                // The vertical stem\n                var path = [\n                    ['M', crispX, Math.round(point.yBottom)],\n                    ['L', crispX, Math.round(point.plotHigh)]\n                ];\n                // Close\n                if (point.close !== null) {\n                    var plotClose = crisp(point.plotClose, strokeWidth);\n                    path.push(['M', crispX, plotClose], ['L', crispX + halfWidth, plotClose]);\n                    series.extendStem(path, strokeWidth / 2, plotClose);\n                }\n                return path;\n            };\n            /**\n             * Draw single point\n             * @private\n             */\n            HLCSeries.prototype.drawSinglePoint = function (point) {\n                var series = point.series, chart = series.chart;\n                var path, graphic = point.graphic;\n                if (typeof point.plotY !== 'undefined') {\n                    // Create and/or update the graphic\n                    if (!graphic) {\n                        point.graphic = graphic = chart.renderer.path()\n                            .add(series.group);\n                    }\n                    if (!chart.styledMode) {\n                        graphic.attr(series.pointAttribs(point, (point.selected && 'select'))); // #3897\n                    }\n                    // Crisp vector coordinates\n                    path = series.getPointPath(point, graphic);\n                    graphic[!graphic ? 'attr' : 'animate']({ d: path })\n                        .addClass(point.getClassName(), true);\n                }\n            };\n            /**\n             * Draw the data points\n             * @private\n             */\n            HLCSeries.prototype.drawPoints = function () {\n                this.points.forEach(this.drawSinglePoint);\n            };\n            /**\n             * @private\n             * @function Highcharts.seriesTypes.hlc#init\n             */\n            HLCSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                this.options.stacking = void 0; // #8817\n            };\n            /**\n             * Postprocess mapping between options and SVG attributes\n             * @private\n             */\n            HLCSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = _super.prototype.pointAttribs.call(this, point, state);\n                delete attribs.fill;\n                return attribs;\n            };\n            HLCSeries.prototype.toYData = function (point) {\n                // Return a plain array for speedy calculation\n                return [point.high, point.low, point.close];\n            };\n            /**\n             * Translate data points from raw values x and y to plotX and plotY\n             *\n             * @private\n             * @function Highcharts.seriesTypes.hlc#translate\n             */\n            HLCSeries.prototype.translate = function () {\n                var series = this, yAxis = series.yAxis, names = (this.pointArrayMap && this.pointArrayMap.slice()) || [], translated = names.map(function (name) {\n                    return \"plot\".concat(name.charAt(0).toUpperCase() + name.slice(1));\n                });\n                translated.push('yBottom');\n                names.push('low');\n                _super.prototype.translate.apply(series);\n                // Do the translation\n                series.points.forEach(function (point) {\n                    names.forEach(function (name, i) {\n                        var value = point[name];\n                        if (value !== null) {\n                            if (series.dataModify) {\n                                value = series.dataModify.modifyValue(value);\n                            }\n                            point[translated[i]] =\n                                yAxis.toPixels(value, true);\n                        }\n                    });\n                    // Align the tooltip to the high value to avoid covering the\n                    // point\n                    point.tooltipPos[1] =\n                        point.plotHigh + yAxis.pos - series.chart.plotTop;\n                });\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            HLCSeries.defaultOptions = merge(ColumnSeries.defaultOptions, HLCSeriesDefaults);\n            return HLCSeries;\n        }(ColumnSeries));\n        extend(HLCSeries.prototype, {\n            pointClass: HLCPoint,\n            animate: null,\n            directTouch: false,\n            pointArrayMap: ['high', 'low', 'close'],\n            pointAttrToOptions: {\n                stroke: 'color',\n                'stroke-width': 'lineWidth'\n            },\n            pointValKey: 'close'\n        });\n        SeriesRegistry.registerSeriesType('hlc', HLCSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCSeries;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var HLCSeries = SeriesRegistry.seriesTypes.hlc;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var OHLCPoint = /** @class */ (function (_super) {\n            __extends(OHLCPoint, _super);\n            function OHLCPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extend the parent method by adding up or down to the class name.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#getClassName\n             */\n            OHLCPoint.prototype.getClassName = function () {\n                return _super.prototype.getClassName.call(this) +\n                    (this.open < this.close ?\n                        ' highcharts-point-up' :\n                        ' highcharts-point-down');\n            };\n            /**\n             * Save upColor as point color (#14826).\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#resolveUpColor\n             */\n            OHLCPoint.prototype.resolveUpColor = function () {\n                if (this.open < this.close &&\n                    !this.options.color &&\n                    this.series.options.upColor) {\n                    this.color = this.series.options.upColor;\n                }\n            };\n            /**\n             * Extend the parent method by saving upColor.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#resolveColor\n             */\n            OHLCPoint.prototype.resolveColor = function () {\n                _super.prototype.resolveColor.call(this);\n                if (!this.series.is('heikinashi')) {\n                    this.resolveUpColor();\n                }\n            };\n            /**\n             * Extend the parent method by saving upColor.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#getZone\n             *\n             * @return {Highcharts.SeriesZonesOptionsObject}\n             *         The zone item.\n             */\n            OHLCPoint.prototype.getZone = function () {\n                var zone = _super.prototype.getZone.call(this);\n                this.resolveUpColor();\n                return zone;\n            };\n            /**\n             * Extend the parent method by resolving up/down colors (#15849)\n             * @private\n             **/\n            OHLCPoint.prototype.applyOptions = function () {\n                _super.prototype.applyOptions.apply(this, arguments);\n                if (this.resolveColor) {\n                    this.resolveColor();\n                }\n                return this;\n            };\n            return OHLCPoint;\n        }(HLCSeries.prototype.pointClass));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCPoint;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An OHLC chart is a style of financial chart used to describe price\n         * movements over time. It displays open, high, low and close values per\n         * data point.\n         *\n         * @sample stock/demo/ohlc\n         *         OHLC chart\n         *\n         * @extends      plotOptions.hlc\n         * @product      highstock\n         * @optionparent plotOptions.ohlc\n         */\n        var OHLCSeriesDefaults = {\n            /**\n             * @type      {Highcharts.DataGroupingApproximationValue|Function}\n             * @default   ohlc\n             * @product   highstock\n             * @apioption plotOptions.ohlc.dataGrouping.approximation\n             */\n            /**\n             * Determines which one of  `open`, `high`, `low`, `close` values should\n             * be represented as `point.y`, which is later used to set dataLabel\n             * position and [compare](#plotOptions.series.compare).\n             *\n             * @declare    Highcharts.OptionsPointValKeyValue\n             * @default    close\n             * @validvalue [\"open\", \"high\", \"low\", \"close\"]\n             * @product    highstock\n             * @apioption  plotOptions.ohlc.pointValKey\n             */\n            /**\n             * Line color for up points.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highstock\n             * @apioption plotOptions.ohlc.upColor\n             */\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n                    '<b> {series.name}</b><br/>' +\n                    'Open: {point.open}<br/>' +\n                    'High: {point.high}<br/>' +\n                    'Low: {point.low}<br/>' +\n                    'Close: {point.close}<br/>'\n            }\n        };\n        /**\n         * The parameter allows setting line series type and use OHLC indicators.\n         * Data in OHLC format is required.\n         *\n         * @sample {highstock} stock/indicators/use-ohlc-data\n         *         Use OHLC data format to plot line chart\n         *\n         * @type      {boolean}\n         * @product   highstock\n         * @apioption plotOptions.line.useOhlcData\n         */\n        /**\n         * A `ohlc` series. If the [type](#series.ohlc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ohlc\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @apioption series.ohlc\n         */\n        /**\n         * An array of data points for the series. For the `ohlc` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4\\.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 6, 5, 6, 7],\n         *        [1, 9, 4, 8, 2],\n         *        [2, 6, 3, 4, 10]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.ohlc.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 3,\n         *        high: 4,\n         *        low: 5,\n         *        close: 2,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 4,\n         *        high: 3,\n         *        low: 6,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.arearange.data\n         * @excluding y, marker\n         * @product   highstock\n         * @apioption series.ohlc.data\n         */\n        /**\n         * The closing value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.ohlc.data.close\n         */\n        /**\n         * The opening value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.ohlc.data.open\n         */\n        ''; // Adds doclets above to transpiled\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCSeries.js', [_modules['Core/Globals.js'], _modules['Series/OHLC/OHLCPoint.js'], _modules['Series/OHLC/OHLCSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, OHLCPoint, OHLCSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var composed = H.composed;\n        var HLCSeries = SeriesRegistry.seriesTypes.hlc;\n        var addEvent = U.addEvent, crisp = U.crisp, extend = U.extend, merge = U.merge, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onSeriesAfterSetOptions(e) {\n            var options = e.options, dataGrouping = options.dataGrouping;\n            if (dataGrouping &&\n                options.useOhlcData &&\n                options.id !== 'highcharts-navigator-series') {\n                dataGrouping.approximation = 'ohlc';\n            }\n        }\n        /**\n         * Add useOhlcData option\n         * @private\n         */\n        function onSeriesInit(eventOptions) {\n            // eslint-disable-next-line no-invalid-this\n            var series = this, options = eventOptions.options;\n            if (options.useOhlcData &&\n                options.id !== 'highcharts-navigator-series') {\n                extend(series, {\n                    pointValKey: OHLCSeries.prototype.pointValKey,\n                    // Keys: ohlcProto.keys, // @todo potentially nonsense\n                    pointArrayMap: OHLCSeries.prototype.pointArrayMap,\n                    toYData: OHLCSeries.prototype.toYData\n                });\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ohlc series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ohlc\n         *\n         * @augments Highcharts.Series\n         */\n        var OHLCSeries = /** @class */ (function (_super) {\n            __extends(OHLCSeries, _super);\n            function OHLCSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            OHLCSeries.compose = function (SeriesClass) {\n                var _args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    _args[_i - 1] = arguments[_i];\n                }\n                if (pushUnique(composed, 'OHLCSeries')) {\n                    addEvent(SeriesClass, 'afterSetOptions', onSeriesAfterSetOptions);\n                    addEvent(SeriesClass, 'init', onSeriesInit);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            OHLCSeries.prototype.getPointPath = function (point, graphic) {\n                var path = _super.prototype.getPointPath.call(this, point, graphic), strokeWidth = graphic.strokeWidth(), crispX = crisp(point.plotX || 0, strokeWidth), halfWidth = Math.round(point.shapeArgs.width / 2);\n                if (point.open !== null) {\n                    var plotOpen = crisp(point.plotOpen, strokeWidth);\n                    path.push(['M', crispX, plotOpen], ['L', crispX - halfWidth, plotOpen]);\n                    _super.prototype.extendStem.call(this, path, strokeWidth / 2, plotOpen);\n                }\n                return path;\n            };\n            /**\n             * Postprocess mapping between options and SVG attributes\n             * @private\n             */\n            OHLCSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = _super.prototype.pointAttribs.call(this, point, state), options = this.options;\n                delete attribs.fill;\n                if (!point.options.color &&\n                    options.upColor &&\n                    point.open < point.close) {\n                    attribs.stroke = options.upColor;\n                }\n                return attribs;\n            };\n            OHLCSeries.prototype.toYData = function (point) {\n                // Return a plain array for speedy calculation\n                return [point.open, point.high, point.low, point.close];\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            OHLCSeries.defaultOptions = merge(HLCSeries.defaultOptions, OHLCSeriesDefaults);\n            return OHLCSeries;\n        }(HLCSeries));\n        extend(OHLCSeries.prototype, {\n            pointClass: OHLCPoint,\n            pointArrayMap: ['open', 'high', 'low', 'close']\n        });\n        SeriesRegistry.registerSeriesType('ohlc', OHLCSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCSeries;\n    });\n    _registerModule(_modules, 'Series/Candlestick/CandlestickSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A candlestick chart is a style of financial chart used to describe\n         * price movements over time.\n         *\n         * @sample stock/demo/candlestick/\n         *         Candlestick chart\n         *\n         * @extends      plotOptions.ohlc\n         * @excluding    borderColor,borderRadius,borderWidth\n         * @product      highstock\n         * @optionparent plotOptions.candlestick\n         */\n        var CandlestickSeriesDefaults = {\n            /**\n             * The specific line color for up candle sticks. The default is to\n             * inherit the general `lineColor` setting.\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n             *         Candlestick line colors\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since     1.3.6\n             * @product   highstock\n             * @apioption plotOptions.candlestick.upLineColor\n             */\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The pixel width of the line/border around the\n                     * candlestick.\n                     *\n                     * @product highstock\n                     */\n                    lineWidth: 2\n                }\n            },\n            /**\n             * @type    {number|null}\n             * @product highstock\n             */\n            threshold: null,\n            /**\n             * The color of the line/border of the candlestick.\n             *\n             * In styled mode, the line stroke can be set with the\n             * `.highcharts-candlestick-series .highcahrts-point` rule.\n             *\n             * @see [upLineColor](#plotOptions.candlestick.upLineColor)\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n             *         Candlestick line colors\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #000000\n             * @product highstock\n             */\n            lineColor: \"#000000\" /* Palette.neutralColor100 */,\n            /**\n             * The pixel width of the candlestick line/border. Defaults to `1`.\n             *\n             *\n             * In styled mode, the line stroke width can be set with the\n             * `.highcharts-candlestick-series .highcahrts-point` rule.\n             *\n             * @product highstock\n             */\n            lineWidth: 1,\n            /**\n             * The fill color of the candlestick when values are rising.\n             *\n             * In styled mode, the up color can be set with the\n             * `.highcharts-candlestick-series .highcharts-point-up` rule.\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-color/\n             *         Custom colors\n             * @sample {highstock} highcharts/css/candlestick/\n             *         Colors in styled mode\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #ffffff\n             * @product highstock\n            */\n            upColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * @product highstock\n             */\n            stickyTracking: true\n        };\n        /**\n         * A `candlestick` series. If the [type](#series.candlestick.type)\n         * option is not specified, it is inherited from [chart.type](\n         * #chart.type).\n         *\n         * @type      {*}\n         * @extends   series,plotOptions.candlestick\n         * @excluding dataParser, dataURL, marker\n         * @product   highstock\n         * @apioption series.candlestick\n         */\n        /**\n         * An array of data points for the series. For the `candlestick` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 7, 2, 0, 4],\n         *        [1, 1, 4, 2, 8],\n         *        [2, 3, 3, 9, 3]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.candlestick.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 9,\n         *        high: 2,\n         *        low: 4,\n         *        close: 6,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 1,\n         *        high: 4,\n         *        low: 7,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.ohlc.data\n         * @excluding y\n         * @product   highstock\n         * @apioption series.candlestick.data\n         */\n        ''; // Adds doclets above to transpiled\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return CandlestickSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Candlestick/CandlestickSeries.js', [_modules['Series/Candlestick/CandlestickSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (CandlestickSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, OHLCSeries = _a.ohlc;\n        var crisp = U.crisp, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The candlestick series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.candlestick\n         *\n         * @augments Highcharts.seriesTypes.ohlc\n         */\n        var CandlestickSeries = /** @class */ (function (_super) {\n            __extends(CandlestickSeries, _super);\n            function CandlestickSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Postprocess mapping between options and SVG attributes\n             *\n             * @private\n             * @function Highcharts.seriesTypes.candlestick#pointAttribs\n             */\n            CandlestickSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = ColumnSeries.prototype.pointAttribs.call(this, point, state), options = this.options, isUp = point.open < point.close, stroke = options.lineColor || this.color, color = point.color || this.color; // (#14826)\n                attribs['stroke-width'] = options.lineWidth;\n                attribs.fill = point.options.color ||\n                    (isUp ? (options.upColor || color) : color);\n                attribs.stroke = point.options.lineColor ||\n                    (isUp ? (options.upLineColor || stroke) : stroke);\n                // Select or hover states\n                if (state) {\n                    var stateOptions = options.states[state];\n                    attribs.fill = stateOptions.color || attribs.fill;\n                    attribs.stroke = stateOptions.lineColor || attribs.stroke;\n                    attribs['stroke-width'] =\n                        stateOptions.lineWidth || attribs['stroke-width'];\n                }\n                return attribs;\n            };\n            /**\n             * Draw the data points.\n             *\n             * @private\n             * @function Highcharts.seriesTypes.candlestick#drawPoints\n             */\n            CandlestickSeries.prototype.drawPoints = function () {\n                var series = this, points = series.points, chart = series.chart, reversedYAxis = series.yAxis.reversed;\n                for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                    var point = points_1[_i];\n                    var graphic = point.graphic, plotOpen = void 0, plotClose = void 0, topBox = void 0, bottomBox = void 0, hasTopWhisker = void 0, hasBottomWhisker = void 0, crispX = void 0, path = void 0, halfWidth = void 0;\n                    var isNew = !graphic;\n                    if (typeof point.plotY !== 'undefined') {\n                        if (!graphic) {\n                            point.graphic = graphic = chart.renderer.path()\n                                .add(series.group);\n                        }\n                        if (!series.chart.styledMode) {\n                            graphic\n                                .attr(series.pointAttribs(point, (point.selected && 'select'))) // #3897\n                                .shadow(series.options.shadow);\n                        }\n                        // Crisp vector coordinates\n                        var strokeWidth = graphic.strokeWidth();\n                        // #2596:\n                        crispX = crisp(point.plotX || 0, strokeWidth);\n                        plotOpen = point.plotOpen;\n                        plotClose = point.plotClose;\n                        topBox = Math.min(plotOpen, plotClose);\n                        bottomBox = Math.max(plotOpen, plotClose);\n                        halfWidth = Math.round(point.shapeArgs.width / 2);\n                        hasTopWhisker = reversedYAxis ?\n                            bottomBox !== point.yBottom :\n                            Math.round(topBox) !==\n                                Math.round(point.plotHigh || 0);\n                        hasBottomWhisker = reversedYAxis ?\n                            Math.round(topBox) !==\n                                Math.round(point.plotHigh || 0) :\n                            bottomBox !== point.yBottom;\n                        topBox = crisp(topBox, strokeWidth);\n                        bottomBox = crisp(bottomBox, strokeWidth);\n                        // Create the path. Due to a bug in Chrome 49, the path is\n                        // first instantiated with no values, then the values\n                        // pushed. For unknown reasons, instantiating the path array\n                        // with all the values would lead to a crash when updating\n                        // frequently (#5193).\n                        path = [];\n                        path.push(['M', crispX - halfWidth, bottomBox], ['L', crispX - halfWidth, topBox], ['L', crispX + halfWidth, topBox], ['L', crispX + halfWidth, bottomBox], ['Z'], // Ensure a nice rectangle #2602\n                        ['M', crispX, topBox], [\n                            'L',\n                            // #460, #2094\n                            crispX,\n                            hasTopWhisker ?\n                                Math.round(reversedYAxis ?\n                                    point.yBottom :\n                                    point.plotHigh) :\n                                topBox\n                        ], ['M', crispX, bottomBox], [\n                            'L',\n                            // #460, #2094\n                            crispX,\n                            hasBottomWhisker ?\n                                Math.round(reversedYAxis ?\n                                    point.plotHigh :\n                                    point.yBottom) :\n                                bottomBox\n                        ]);\n                        graphic[isNew ? 'attr' : 'animate']({ d: path })\n                            .addClass(point.getClassName(), true);\n                    }\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            CandlestickSeries.defaultOptions = merge(OHLCSeries.defaultOptions, { tooltip: OHLCSeries.defaultOptions.tooltip }, CandlestickSeriesDefaults);\n            return CandlestickSeries;\n        }(OHLCSeries));\n        SeriesRegistry.registerSeriesType('candlestick', CandlestickSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return CandlestickSeries;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var FlagsPoint = /** @class */ (function (_super) {\n            __extends(FlagsPoint, _super);\n            function FlagsPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.ttBelow = false;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            FlagsPoint.prototype.isValid = function () {\n                // #9233 - Prevent from treating flags as null points (even if\n                // they have no y values defined).\n                return isNumber(this.y) || typeof this.y === 'undefined';\n            };\n            /**\n             * @private\n             */\n            FlagsPoint.prototype.hasNewShapeType = function () {\n                var shape = this.options.shape || this.series.options.shape;\n                return this.graphic && shape && shape !== this.graphic.symbolKey;\n            };\n            return FlagsPoint;\n        }(ColumnPoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsPoint;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Flags are used to mark events in stock charts. They can be added on the\n         * timeline, or attached to a specific series.\n         *\n         * @sample stock/demo/flags-general/\n         *         Flags on a line series\n         *\n         * @extends      plotOptions.column\n         * @excluding    animation, borderColor, borderWidth,\n         *               colorByPoint, cropThreshold, dataGrouping, pointPadding,\n         *               pointWidth, turboThreshold\n         * @product      highstock\n         * @optionparent plotOptions.flags\n         */\n        var FlagsSeriesDefaults = {\n            /**\n             * The corner radius of the border surrounding each flag. For `squarepin`\n             * shaped flags only. A number signifies pixels. A percentage string, like\n             * for example 50%, signifies a relative size.\n             */\n            borderRadius: 0,\n            /**\n             * In case the flag is placed on a series, on what point key to place\n             * it. Line and columns have one key, `y`. In range or OHLC-type series,\n             * however, the flag can optionally be placed on the `open`, `high`,\n             * `low` or `close` key.\n             *\n             * @sample {highstock} stock/plotoptions/flags-onkey/\n             *         Range series, flag on high\n             *\n             * @type       {string}\n             * @default    y\n             * @since      4.2.2\n             * @product    highstock\n             * @validvalue [\"y\", \"open\", \"high\", \"low\", \"close\"]\n             * @apioption  plotOptions.flags.onKey\n             */\n            /**\n             * The id of the series that the flags should be drawn on. If no id\n             * is given, the flags are drawn on the x axis.\n             *\n             * @sample {highstock} stock/plotoptions/flags/\n             *         Flags on series and on x axis\n             *\n             * @type      {string}\n             * @product   highstock\n             * @apioption plotOptions.flags.onSeries\n             */\n            pointRange: 0,\n            /**\n             * Whether the flags are allowed to overlap sideways. If `false`, the\n             * flags are moved sideways using an algorithm that seeks to place every\n             * flag as close as possible to its original position.\n             *\n             * @sample {highstock} stock/plotoptions/flags-allowoverlapx\n             *         Allow sideways overlap\n             *\n             * @since 6.0.4\n             */\n            allowOverlapX: false,\n            /**\n             * The shape of the marker. Can be one of \"flag\", \"circlepin\",\n             * \"squarepin\", or an image of the format `url(/path-to-image.jpg)`.\n             * Individual shapes can also be set for each point.\n             *\n             * @sample {highstock} stock/plotoptions/flags/\n             *         Different shapes\n             *\n             * @type    {Highcharts.FlagsShapeValue}\n             * @product highstock\n             */\n            shape: 'flag',\n            /**\n             * When multiple flags in the same series fall on the same value, this\n             * number determines the vertical offset between them.\n             *\n             * @sample {highstock} stock/plotoptions/flags-stackdistance/\n             *         A greater stack distance\n             *\n             * @product highstock\n             */\n            stackDistance: 12,\n            /**\n             * Text alignment for the text inside the flag.\n             *\n             * @since      5.0.0\n             * @product    highstock\n             * @validvalue [\"left\", \"center\", \"right\"]\n             */\n            textAlign: 'center',\n            /**\n             * Specific tooltip options for flag series. Flag series tooltips are\n             * different from most other types in that a flag doesn't have a data\n             * value, so the tooltip rather displays the `text` option for each\n             * point.\n             *\n             * @extends   plotOptions.series.tooltip\n             * @excluding changeDecimals, valueDecimals, valuePrefix, valueSuffix\n             * @product   highstock\n             */\n            tooltip: {\n                pointFormat: '{point.text}'\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: null,\n            /**\n             * The text to display on each flag. This can be defined on series\n             * level, or individually for each point. Defaults to `\"A\"`.\n             *\n             * @type      {string}\n             * @default   A\n             * @product   highstock\n             * @apioption plotOptions.flags.title\n             */\n            /**\n             * The y position of the top left corner of the flag relative to either\n             * the series (if onSeries is defined), or the x axis. Defaults to\n             * `-30`.\n             *\n             * @product highstock\n             */\n            y: -30,\n            /**\n             * Whether to use HTML to render the flag texts. Using HTML allows for\n             * advanced formatting, images and reliable bi-directional text\n             * rendering. Note that exported images won't respect the HTML, and that\n             * HTML won't respect Z-index settings.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     1.3\n             * @product   highstock\n             * @apioption plotOptions.flags.useHTML\n             */\n            /**\n             * Fixed width of the flag's shape. By default, width is autocalculated\n             * according to the flag's title.\n             *\n             * @sample {highstock} stock/demo/flags-shapes/\n             *         Flags with fixed width\n             *\n             * @type      {number}\n             * @product   highstock\n             * @apioption plotOptions.flags.width\n             */\n            /**\n             * Fixed height of the flag's shape. By default, height is\n             * autocalculated according to the flag's title.\n             *\n             * @type      {number}\n             * @product   highstock\n             * @apioption plotOptions.flags.height\n             */\n            /**\n             * The fill color for the flags.\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highstock\n             */\n            fillColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * The color of the line/border of the flag.\n             *\n             * In styled mode, the stroke is set in the\n             * `.highcharts-flag-series.highcharts-point` rule.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default   #000000\n             * @product   highstock\n             * @apioption plotOptions.flags.lineColor\n             */\n            /**\n             * The pixel width of the flag's line/border.\n             *\n             * @product highstock\n             */\n            lineWidth: 1,\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The color of the line/border of the flag.\n                     *\n                     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @product highstock\n                     */\n                    lineColor: \"#000000\" /* Palette.neutralColor100 */,\n                    /**\n                     * The fill or background color of the flag.\n                     *\n                     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @product highstock\n                     */\n                    fillColor: \"#ccd3ff\" /* Palette.highlightColor20 */\n                }\n            },\n            /**\n             * The text styles of the flag.\n             *\n             * In styled mode, the styles are set in the\n             * `.highcharts-flag-series .highcharts-point` rule.\n             *\n             * @type    {Highcharts.CSSObject}\n             * @default {\"fontSize\": \"11px\", \"fontWeight\": \"bold\"}\n             * @product highstock\n             */\n            style: {\n                /** @ignore-option */\n                fontSize: '0.7em',\n                /** @ignore-option */\n                fontWeight: 'bold'\n            }\n        };\n        /**\n         * A `flags` series. If the [type](#series.flags.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.flags\n         * @excluding animation, borderColor, borderRadius, borderWidth, colorByPoint,\n         *            connectNulls, cropThreshold, dashStyle, dataGrouping, dataParser,\n         *            dataURL, gapSize, gapUnit, linecap, lineWidth, marker,\n         *            pointPadding, pointWidth, step, turboThreshold, useOhlcData\n         * @product   highstock\n         * @apioption series.flags\n         */\n        /**\n         * An array of data points for the series. For the `flags` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.flags.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        title: \"A\",\n         *        text: \"First event\"\n         *    }, {\n         *        x: 1,\n         *        title: \"B\",\n         *        text: \"Second event\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<*>}\n         * @extends   series.line.data\n         * @excluding dataLabels, marker, name, y\n         * @product   highstock\n         * @apioption series.flags.data\n         */\n        /**\n         * The fill color of an individual flag. By default it inherits from\n         * the series color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highstock\n         * @apioption series.flags.data.fillColor\n         */\n        /**\n         * The longer text to be shown in the flag's tooltip.\n         *\n         * @type      {string}\n         * @product   highstock\n         * @apioption series.flags.data.text\n         */\n        /**\n         * The short text to be shown on the flag.\n         *\n         * @type      {string}\n         * @product   highstock\n         * @apioption series.flags.data.title\n         */\n        ''; // Keeps doclets above in transpiled file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSymbols.js', [_modules['Core/Renderer/RendererRegistry.js']], function (RendererRegistry) {\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var FlagsSymbols;\n        (function (FlagsSymbols) {\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var modifiedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(SVGRendererClass) {\n                if (modifiedMembers.indexOf(SVGRendererClass) === -1) {\n                    modifiedMembers.push(SVGRendererClass);\n                    var symbols = SVGRendererClass.prototype.symbols;\n                    symbols.flag = flag;\n                    createPinSymbol(symbols, 'circle');\n                    createPinSymbol(symbols, 'square');\n                }\n                var RendererClass = RendererRegistry.getRendererType();\n                // The symbol callbacks are generated on the SVGRenderer object in all\n                // browsers.\n                if (modifiedMembers.indexOf(RendererClass)) {\n                    modifiedMembers.push(RendererClass);\n                }\n            }\n            FlagsSymbols.compose = compose;\n            /**\n             * Create the flag icon with anchor.\n             * @private\n             */\n            function flag(x, y, w, h, options) {\n                var anchorX = (options && options.anchorX) || x, anchorY = (options && options.anchorY) || y;\n                // To do: unwanted any cast because symbols.circle has wrong type, it\n                // actually returns an SVGPathArray\n                var path = this.circle(anchorX - 1, anchorY - 1, 2, 2);\n                path.push(['M', anchorX, anchorY], ['L', x, y + h], ['L', x, y], ['L', x + w, y], ['L', x + w, y + h], ['L', x, y + h], ['Z']);\n                return path;\n            }\n            /**\n             * Create the circlepin and squarepin icons with anchor.\n             * @private\n             */\n            function createPinSymbol(symbols, shape) {\n                symbols[(shape + 'pin')] = function (x, y, w, h, options) {\n                    var anchorX = options && options.anchorX, anchorY = options && options.anchorY;\n                    var path;\n                    // For single-letter flags, make sure circular flags are not taller\n                    // than their width\n                    if (shape === 'circle' && h > w) {\n                        x -= Math.round((h - w) / 2);\n                        w = h;\n                    }\n                    path = (symbols[shape])(x, y, w, h, options);\n                    if (anchorX && anchorY) {\n                        /**\n                         * If the label is below the anchor, draw the connecting line\n                         * from the top edge of the label, otherwise start drawing from\n                         * the bottom edge\n                         */\n                        var labelX = anchorX;\n                        if (shape === 'circle') {\n                            labelX = x + w / 2;\n                        }\n                        else {\n                            var startSeg = path[0];\n                            var endSeg = path[1];\n                            if (startSeg[0] === 'M' && endSeg[0] === 'L') {\n                                labelX = (startSeg[1] + endSeg[1]) / 2;\n                            }\n                        }\n                        var labelY = (y > anchorY) ? y : y + h;\n                        path.push([\n                            'M',\n                            labelX,\n                            labelY\n                        ], [\n                            'L',\n                            anchorX,\n                            anchorY\n                        ]);\n                        path = path.concat(symbols.circle(anchorX - 1, anchorY - 1, 2, 2));\n                    }\n                    return path;\n                };\n            }\n        })(FlagsSymbols || (FlagsSymbols = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsSymbols;\n    });\n    _registerModule(_modules, 'Series/OnSeriesComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (ColumnSeries, H, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var columnProto = ColumnSeries.prototype;\n        var seriesProto = Series.prototype;\n        var defined = U.defined, pushUnique = U.pushUnique, stableSort = U.stableSort;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var OnSeriesComposition;\n        (function (OnSeriesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, 'OnSeries')) {\n                    var seriesProto_1 = SeriesClass.prototype;\n                    seriesProto_1.getPlotBox = getPlotBox;\n                    seriesProto_1.translate = translate;\n                }\n                return SeriesClass;\n            }\n            OnSeriesComposition.compose = compose;\n            /**\n             * Override getPlotBox. If the onSeries option is valid, return the plot box\n             * of the onSeries, otherwise proceed as usual.\n             *\n             * @private\n             */\n            function getPlotBox(name) {\n                return seriesProto.getPlotBox.call((this.options.onSeries &&\n                    this.chart.get(this.options.onSeries)) || this, name);\n            }\n            OnSeriesComposition.getPlotBox = getPlotBox;\n            /**\n             * Extend the translate method by placing the point on the related series\n             *\n             * @private\n             */\n            function translate() {\n                var _a, _b;\n                columnProto.translate.apply(this);\n                var series = this, options = series.options, chart = series.chart, points = series.points, optionsOnSeries = options.onSeries, onSeries = (optionsOnSeries &&\n                    chart.get(optionsOnSeries)), step = onSeries && onSeries.options.step, onData = (onSeries && onSeries.points), inverted = chart.inverted, xAxis = series.xAxis, yAxis = series.yAxis;\n                var cursor = points.length - 1, point, lastPoint, onKey = options.onKey || 'y', i = onData && onData.length, xOffset = 0, leftPoint, lastX, rightPoint, currentDataGrouping, distanceRatio;\n                // Relate to a master series\n                if (onSeries && onSeries.visible && i) {\n                    xOffset = (onSeries.pointXOffset || 0) + (onSeries.barW || 0) / 2;\n                    currentDataGrouping = onSeries.currentDataGrouping;\n                    lastX = (onData[i - 1].x +\n                        (currentDataGrouping ? currentDataGrouping.totalRange : 0)); // #2374\n                    // sort the data points\n                    stableSort(points, function (a, b) { return (a.x - b.x); });\n                    onKey = 'plot' + onKey[0].toUpperCase() + onKey.substr(1);\n                    var _loop_1 = function () {\n                        leftPoint = onData[i];\n                        point = points[cursor];\n                        point.y = leftPoint.y;\n                        if (leftPoint.x <= point.x &&\n                            typeof leftPoint[onKey] !== 'undefined') {\n                            if (point.x <= lastX) { // #803\n                                point.plotY = leftPoint[onKey];\n                                // Interpolate between points, #666\n                                if (leftPoint.x < point.x &&\n                                    !step) {\n                                    rightPoint = onData[i + 1];\n                                    if (rightPoint &&\n                                        typeof rightPoint[onKey] !== 'undefined') {\n                                        // If the series is spline, calculate Y of the\n                                        // point on the bezier line. #19264\n                                        if (defined(point.plotX) &&\n                                            onSeries.is('spline')) {\n                                            leftPoint = leftPoint;\n                                            rightPoint = rightPoint;\n                                            var p0_1 = [\n                                                leftPoint.plotX || 0,\n                                                leftPoint.plotY || 0\n                                            ], p3_1 = [\n                                                rightPoint.plotX || 0,\n                                                rightPoint.plotY || 0\n                                            ], p1_1 = (((_a = leftPoint.controlPoints) === null || _a === void 0 ? void 0 : _a.high) ||\n                                                p0_1), p2_1 = (((_b = rightPoint.controlPoints) === null || _b === void 0 ? void 0 : _b.low) ||\n                                                p3_1), pixelThreshold = 0.25, maxIterations = 100, calculateCoord = function (t, key) { return (\n                                            // The parametric formula for the\n                                            // cubic Bezier curve.\n                                            Math.pow(1 - t, 3) * p0_1[key] +\n                                                3 * (1 - t) * (1 - t) * t *\n                                                    p1_1[key] + 3 * (1 - t) * t * t *\n                                                p2_1[key] + t * t * t * p3_1[key]); };\n                                            var tMin = 0, tMax = 1, t = void 0;\n                                            // Find `t` of the parametric function of\n                                            // the bezier curve for the given `plotX`.\n                                            for (var i_1 = 0; i_1 < maxIterations; i_1++) {\n                                                var tMid = (tMin + tMax) / 2;\n                                                var xMid = calculateCoord(tMid, 0);\n                                                if (xMid === null) {\n                                                    break;\n                                                }\n                                                if (Math.abs(xMid - point.plotX) < pixelThreshold) {\n                                                    t = tMid;\n                                                    break;\n                                                }\n                                                if (xMid < point.plotX) {\n                                                    tMin = tMid;\n                                                }\n                                                else {\n                                                    tMax = tMid;\n                                                }\n                                            }\n                                            if (defined(t)) {\n                                                point.plotY =\n                                                    calculateCoord(t, 1);\n                                                point.y =\n                                                    yAxis.toValue(point.plotY, true);\n                                            }\n                                        }\n                                        else {\n                                            // The distance ratio, between 0 and 1\n                                            distanceRatio =\n                                                (point.x - leftPoint.x) /\n                                                    (rightPoint.x - leftPoint.x);\n                                            point.plotY +=\n                                                distanceRatio *\n                                                    // The plotY distance\n                                                    (rightPoint[onKey] - leftPoint[onKey]);\n                                            point.y +=\n                                                distanceRatio *\n                                                    (rightPoint.y - leftPoint.y);\n                                        }\n                                    }\n                                }\n                            }\n                            cursor--;\n                            i++; // Check again for points in the same x position\n                            if (cursor < 0) {\n                                return \"break\";\n                            }\n                        }\n                    };\n                    while (i-- && points[cursor]) {\n                        var state_1 = _loop_1();\n                        if (state_1 === \"break\")\n                            break;\n                    }\n                }\n                // Add plotY position and handle stacking\n                points.forEach(function (point, i) {\n                    var stackIndex;\n                    point.plotX += xOffset; // #2049\n                    // Undefined plotY means the point is either on axis, outside series\n                    // range or hidden series. If the series is outside the range of the\n                    // x axis it should fall through with an undefined plotY, but then\n                    // we must remove the shapeArgs (#847). For inverted charts, we need\n                    // to calculate position anyway, because series.invertGroups is not\n                    // defined\n                    if (typeof point.plotY === 'undefined' || inverted) {\n                        if (point.plotX >= 0 &&\n                            point.plotX <= xAxis.len) {\n                            // We're inside xAxis range\n                            if (inverted) {\n                                point.plotY = xAxis.translate(point.x, 0, 1, 0, 1);\n                                point.plotX = defined(point.y) ?\n                                    yAxis.translate(point.y, 0, 0, 0, 1) :\n                                    0;\n                            }\n                            else {\n                                point.plotY = (xAxis.opposite ? 0 : series.yAxis.len) +\n                                    xAxis.offset; // For the windbarb demo\n                            }\n                        }\n                        else {\n                            point.shapeArgs = {}; // 847\n                        }\n                    }\n                    // If multiple flags appear at the same x, order them into a stack\n                    lastPoint = points[i - 1];\n                    if (lastPoint && lastPoint.plotX === point.plotX) {\n                        if (typeof lastPoint.stackIndex === 'undefined') {\n                            lastPoint.stackIndex = 0;\n                        }\n                        stackIndex = lastPoint.stackIndex + 1;\n                    }\n                    point.stackIndex = stackIndex; // #3639\n                });\n                this.onSeries = onSeries;\n            }\n            OnSeriesComposition.translate = translate;\n        })(OnSeriesComposition || (OnSeriesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OnSeriesComposition;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSeries.js', [_modules['Series/Flags/FlagsPoint.js'], _modules['Series/Flags/FlagsSeriesDefaults.js'], _modules['Series/Flags/FlagsSymbols.js'], _modules['Core/Globals.js'], _modules['Series/OnSeriesComposition.js'], _modules['Core/Renderer/RendererUtilities.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (FlagsPoint, FlagsSeriesDefaults, FlagsSymbols, H, OnSeriesComposition, R, SeriesRegistry, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var noop = H.noop;\n        var distribute = R.distribute;\n        var Series = SeriesRegistry.series, ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, wrap = U.wrap;\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * The Flags series.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.flags\n         *\n         * @augments Highcharts.Series\n         */\n        var FlagsSeries = /** @class */ (function (_super) {\n            __extends(FlagsSeries, _super);\n            function FlagsSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Disable animation, but keep clipping (#8546).\n             * @private\n             */\n            FlagsSeries.prototype.animate = function (init) {\n                if (init) {\n                    this.setClip();\n                }\n            };\n            /**\n             * Draw the markers.\n             * @private\n             */\n            FlagsSeries.prototype.drawPoints = function () {\n                var _a, _b;\n                var series = this, points = series.points, chart = series.chart, renderer = chart.renderer, inverted = chart.inverted, options = series.options, optionsY = options.y, yAxis = series.yAxis, boxesMap = {}, boxes = [], borderRadius = isNumber(options.borderRadius) ?\n                    options.borderRadius : 0;\n                var plotX, plotY, shape, i, point, graphic, stackIndex, anchorY, attribs, outsideRight, centered;\n                i = points.length;\n                while (i--) {\n                    point = points[i];\n                    outsideRight =\n                        (inverted ? point.plotY : point.plotX) >\n                            series.xAxis.len;\n                    plotX = point.plotX;\n                    stackIndex = point.stackIndex;\n                    shape = point.options.shape || options.shape;\n                    plotY = point.plotY;\n                    if (typeof plotY !== 'undefined') {\n                        plotY = point.plotY + optionsY -\n                            (typeof stackIndex !== 'undefined' &&\n                                (stackIndex * options.stackDistance));\n                    }\n                    // Skip connectors for higher level stacked points\n                    point.anchorX = stackIndex ? void 0 : point.plotX;\n                    anchorY = stackIndex ? void 0 : point.plotY;\n                    centered = shape !== 'flag';\n                    graphic = point.graphic;\n                    // Only draw the point if y is defined and the flag is within\n                    // the visible area\n                    if (typeof plotY !== 'undefined' &&\n                        plotX >= 0 &&\n                        !outsideRight) {\n                        // #15384\n                        if (graphic && point.hasNewShapeType()) {\n                            graphic = graphic.destroy();\n                        }\n                        // Create the flag\n                        if (!graphic) {\n                            graphic = point.graphic = renderer.label('', 0, void 0, shape, void 0, void 0, options.useHTML)\n                                .addClass('highcharts-point')\n                                .add(series.markerGroup);\n                            // Add reference to the point for tracker (#6303)\n                            if (point.graphic.div) {\n                                point.graphic.div.point = point;\n                            }\n                            graphic.isNew = true;\n                        }\n                        graphic.attr({\n                            align: centered ? 'center' : 'left',\n                            width: options.width,\n                            height: options.height,\n                            'text-align': options.textAlign,\n                            r: borderRadius\n                        });\n                        if (!chart.styledMode) {\n                            graphic\n                                .attr(series.pointAttribs(point))\n                                .css(merge(options.style, point.style))\n                                .shadow(options.shadow);\n                        }\n                        if (plotX > 0) { // #3119\n                            plotX -= graphic.strokeWidth() % 2; // #4285\n                        }\n                        // Plant the flag\n                        attribs = {\n                            y: plotY,\n                            anchorY: anchorY\n                        };\n                        if (options.allowOverlapX) {\n                            attribs.x = plotX;\n                            attribs.anchorX = point.anchorX;\n                        }\n                        graphic.attr({\n                            // Allow empty string as a flag title (#20549)\n                            text: (_b = (_a = point.options.title) !== null && _a !== void 0 ? _a : options.title) !== null && _b !== void 0 ? _b : 'A'\n                        })[graphic.isNew ? 'attr' : 'animate'](attribs);\n                        // Rig for the distribute function\n                        if (!options.allowOverlapX) {\n                            if (!boxesMap[point.plotX]) {\n                                boxesMap[point.plotX] = {\n                                    align: centered ? 0.5 : 0,\n                                    size: graphic.width || 0,\n                                    target: plotX,\n                                    anchorX: plotX\n                                };\n                            }\n                            else {\n                                boxesMap[point.plotX].size = Math.max(boxesMap[point.plotX].size, graphic.width || 0);\n                            }\n                        }\n                        // Set the tooltip anchor position\n                        point.tooltipPos = [\n                            plotX,\n                            plotY + yAxis.pos - chart.plotTop\n                        ]; // #6327\n                    }\n                    else if (graphic) {\n                        point.graphic = graphic.destroy();\n                    }\n                }\n                // Handle X-dimension overlapping\n                if (!options.allowOverlapX) {\n                    var maxDistance_1 = 100;\n                    objectEach(boxesMap, function (box) {\n                        box.plotX = box.anchorX;\n                        boxes.push(box);\n                        maxDistance_1 = Math.max(box.size, maxDistance_1);\n                    });\n                    // If necessary (for overlapping or long labels)  distribute it\n                    // depending on the label width or a hardcoded value, #16041.\n                    distribute(boxes, inverted ? yAxis.len : this.xAxis.len, maxDistance_1);\n                    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                        var point_1 = points_1[_i];\n                        var plotX_1 = point_1.plotX, graphic_1 = point_1.graphic, box = graphic_1 && boxesMap[plotX_1];\n                        if (box && graphic_1) {\n                            // Hide flag when its box position is not specified\n                            // (#8573, #9299)\n                            if (!defined(box.pos)) {\n                                graphic_1.hide().isNew = true;\n                            }\n                            else {\n                                graphic_1[graphic_1.isNew ? 'attr' : 'animate']({\n                                    x: box.pos + (box.align || 0) * box.size,\n                                    anchorX: point_1.anchorX\n                                }).show().isNew = false;\n                            }\n                        }\n                    }\n                }\n                // Can be a mix of SVG and HTML and we need events for both (#6303)\n                if (options.useHTML && series.markerGroup) {\n                    wrap(series.markerGroup, 'on', function (proceed) {\n                        return SVGElement.prototype.on.apply(\n                        // For HTML\n                        // eslint-disable-next-line no-invalid-this\n                        proceed.apply(this, [].slice.call(arguments, 1)), \n                        // And for SVG\n                        [].slice.call(arguments, 1));\n                    });\n                }\n            };\n            /**\n             * Extend the column trackers with listeners to expand and contract\n             * stacks.\n             * @private\n             */\n            FlagsSeries.prototype.drawTracker = function () {\n                var series = this, points = series.points;\n                _super.prototype.drawTracker.call(this);\n                var _loop_1 = function (point) {\n                    var graphic = point.graphic;\n                    if (graphic) {\n                        if (point.unbindMouseOver) {\n                            point.unbindMouseOver();\n                        }\n                        point.unbindMouseOver = addEvent(graphic.element, 'mouseover', function () {\n                            // Raise this point\n                            if (point.stackIndex > 0 &&\n                                !point.raised) {\n                                point._y = graphic.y;\n                                graphic.attr({\n                                    y: point._y - 8\n                                });\n                                point.raised = true;\n                            }\n                            // Revert other raised points\n                            for (var _i = 0, points_3 = points; _i < points_3.length; _i++) {\n                                var otherPoint = points_3[_i];\n                                if (otherPoint !== point &&\n                                    otherPoint.raised &&\n                                    otherPoint.graphic) {\n                                    otherPoint.graphic.attr({\n                                        y: otherPoint._y\n                                    });\n                                    otherPoint.raised = false;\n                                }\n                            }\n                        });\n                    }\n                };\n                /* *\n                * Bring each stacked flag up on mouse over, this allows readability\n                * of vertically stacked elements as well as tight points on the x\n                * axis. #1924.\n                */\n                for (var _i = 0, points_2 = points; _i < points_2.length; _i++) {\n                    var point = points_2[_i];\n                    _loop_1(point);\n                }\n            };\n            /**\n             * Get presentational attributes\n             * @private\n             */\n            FlagsSeries.prototype.pointAttribs = function (point, state) {\n                var options = this.options, color = (point && point.color) || this.color;\n                var lineColor = options.lineColor, lineWidth = (point && point.lineWidth), fill = (point && point.fillColor) || options.fillColor;\n                if (state) {\n                    fill = options.states[state].fillColor;\n                    lineColor = options.states[state].lineColor;\n                    lineWidth = options.states[state].lineWidth;\n                }\n                return {\n                    fill: fill || color,\n                    stroke: lineColor || color,\n                    'stroke-width': lineWidth || options.lineWidth || 0\n                };\n            };\n            /**\n             * @private\n             */\n            FlagsSeries.prototype.setClip = function () {\n                Series.prototype.setClip.apply(this, arguments);\n                if (this.options.clip !== false &&\n                    this.sharedClipKey &&\n                    this.markerGroup) {\n                    this.markerGroup.clip(this.chart.sharedClips[this.sharedClipKey]);\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            FlagsSeries.compose = FlagsSymbols.compose;\n            FlagsSeries.defaultOptions = merge(ColumnSeries.defaultOptions, FlagsSeriesDefaults);\n            return FlagsSeries;\n        }(ColumnSeries));\n        OnSeriesComposition.compose(FlagsSeries);\n        extend(FlagsSeries.prototype, {\n            allowDG: false,\n            forceCrop: true,\n            invertible: false,\n            noSharedTooltip: true,\n            pointClass: FlagsPoint,\n            sorted: false,\n            takeOrdinalPosition: false,\n            trackerGroups: ['markerGroup'],\n            buildKDTree: noop,\n            /**\n             * Inherit the initialization from base Series.\n             * @private\n             */\n            init: Series.prototype.init\n        });\n        SeriesRegistry.registerSeriesType('flags', FlagsSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @typedef {\"circlepin\"|\"flag\"|\"squarepin\"} Highcharts.FlagsShapeValue\n         */\n        ''; // Detach doclets above\n\n        return FlagsSeries;\n    });\n    _registerModule(_modules, 'Core/Axis/BrokenAxis.js', [_modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (StackItem, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Axis with support of broken data rows.\n         * @private\n         */\n        var BrokenAxis;\n        (function (BrokenAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Adds support for broken axes.\n             * @private\n             */\n            function compose(AxisClass, SeriesClass) {\n                if (!AxisClass.keepProps.includes('brokenAxis')) {\n                    AxisClass.keepProps.push('brokenAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.drawBreaks = seriesDrawBreaks;\n                    seriesProto.gappedPath = seriesGappedPath;\n                    addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n                    addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n                }\n                return AxisClass;\n            }\n            BrokenAxis.compose = compose;\n            /**\n             * @private\n             */\n            function onAxisAfterInit() {\n                if (typeof this.brokenAxis !== 'undefined') {\n                    this.brokenAxis.setBreaks(this.options.breaks, false);\n                }\n            }\n            /**\n             * Force Axis to be not-ordinal when breaks are defined.\n             * @private\n             */\n            function onAxisAfterSetOptions() {\n                var _a;\n                var axis = this;\n                if ((_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    axis.options.ordinal = false;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisAfterSetTickPositions() {\n                var axis = this, brokenAxis = axis.brokenAxis;\n                if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n                    var tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n                    for (var i = 0; i < tickPositions.length; i++) {\n                        if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                            newPositions.push(tickPositions[i]);\n                        }\n                    }\n                    axis.tickPositions = newPositions;\n                    axis.tickPositions.info = info;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInit() {\n                var axis = this;\n                if (!axis.brokenAxis) {\n                    axis.brokenAxis = new Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterGeneratePoints() {\n                var _a, _b;\n                var _c = this, isDirty = _c.isDirty, connectNulls = _c.options.connectNulls, points = _c.points, xAxis = _c.xAxis, yAxis = _c.yAxis;\n                // Set, or reset visibility of the points. Axis.setBreaks marks\n                // the series as isDirty\n                if (isDirty) {\n                    var i = points.length;\n                    while (i--) {\n                        var point = points[i];\n                        // Respect nulls inside the break (#4275)\n                        var nullGap = point.y === null && connectNulls === false;\n                        var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x, true)) ||\n                            ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y, true))));\n                        // Set point.visible if in any break.\n                        // If not in break, reset visible to original value.\n                        point.visible = isPointInBreak ?\n                            false :\n                            point.options.visible !== false;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterRender() {\n                this.drawBreaks(this.xAxis, ['x']);\n                this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n            }\n            /**\n             * @private\n             */\n            function seriesDrawBreaks(axis, keys) {\n                var _a;\n                var series = this, points = series.points;\n                var breaks, threshold, y;\n                if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    var brokenAxis_1 = axis.brokenAxis;\n                    keys.forEach(function (key) {\n                        var _a, _b;\n                        breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                        threshold = axis.isXAxis ?\n                            axis.min :\n                            pick(series.options.threshold, axis.min);\n                        // Array of breaks that have been \"zoomed-out\" which means that\n                        // they were shown previously, but now after zoom, they are not\n                        // (#19885).\n                        var breaksOutOfRange = (_b = (_a = axis === null || axis === void 0 ? void 0 : axis.options) === null || _a === void 0 ? void 0 : _a.breaks) === null || _b === void 0 ? void 0 : _b.filter(function (brk) {\n                            var isOut = true;\n                            // Iterate to see if \"brk\" is in axis range\n                            for (var i = 0; i < breaks.length; i++) {\n                                var otherBreak = breaks[i];\n                                if (otherBreak.from === brk.from &&\n                                    otherBreak.to === brk.to) {\n                                    isOut = false;\n                                    break;\n                                }\n                            }\n                            return isOut;\n                        });\n                        points.forEach(function (point) {\n                            y = pick(point['stack' + key.toUpperCase()], point[key]);\n                            breaks.forEach(function (brk) {\n                                if (isNumber(threshold) && isNumber(y)) {\n                                    var eventName = '';\n                                    if ((threshold < brk.from && y > brk.to) ||\n                                        (threshold > brk.from && y < brk.from)) {\n                                        eventName = 'pointBreak';\n                                    }\n                                    else if ((threshold < brk.from &&\n                                        y > brk.from &&\n                                        y < brk.to) || (threshold > brk.from &&\n                                        y > brk.to &&\n                                        y < brk.from)) {\n                                        eventName = 'pointInBreak';\n                                    }\n                                    if (eventName) {\n                                        fireEvent(axis, eventName, { point: point, brk: brk });\n                                    }\n                                }\n                            });\n                            breaksOutOfRange === null || breaksOutOfRange === void 0 ? void 0 : breaksOutOfRange.forEach(function (brk) {\n                                fireEvent(axis, 'pointOutsideOfBreak', { point: point, brk: brk });\n                            });\n                        });\n                    });\n                }\n            }\n            /**\n             * Extend getGraphPath by identifying gaps in the data so that we\n             * can draw a gap in the line or area. This was moved from ordinal\n             * axis module to broken axis module as of #5045.\n             *\n             * @private\n             * @function Highcharts.Series#gappedPath\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Gapped path\n             */\n            function seriesGappedPath() {\n                var currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n                var gapSize = this.options.gapSize, i = points.length - 1, stack;\n                /**\n                 * Defines when to display a gap in the graph, together with the\n                 * [gapUnit](plotOptions.series.gapUnit) option.\n                 *\n                 * In case when `dataGrouping` is enabled, points can be grouped\n                 * into a larger time span. This can make the grouped points to\n                 * have a greater distance than the absolute value of `gapSize`\n                 * property, which will result in disappearing graph completely.\n                 * To prevent this situation the mentioned distance between\n                 * grouped points is used instead of previously defined\n                 * `gapSize`.\n                 *\n                 * In practice, this option is most often used to visualize gaps\n                 * in time series. In a stock chart, intraday data is available\n                 * for daytime hours, while gaps will appear in nights and\n                 * weekends.\n                 *\n                 * @see [gapUnit](plotOptions.series.gapUnit)\n                 * @see [xAxis.breaks](#xAxis.breaks)\n                 *\n                 * @sample {highstock} stock/plotoptions/series-gapsize/\n                 * Setting the gap size to 2 introduces gaps for weekends in\n                 * daily datasets.\n                 *\n                 * @type      {number}\n                 * @default   0\n                 * @product   highstock\n                 * @requires  modules/broken-axis\n                 * @apioption plotOptions.series.gapSize\n                 */\n                /**\n                 * Together with [gapSize](plotOptions.series.gapSize), this\n                 * option defines where to draw gaps in the graph.\n                 *\n                 * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n                 * means that if the distance between two points is greater than\n                 * 5 times that of the two closest points, the graph will be\n                 * broken.\n                 *\n                 * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n                 * axis values, which on a datetime axis is milliseconds. This\n                 * also applies to the navigator series that inherits gap\n                 * options from the base series.\n                 *\n                 * @see [gapSize](plotOptions.series.gapSize)\n                 *\n                 * @type       {string}\n                 * @default    relative\n                 * @since      5.0.13\n                 * @product    highstock\n                 * @validvalue [\"relative\", \"value\"]\n                 * @requires   modules/broken-axis\n                 * @apioption  plotOptions.series.gapUnit\n                 */\n                if (gapSize && i > 0) { // #5008\n                    // Gap unit is relative\n                    if (this.options.gapUnit !== 'value') {\n                        gapSize *= this.basePointRange;\n                    }\n                    // Setting a new gapSize in case dataGrouping is enabled\n                    // (#7686)\n                    if (groupingSize &&\n                        groupingSize > gapSize &&\n                        // Except when DG is forced (e.g. from other series)\n                        // and has lower granularity than actual points (#11351)\n                        groupingSize >= this.basePointRange) {\n                        gapSize = groupingSize;\n                    }\n                    // Extension for ordinal breaks\n                    var current = void 0, next = void 0;\n                    while (i--) {\n                        // Reassign next if it is not visible\n                        if (!(next && next.visible !== false)) {\n                            next = points[i + 1];\n                        }\n                        current = points[i];\n                        // Skip iteration if one of the points is not visible\n                        if (next.visible === false || current.visible === false) {\n                            continue;\n                        }\n                        if (next.x - current.x > gapSize) {\n                            var xRange = (current.x + next.x) / 2;\n                            points.splice(// Insert after this one\n                            i + 1, 0, {\n                                isNull: true,\n                                x: xRange\n                            });\n                            // For stacked chart generate empty stack items, #6546\n                            if (yAxis.stacking && this.options.stacking) {\n                                stack = yAxis.stacking.stacks[this.stackKey][xRange] = new StackItem(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                                stack.total = 0;\n                            }\n                        }\n                        // Assign current to next for the upcoming iteration\n                        next = current;\n                    }\n                }\n                // Call base method\n                return this.getGraphPath(points);\n            }\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Provides support for broken axes.\n             * @private\n             * @class\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                function Additions(axis) {\n                    this.hasBreaks = false;\n                    this.axis = axis;\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                Additions.isInBreak = function (brk, val) {\n                    var repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                        (val - from) % repeat :\n                        repeat - ((from - val) % repeat));\n                    var ret;\n                    if (!brk.inclusive) {\n                        ret = test < length && test !== 0;\n                    }\n                    else {\n                        ret = test <= length;\n                    }\n                    return ret;\n                };\n                /**\n                 * @private\n                 */\n                Additions.lin2Val = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.from >= nval) {\n                            break;\n                        }\n                        else if (brk.to < nval) {\n                            nval += brk.len;\n                        }\n                        else if (Additions.isInBreak(brk, nval)) {\n                            nval += brk.len;\n                        }\n                    }\n                    return nval;\n                };\n                /**\n                 * @private\n                 */\n                Additions.val2Lin = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.to <= val) {\n                            nval -= brk.len;\n                        }\n                        else if (brk.from >= val) {\n                            break;\n                        }\n                        else if (Additions.isInBreak(brk, val)) {\n                            nval -= (val - brk.from);\n                            break;\n                        }\n                    }\n                    return nval;\n                };\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Returns the first break found where the x is larger then break.from\n                 * and smaller then break.to.\n                 *\n                 * @param {number} x\n                 * The number which should be within a break.\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n                 * The array of breaks to search within.\n                 *\n                 * @return {Highcharts.XAxisBreaksOptions|undefined}\n                 * Returns the first break found that matches, returns false if no break\n                 * is found.\n                 */\n                Additions.prototype.findBreakAt = function (x, breaks) {\n                    return find(breaks, function (b) {\n                        return b.from < x && x < b.to;\n                    });\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.isInAnyBreak = function (val, testKeep) {\n                    var brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n                    var i = breaks.length, inbrk, keep, ret;\n                    if (i && isNumber(val)) {\n                        while (i--) {\n                            if (Additions.isInBreak(breaks[i], val)) {\n                                inbrk = true;\n                                if (!keep) {\n                                    keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                                }\n                            }\n                        }\n                        if (inbrk && testKeep) {\n                            ret = inbrk && !keep;\n                        }\n                        else {\n                            ret = inbrk;\n                        }\n                    }\n                    return ret;\n                };\n                /**\n                 * Dynamically set or unset breaks in an axis. This function in lighter\n                 * than using Axis.update, and it also preserves animation.\n                 *\n                 * @private\n                 * @function Highcharts.Axis#setBreaks\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n                 * The breaks to add. When `undefined` it removes existing breaks.\n                 *\n                 * @param {boolean} [redraw=true]\n                 * Whether to redraw the chart immediately.\n                 */\n                Additions.prototype.setBreaks = function (breaks, redraw) {\n                    var brokenAxis = this;\n                    var axis = brokenAxis.axis;\n                    var hasBreaks = isArray(breaks) &&\n                        !!breaks.length &&\n                        !!Object.keys(breaks[0]).length; // Check for [{}], #16368.\n                    axis.isDirty = brokenAxis.hasBreaks !== hasBreaks;\n                    brokenAxis.hasBreaks = hasBreaks;\n                    if (breaks !== axis.options.breaks) {\n                        axis.options.breaks = axis.userOptions.breaks = breaks;\n                    }\n                    axis.forceRedraw = true; // Force recalculation in setScale\n                    // Recalculate series related to the axis.\n                    axis.series.forEach(function (series) {\n                        series.isDirty = true;\n                    });\n                    if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                        // Revert to prototype functions\n                        delete axis.val2lin;\n                        delete axis.lin2val;\n                    }\n                    if (hasBreaks) {\n                        axis.userOptions.ordinal = false;\n                        axis.lin2val = Additions.lin2Val;\n                        axis.val2lin = Additions.val2Lin;\n                        axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                            // If trying to set extremes inside a break, extend min to\n                            // after, and max to before the break ( #3857 )\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_1 = (this.options.breaks || []);\n                                var axisBreak = void 0;\n                                while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                                    newMin = axisBreak.to;\n                                }\n                                while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                                    newMax = axisBreak.from;\n                                }\n                                // If both min and max is within the same break.\n                                if (newMax < newMin) {\n                                    newMax = newMin;\n                                }\n                            }\n                            axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                        };\n                        axis.setAxisTranslation = function () {\n                            axis.constructor.prototype.setAxisTranslation.call(this);\n                            brokenAxis.unitLength = void 0;\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_2 = axis.options.breaks || [], \n                                // Temporary one:\n                                breakArrayT_1 = [], breakArray_1 = [], pointRangePadding = pick(axis.pointRangePadding, 0);\n                                var length_1 = 0, inBrk_1, repeat_1, min_1 = axis.userMin || axis.min, max_1 = axis.userMax || axis.max, start_1, i_1;\n                                // Min & max check (#4247)\n                                breaks_2.forEach(function (brk) {\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        if (Additions.isInBreak(brk, min_1)) {\n                                            min_1 += ((brk.to % repeat_1) -\n                                                (min_1 % repeat_1));\n                                        }\n                                        if (Additions.isInBreak(brk, max_1)) {\n                                            max_1 -= ((max_1 % repeat_1) -\n                                                (brk.from % repeat_1));\n                                        }\n                                    }\n                                });\n                                // Construct an array holding all breaks in the axis\n                                breaks_2.forEach(function (brk) {\n                                    start_1 = brk.from;\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        while (start_1 - repeat_1 > min_1) {\n                                            start_1 -= repeat_1;\n                                        }\n                                        while (start_1 < min_1) {\n                                            start_1 += repeat_1;\n                                        }\n                                        for (i_1 = start_1; i_1 < max_1; i_1 += repeat_1) {\n                                            breakArrayT_1.push({\n                                                value: i_1,\n                                                move: 'in'\n                                            });\n                                            breakArrayT_1.push({\n                                                value: i_1 + brk.to - brk.from,\n                                                move: 'out',\n                                                size: brk.breakSize\n                                            });\n                                        }\n                                    }\n                                });\n                                breakArrayT_1.sort(function (a, b) {\n                                    return ((a.value === b.value) ?\n                                        ((a.move === 'in' ? 0 : 1) -\n                                            (b.move === 'in' ? 0 : 1)) :\n                                        a.value - b.value);\n                                });\n                                // Simplify the breaks\n                                inBrk_1 = 0;\n                                start_1 = min_1;\n                                breakArrayT_1.forEach(function (brk) {\n                                    inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                                    if (inBrk_1 === 1 && brk.move === 'in') {\n                                        start_1 = brk.value;\n                                    }\n                                    if (inBrk_1 === 0 && isNumber(start_1)) {\n                                        breakArray_1.push({\n                                            from: start_1,\n                                            to: brk.value,\n                                            len: brk.value - start_1 - (brk.size || 0)\n                                        });\n                                        length_1 += (brk.value -\n                                            start_1 -\n                                            (brk.size || 0));\n                                    }\n                                });\n                                brokenAxis.breakArray = breakArray_1;\n                                // Used with staticScale, and below the actual axis\n                                // length, when breaks are subtracted.\n                                if (isNumber(min_1) &&\n                                    isNumber(max_1) &&\n                                    isNumber(axis.min)) {\n                                    brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                        pointRangePadding;\n                                    fireEvent(axis, 'afterBreaks');\n                                    if (axis.staticScale) {\n                                        axis.transA = axis.staticScale;\n                                    }\n                                    else if (brokenAxis.unitLength) {\n                                        axis.transA *=\n                                            (max_1 - axis.min + pointRangePadding) /\n                                                brokenAxis.unitLength;\n                                    }\n                                    if (pointRangePadding) {\n                                        axis.minPixelPadding =\n                                            axis.transA * (axis.minPointOffset || 0);\n                                    }\n                                    axis.min = min_1;\n                                    axis.max = max_1;\n                                }\n                            }\n                        };\n                    }\n                    if (pick(redraw, true)) {\n                        axis.chart.redraw();\n                    }\n                };\n                return Additions;\n            }());\n            BrokenAxis.Additions = Additions;\n        })(BrokenAxis || (BrokenAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BrokenAxis;\n    });\n    _registerModule(_modules, 'masters/modules/broken-axis.src.js', [_modules['Core/Globals.js'], _modules['Core/Axis/BrokenAxis.js']], function (Highcharts, BrokenAxis) {\n\n        var G = Highcharts;\n        G.BrokenAxis = G.BrokenAxis || BrokenAxis;\n        G.BrokenAxis.compose(G.Axis, G.Series);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/ApproximationRegistry.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define the available approximation types. The data grouping\n         * approximations takes an array or numbers as the first parameter. In case\n         * of ohlc, four arrays are sent in as four parameters. Each array consists\n         * only of numbers. In case null values belong to the group, the property\n         * .hasNulls will be set to true on the array.\n         *\n         * @product highstock\n         *\n         * @private\n         */\n        var ApproximationRegistry = {\n        // Approximations added programmatically\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ApproximationRegistry;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/ApproximationDefaults.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, extend = U.extend, isNumber = U.isNumber;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function average(arr) {\n            var len = arr.length;\n            var ret = sum(arr);\n            // If we have a number, return it divided by the length. If not,\n            // return null or undefined based on what the sum method finds.\n            if (isNumber(ret) && len) {\n                ret = correctFloat(ret / len);\n            }\n            return ret;\n        }\n        /**\n         * The same as average, but for series with multiple values, like area ranges.\n         * @private\n         */\n        function averages() {\n            var ret = [];\n            [].forEach.call(arguments, function (arr) {\n                ret.push(average(arr));\n            });\n            // Return undefined when first elem. is undefined and let\n            // sum method handle null (#7377)\n            return typeof ret[0] === 'undefined' ? void 0 : ret;\n        }\n        /**\n         * @private\n         */\n        function close(arr) {\n            return arr.length ?\n                arr[arr.length - 1] :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function high(arr) {\n            return arr.length ?\n                arrayMax(arr) :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * HLC, OHLC and range are special cases where a multidimensional array is input\n         * and an array is output.\n         * @private\n         */\n        function hlc(high, low, close) {\n            high = ApproximationRegistry.high(high);\n            low = ApproximationRegistry.low(low);\n            close = ApproximationRegistry.close(close);\n            if (isNumber(high) ||\n                isNumber(low) ||\n                isNumber(close)) {\n                return [high, low, close];\n            }\n        }\n        /**\n         * @private\n         */\n        function low(arr) {\n            return arr.length ?\n                arrayMin(arr) :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function ohlc(open, high, low, close) {\n            open = ApproximationRegistry.open(open);\n            high = ApproximationRegistry.high(high);\n            low = ApproximationRegistry.low(low);\n            close = ApproximationRegistry.close(close);\n            if (isNumber(open) ||\n                isNumber(high) ||\n                isNumber(low) ||\n                isNumber(close)) {\n                return [open, high, low, close];\n            }\n        }\n        /**\n         * @private\n         */\n        function open(arr) {\n            return arr.length ? arr[0] : (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function range(low, high) {\n            low = ApproximationRegistry.low(low);\n            high = ApproximationRegistry.high(high);\n            if (isNumber(low) || isNumber(high)) {\n                return [low, high];\n            }\n            if (low === null && high === null) {\n                return null;\n            }\n            // Else, return is undefined\n        }\n        /**\n         * @private\n         */\n        function sum(arr) {\n            var len = arr.length, ret;\n            // 1. it consists of nulls exclusive\n            if (!len && arr.hasNulls) {\n                ret = null;\n                // 2. it has a length and real values\n            }\n            else if (len) {\n                ret = 0;\n                while (len--) {\n                    ret += arr[len];\n                }\n            }\n            // 3. it has zero length, so just return undefined\n            // => doNothing()\n            return ret;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ApproximationDefaults = {\n            average: average,\n            averages: averages,\n            close: close,\n            high: high,\n            hlc: hlc,\n            low: low,\n            ohlc: ohlc,\n            open: open,\n            range: range,\n            sum: sum\n        };\n        extend(ApproximationRegistry, ApproximationDefaults);\n\n        return ApproximationDefaults;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Common options\n         * @private\n         */\n        var common = {\n            /// enabled: null, // (true for stock charts, false for basic),\n            // forced: undefined,\n            groupPixelWidth: 2,\n            // The first one is the point or start value, the second is the start\n            // value if we're dealing with range, the third one is the end value if\n            // dealing with a range\n            dateTimeLabelFormats: {\n                millisecond: [\n                    '%A, %e %b, %H:%M:%S.%L',\n                    '%A, %e %b, %H:%M:%S.%L',\n                    '-%H:%M:%S.%L'\n                ],\n                second: [\n                    '%A, %e %b, %H:%M:%S',\n                    '%A, %e %b, %H:%M:%S',\n                    '-%H:%M:%S'\n                ],\n                minute: [\n                    '%A, %e %b, %H:%M',\n                    '%A, %e %b, %H:%M',\n                    '-%H:%M'\n                ],\n                hour: [\n                    '%A, %e %b, %H:%M',\n                    '%A, %e %b, %H:%M',\n                    '-%H:%M'\n                ],\n                day: [\n                    '%A, %e %b %Y',\n                    '%A, %e %b',\n                    '-%A, %e %b %Y'\n                ],\n                week: [\n                    'Week from %A, %e %b %Y',\n                    '%A, %e %b',\n                    '-%A, %e %b %Y'\n                ],\n                month: [\n                    '%B %Y',\n                    '%B',\n                    '-%B %Y'\n                ],\n                year: [\n                    '%Y',\n                    '%Y',\n                    '-%Y'\n                ]\n            }\n            /// smoothed = false, // enable this for navigator series only\n        };\n        /**\n         * Extends common options\n         * @private\n         */\n        var seriesSpecific = {\n            line: {},\n            spline: {},\n            area: {},\n            areaspline: {},\n            arearange: {},\n            column: {\n                groupPixelWidth: 10\n            },\n            columnrange: {\n                groupPixelWidth: 10\n            },\n            candlestick: {\n                groupPixelWidth: 10\n            },\n            ohlc: {\n                groupPixelWidth: 5\n            },\n            hlc: {\n                groupPixelWidth: 5\n                // Move to HeikinAshiSeries.ts after refactoring data grouping.\n            },\n            heikinashi: {\n                groupPixelWidth: 10\n            }\n        };\n        /**\n         * Units are defined in a separate array to allow complete overriding in\n         * case of a user option.\n         * @private\n         */\n        var units = [\n            [\n                'millisecond',\n                [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // Allowed multiples\n            ], [\n                'second',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'minute',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'hour',\n                [1, 2, 3, 4, 6, 8, 12]\n            ], [\n                'day',\n                [1]\n            ], [\n                'week',\n                [1]\n            ], [\n                'month',\n                [1, 3, 6]\n            ], [\n                'year',\n                null\n            ]\n        ];\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingDefaults = {\n            common: common,\n            seriesSpecific: seriesSpecific,\n            units: units\n        };\n\n        return DataGroupingDefaults;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingAxisComposition.js', [_modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Core/Utilities.js']], function (DataGroupingDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var AxisConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Check the groupPixelWidth and apply the grouping if needed.\n         * Fired only after processing the data.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Axis#applyGrouping\n         */\n        function applyGrouping(e) {\n            var axis = this, series = axis.series;\n            // Reset the groupPixelWidth for all series, #17141.\n            series.forEach(function (series) {\n                series.groupPixelWidth = void 0; // #2110\n            });\n            series.forEach(function (series) {\n                series.groupPixelWidth = (axis.getGroupPixelWidth &&\n                    axis.getGroupPixelWidth());\n                if (series.groupPixelWidth) {\n                    series.hasProcessed = true; // #2692\n                }\n                // Fire independing on series.groupPixelWidth to always set a proper\n                // dataGrouping state, (#16238)\n                series.applyGrouping(!!e.hasExtremesChanged);\n            });\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass) {\n            AxisConstructor = AxisClass;\n            var axisProto = AxisClass.prototype;\n            if (!axisProto.applyGrouping) {\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                // When all series are processed, calculate the group pixel width and\n                // then if this value is different than zero apply groupings.\n                addEvent(AxisClass, 'postProcessData', applyGrouping);\n                extend(axisProto, {\n                    applyGrouping: applyGrouping,\n                    getGroupPixelWidth: getGroupPixelWidth,\n                    setDataGrouping: setDataGrouping\n                });\n            }\n        }\n        /**\n         * Get the data grouping pixel width based on the greatest defined individual\n         * width of the axis' series, and if whether one of the axes need grouping.\n         * @private\n         */\n        function getGroupPixelWidth() {\n            var series = this.series;\n            var i = series.length, groupPixelWidth = 0, doGrouping = false, dataLength, dgOptions;\n            // If one of the series needs grouping, apply it to all (#1634)\n            while (i--) {\n                dgOptions = series[i].options.dataGrouping;\n                if (dgOptions) { // #2692\n                    // If multiple series are compared on the same x axis, give them the\n                    // same group pixel width (#334)\n                    groupPixelWidth = Math.max(groupPixelWidth, \n                    // Fallback to commonOptions (#9693)\n                    pick(dgOptions.groupPixelWidth, DataGroupingDefaults.common.groupPixelWidth));\n                    dataLength = (series[i].processedXData || series[i].data).length;\n                    // Execute grouping if the amount of points is greater than the\n                    // limit defined in groupPixelWidth\n                    if (series[i].groupPixelWidth ||\n                        (dataLength >\n                            (this.chart.plotSizeX / groupPixelWidth)) ||\n                        (dataLength && dgOptions.forced)) {\n                        doGrouping = true;\n                    }\n                }\n            }\n            return doGrouping ? groupPixelWidth : 0;\n        }\n        /**\n         * When resetting the scale reset the hasProcessed flag to avoid taking\n         * previous data grouping of neighbour series into account when determining\n         * group pixel width (#2692).\n         * @private\n         */\n        function onAfterSetScale() {\n            this.series.forEach(function (series) {\n                series.hasProcessed = false;\n            });\n        }\n        /**\n         * Highcharts Stock only. Force data grouping on all the axis' series.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Axis#setDataGrouping\n         *\n         * @param {boolean|Highcharts.DataGroupingOptionsObject} [dataGrouping]\n         *        A `dataGrouping` configuration. Use `false` to disable data grouping\n         *        dynamically.\n         *\n         * @param {boolean} [redraw=true]\n         *        Whether to redraw the chart or wait for a later call to\n         *        {@link Chart#redraw}.\n         */\n        function setDataGrouping(dataGrouping, redraw) {\n            var axis = this;\n            var i;\n            redraw = pick(redraw, true);\n            if (!dataGrouping) {\n                dataGrouping = {\n                    forced: false,\n                    units: null\n                };\n            }\n            // Axis is instantiated, update all series\n            if (this instanceof AxisConstructor) {\n                i = this.series.length;\n                while (i--) {\n                    this.series[i].update({\n                        dataGrouping: dataGrouping\n                    }, false);\n                }\n                // Axis not yet instantiated, alter series options\n            }\n            else {\n                this.chart.options.series.forEach(function (seriesOptions) {\n                    // Merging dataGrouping options with already defined options #16759\n                    seriesOptions.dataGrouping = typeof dataGrouping === 'boolean' ?\n                        dataGrouping :\n                        merge(dataGrouping, seriesOptions.dataGrouping);\n                });\n            }\n            // Clear ordinal slope, so we won't accidentally use the old one (#7827)\n            if (axis.ordinal) {\n                axis.ordinal.slope = void 0;\n            }\n            if (redraw) {\n                this.chart.redraw();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingAxisComposition = {\n            compose: compose\n        };\n\n        return DataGroupingAxisComposition;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingSeriesComposition.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Core/Axis/DateTimeAxis.js'], _modules['Core/Defaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, DataGroupingDefaults, DateTimeAxis, D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var seriesProto = SeriesRegistry.series.prototype;\n        var addEvent = U.addEvent, defined = U.defined, error = U.error, extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var baseGeneratePoints = seriesProto.generatePoints;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function adjustExtremes(xAxis, groupedXData) {\n            // Make sure the X axis extends to show the first group (#2533)\n            // But only for visible series (#5493, #6393)\n            if (defined(groupedXData[0]) &&\n                isNumber(xAxis.min) &&\n                isNumber(xAxis.dataMin) &&\n                groupedXData[0] < xAxis.min) {\n                if ((!defined(xAxis.options.min) &&\n                    xAxis.min <= xAxis.dataMin) ||\n                    xAxis.min === xAxis.dataMin) {\n                    xAxis.min = Math.min(groupedXData[0], xAxis.min);\n                }\n                xAxis.dataMin = Math.min(groupedXData[0], xAxis.dataMin);\n            }\n            // When the last anchor set, change the extremes that\n            // the last point is visible (#12455).\n            if (defined(groupedXData[groupedXData.length - 1]) &&\n                isNumber(xAxis.max) &&\n                isNumber(xAxis.dataMax) &&\n                groupedXData[groupedXData.length - 1] > xAxis.max) {\n                if ((!defined(xAxis.options.max) &&\n                    isNumber(xAxis.dataMax) &&\n                    xAxis.max >= xAxis.dataMax) || xAxis.max === xAxis.dataMax) {\n                    xAxis.max = Math.max(groupedXData[groupedXData.length - 1], xAxis.max);\n                }\n                xAxis.dataMax = Math.max(groupedXData[groupedXData.length - 1], xAxis.dataMax);\n            }\n        }\n        /**\n         * @private\n         */\n        function anchorPoints(series, groupedXData, xMax) {\n            var options = series.options, dataGroupingOptions = options.dataGrouping, totalRange = (series.currentDataGrouping && series.currentDataGrouping.gapSize);\n            if (!(dataGroupingOptions &&\n                series.xData &&\n                totalRange &&\n                series.groupMap)) {\n                return;\n            }\n            var groupedDataLastIndex = groupedXData.length - 1, anchor = dataGroupingOptions.anchor, firstAnchor = dataGroupingOptions.firstAnchor, lastAnchor = dataGroupingOptions.lastAnchor;\n            var anchorIndexIterator = groupedXData.length - 1, anchorFirstIndex = 0;\n            // Change the first point position, but only when it is\n            // the first point in the data set not in the current zoom.\n            if (firstAnchor && series.xData[0] >= groupedXData[0]) {\n                anchorFirstIndex++;\n                var groupStart = series.groupMap[0].start, groupLength = series.groupMap[0].length;\n                var firstGroupEnd = void 0;\n                if (isNumber(groupStart) && isNumber(groupLength)) {\n                    firstGroupEnd = groupStart + (groupLength - 1);\n                }\n                groupedXData[0] = {\n                    start: groupedXData[0],\n                    middle: groupedXData[0] + 0.5 * totalRange,\n                    end: groupedXData[0] + totalRange,\n                    firstPoint: series.xData[0],\n                    lastPoint: firstGroupEnd && series.xData[firstGroupEnd]\n                }[firstAnchor];\n            }\n            // Change the last point position but only when it is\n            // the last point in the data set not in the current zoom,\n            // or if it is not the 1st point simultaneously.\n            if (groupedDataLastIndex > 0 &&\n                lastAnchor &&\n                totalRange &&\n                groupedXData[groupedDataLastIndex] >= xMax - totalRange) {\n                anchorIndexIterator--;\n                var lastGroupStart = series.groupMap[series.groupMap.length - 1].start;\n                groupedXData[groupedDataLastIndex] = {\n                    start: groupedXData[groupedDataLastIndex],\n                    middle: groupedXData[groupedDataLastIndex] + 0.5 * totalRange,\n                    end: groupedXData[groupedDataLastIndex] + totalRange,\n                    firstPoint: lastGroupStart && series.xData[lastGroupStart],\n                    lastPoint: series.xData[series.xData.length - 1]\n                }[lastAnchor];\n            }\n            if (anchor && anchor !== 'start') {\n                var shiftInterval = (totalRange *\n                    { middle: 0.5, end: 1 }[anchor]);\n                // Anchor the rest of the points apart from the ones, that were\n                // previously moved.\n                while (anchorIndexIterator >= anchorFirstIndex) {\n                    groupedXData[anchorIndexIterator] += shiftInterval;\n                    anchorIndexIterator--;\n                }\n            }\n        }\n        /**\n         * For the processed data, calculate the grouped data if needed.\n         *\n         * @private\n         * @function Highcharts.Series#applyGrouping\n         */\n        function applyGrouping(hasExtremesChanged) {\n            var series = this, chart = series.chart, options = series.options, dataGroupingOptions = options.dataGrouping, groupingEnabled = series.allowDG !== false && dataGroupingOptions &&\n                pick(dataGroupingOptions.enabled, chart.options.isStock), reserveSpace = series.reserveSpace(), lastDataGrouping = this.currentDataGrouping;\n            var currentDataGrouping, croppedData, revertRequireSorting = false;\n            // Data needs to be sorted for dataGrouping\n            if (groupingEnabled && !series.requireSorting) {\n                series.requireSorting = revertRequireSorting = true;\n            }\n            // Skip if skipDataGrouping method returns false or if grouping is disabled\n            // (in that order).\n            var skip = skipDataGrouping(series, hasExtremesChanged) === false || !groupingEnabled;\n            // Revert original requireSorting value if changed\n            if (revertRequireSorting) {\n                series.requireSorting = false;\n            }\n            if (skip) {\n                return;\n            }\n            series.destroyGroupedData();\n            var processedXData = dataGroupingOptions.groupAll ?\n                series.xData :\n                series.processedXData, processedYData = dataGroupingOptions.groupAll ?\n                series.yData :\n                series.processedYData, plotSizeX = chart.plotSizeX, xAxis = series.xAxis, ordinal = xAxis.options.ordinal, groupPixelWidth = series.groupPixelWidth;\n            var i, hasGroupedData;\n            // Execute grouping if the amount of points is greater than the limit\n            // defined in groupPixelWidth\n            if (groupPixelWidth &&\n                processedXData &&\n                processedXData.length &&\n                plotSizeX) {\n                hasGroupedData = true;\n                // Force recreation of point instances in series.translate, #5699\n                series.isDirty = true;\n                series.points = null; // #6709\n                var extremes = xAxis.getExtremes(), xMin = extremes.min, xMax = extremes.max, groupIntervalFactor = (ordinal &&\n                    xAxis.ordinal &&\n                    xAxis.ordinal.getGroupIntervalFactor(xMin, xMax, series)) || 1, interval = (groupPixelWidth * (xMax - xMin) / plotSizeX) *\n                    groupIntervalFactor, groupPositions = xAxis.getTimeTicks(DateTimeAxis.Additions.prototype.normalizeTimeTickInterval(interval, dataGroupingOptions.units ||\n                    DataGroupingDefaults.units), \n                // Processed data may extend beyond axis (#4907)\n                Math.min(xMin, processedXData[0]), Math.max(xMax, processedXData[processedXData.length - 1]), xAxis.options.startOfWeek, processedXData, series.closestPointRange), groupedData = seriesProto.groupData.apply(series, [\n                    processedXData,\n                    processedYData,\n                    groupPositions,\n                    dataGroupingOptions.approximation\n                ]);\n                var groupedXData = groupedData.groupedXData, groupedYData = groupedData.groupedYData, gapSize = 0;\n                // The smoothed option is deprecated, instead, there is a fallback\n                // to the new anchoring mechanism. #12455.\n                if (dataGroupingOptions &&\n                    dataGroupingOptions.smoothed &&\n                    groupedXData.length) {\n                    dataGroupingOptions.firstAnchor = 'firstPoint';\n                    dataGroupingOptions.anchor = 'middle';\n                    dataGroupingOptions.lastAnchor = 'lastPoint';\n                    error(32, false, chart, {\n                        'dataGrouping.smoothed': 'use dataGrouping.anchor'\n                    });\n                }\n                // Record what data grouping values were used\n                for (i = 1; i < groupPositions.length; i++) {\n                    // The grouped gapSize needs to be the largest distance between\n                    // the group to capture varying group sizes like months or DST\n                    // crossing (#10000). Also check that the gap is not at the\n                    // start of a segment.\n                    if (!groupPositions.info.segmentStarts ||\n                        groupPositions.info.segmentStarts.indexOf(i) === -1) {\n                        gapSize = Math.max(groupPositions[i] - groupPositions[i - 1], gapSize);\n                    }\n                }\n                currentDataGrouping = groupPositions.info;\n                currentDataGrouping.gapSize = gapSize;\n                series.closestPointRange = groupPositions.info.totalRange;\n                series.groupMap = groupedData.groupMap;\n                series.currentDataGrouping = currentDataGrouping;\n                anchorPoints(series, groupedXData, xMax);\n                if (reserveSpace) {\n                    adjustExtremes(xAxis, groupedXData);\n                }\n                // We calculated all group positions but we should render\n                // only the ones within the visible range\n                if (dataGroupingOptions.groupAll) {\n                    // Keep the reference to all grouped points\n                    // for further calculation (eg. heikinashi).\n                    series.allGroupedData = groupedYData;\n                    croppedData = series.cropData(groupedXData, groupedYData, xAxis.min, xAxis.max);\n                    groupedXData = croppedData.xData;\n                    groupedYData = croppedData.yData;\n                    series.cropStart = croppedData.start; // #15005\n                }\n                // Set series props\n                series.processedXData = groupedXData;\n                series.processedYData = groupedYData;\n            }\n            else {\n                series.groupMap = null;\n                series.currentDataGrouping = void 0;\n            }\n            series.hasGroupedData = hasGroupedData;\n            series.preventGraphAnimation =\n                (lastDataGrouping && lastDataGrouping.totalRange) !==\n                    (currentDataGrouping && currentDataGrouping.totalRange);\n        }\n        /**\n         * @private\n         */\n        function compose(SeriesClass) {\n            var seriesProto = SeriesClass.prototype;\n            if (!seriesProto.applyGrouping) {\n                var PointClass = SeriesClass.prototype.pointClass;\n                // Override point prototype to throw a warning when trying to update\n                // grouped points.\n                addEvent(PointClass, 'update', function () {\n                    if (this.dataGroup) {\n                        error(24, false, this.series.chart);\n                        return false;\n                    }\n                });\n                addEvent(SeriesClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(SeriesClass, 'destroy', destroyGroupedData);\n                extend(seriesProto, {\n                    applyGrouping: applyGrouping,\n                    destroyGroupedData: destroyGroupedData,\n                    generatePoints: generatePoints,\n                    getDGApproximation: getDGApproximation,\n                    groupData: groupData\n                });\n            }\n        }\n        /**\n         * Destroy the grouped data points. #622, #740\n         * @private\n         */\n        function destroyGroupedData() {\n            // Clear previous groups\n            if (this.groupedData) {\n                this.groupedData.forEach(function (point, i) {\n                    if (point) {\n                        this.groupedData[i] = point.destroy ?\n                            point.destroy() : null;\n                    }\n                }, this);\n                // Clears all:\n                // - `this.groupedData`\n                // - `this.points`\n                // - `preserve` object in series.update()\n                this.groupedData.length = 0;\n                delete this.allGroupedData; // #19892\n            }\n        }\n        /**\n         * Override the generatePoints method by adding a reference to grouped data\n         * @private\n         */\n        function generatePoints() {\n            baseGeneratePoints.apply(this);\n            // Record grouped data in order to let it be destroyed the next time\n            // processData runs\n            this.destroyGroupedData(); // #622\n            this.groupedData = this.hasGroupedData ? this.points : null;\n        }\n        /**\n         * Set default approximations to the prototypes if present. Properties are\n         * inherited down. Can be overridden for individual series types.\n         * @private\n         */\n        function getDGApproximation() {\n            if (this.is('arearange')) {\n                return 'range';\n            }\n            if (this.is('ohlc')) {\n                return 'ohlc';\n            }\n            if (this.is('hlc')) {\n                return 'hlc';\n            }\n            if (\n            // #18974, default approximation for cumulative\n            // should be `sum` when `dataGrouping` is enabled\n            this.is('column') ||\n                this.options.cumulative) {\n                return 'sum';\n            }\n            return 'average';\n        }\n        /**\n         * Highcharts Stock only. Takes parallel arrays of x and y data and groups the\n         * data into intervals defined by groupPositions, a collection of starting x\n         * values for each group.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Series#groupData\n         * @param {Array<number>} xData\n         *        Parallel array of x data.\n         * @param {Array<(number|null|undefined)>|Array<Array<(number|null|undefined)>>} yData\n         *        Parallel array of y data.\n         * @param {Array<number>} groupPositions\n         *        Group positions.\n         * @param {string|Function} [approximation]\n         *        Approximation to use.\n         * @return {Highcharts.DataGroupingResultObject}\n         *         Mapped groups.\n         */\n        function groupData(xData, yData, groupPositions, approximation) {\n            var series = this, data = series.data, dataOptions = series.options && series.options.data, groupedXData = [], groupedYData = [], groupMap = [], dataLength = xData.length, \n            // When grouping the fake extended axis for panning, we don't need to\n            // consider y\n            handleYData = !!yData, values = [], pointArrayMap = series.pointArrayMap, pointArrayMapLength = pointArrayMap && pointArrayMap.length, extendedPointArrayMap = ['x'].concat(pointArrayMap || ['y']), groupAll = (this.options.dataGrouping &&\n                this.options.dataGrouping.groupAll);\n            var pointX, pointY, groupedY, pos = 0, start = 0;\n            var approximationFn = (typeof approximation === 'function' ?\n                approximation :\n                approximation && ApproximationRegistry[approximation] ?\n                    ApproximationRegistry[approximation] :\n                    ApproximationRegistry[(series.getDGApproximation && series.getDGApproximation() ||\n                        'average')]);\n            // Calculate values array size from pointArrayMap length\n            if (pointArrayMapLength) {\n                var len = pointArrayMap.length;\n                while (len--) {\n                    values.push([]);\n                }\n            }\n            else {\n                values.push([]);\n            }\n            var valuesLen = pointArrayMapLength || 1;\n            for (var i = 0; i <= dataLength; i++) {\n                // Start with the first point within the X axis range (#2696)\n                if (xData[i] < groupPositions[0]) {\n                    continue; // With next point\n                }\n                // When a new group is entered, summarize and initialize\n                // the previous group\n                while ((typeof groupPositions[pos + 1] !== 'undefined' &&\n                    xData[i] >= groupPositions[pos + 1]) ||\n                    i === dataLength) { // Get the last group\n                    // get group x and y\n                    pointX = groupPositions[pos];\n                    series.dataGroupInfo = {\n                        start: groupAll ? start : (series.cropStart + start),\n                        length: values[0].length,\n                        groupStart: pointX\n                    };\n                    groupedY = approximationFn.apply(series, values);\n                    // By default, let options of the first grouped point be passed over\n                    // to the grouped point. This allows preserving properties like\n                    // `name` and `color` or custom properties. Implementers can\n                    // override this from the approximation function, where they can\n                    // write custom options to `this.dataGroupInfo.options`.\n                    if (series.pointClass && !defined(series.dataGroupInfo.options)) {\n                        // Convert numbers and arrays into objects\n                        series.dataGroupInfo.options = merge(series.pointClass.prototype\n                            .optionsToObject.call({ series: series }, series.options.data[series.cropStart + start]));\n                        // Make sure the raw data (x, y, open, high etc) is not copied\n                        // over and overwriting approximated data.\n                        extendedPointArrayMap.forEach(function (key) {\n                            delete series.dataGroupInfo.options[key];\n                        });\n                    }\n                    // Push the grouped data\n                    if (typeof groupedY !== 'undefined') {\n                        groupedXData.push(pointX);\n                        groupedYData.push(groupedY);\n                        groupMap.push(series.dataGroupInfo);\n                    }\n                    // Reset the aggregate arrays\n                    start = i;\n                    for (var j = 0; j < valuesLen; j++) {\n                        values[j].length = 0; // Faster than values[j] = []\n                        values[j].hasNulls = false;\n                    }\n                    // Advance on the group positions\n                    pos += 1;\n                    // Don't loop beyond the last group\n                    if (i === dataLength) {\n                        break;\n                    }\n                }\n                // Break out\n                if (i === dataLength) {\n                    break;\n                }\n                // For each raw data point, push it to an array that contains all values\n                // for this specific group\n                if (pointArrayMap) {\n                    var index = (series.options.dataGrouping &&\n                        series.options.dataGrouping.groupAll ?\n                        i : series.cropStart + i), point = (data && data[index]) ||\n                        series.pointClass.prototype.applyOptions.apply({\n                            series: series\n                        }, [dataOptions[index]]);\n                    var val = void 0;\n                    for (var j = 0; j < pointArrayMapLength; j++) {\n                        val = point[pointArrayMap[j]];\n                        if (isNumber(val)) {\n                            values[j].push(val);\n                        }\n                        else if (val === null) {\n                            values[j].hasNulls = true;\n                        }\n                    }\n                }\n                else {\n                    pointY = handleYData ? yData[i] : null;\n                    if (isNumber(pointY)) {\n                        values[0].push(pointY);\n                    }\n                    else if (pointY === null) {\n                        values[0].hasNulls = true;\n                    }\n                }\n            }\n            return {\n                groupedXData: groupedXData,\n                groupedYData: groupedYData,\n                groupMap: groupMap\n            };\n        }\n        /**\n         * Handle default options for data grouping. This must be set at runtime because\n         * some series types are defined after this.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = e.options, type = this.type, plotOptions = this.chart.options.plotOptions, \n            // External series, for example technical indicators should also inherit\n            // commonOptions which are not available outside this module\n            baseOptions = (this.useCommonDataGrouping &&\n                DataGroupingDefaults.common), seriesSpecific = DataGroupingDefaults.seriesSpecific;\n            var defaultOptions = D.defaultOptions.plotOptions[type].dataGrouping;\n            if (plotOptions && (seriesSpecific[type] || baseOptions)) { // #1284\n                var rangeSelector = this.chart.rangeSelector;\n                if (!defaultOptions) {\n                    defaultOptions = merge(DataGroupingDefaults.common, seriesSpecific[type]);\n                }\n                options.dataGrouping = merge(baseOptions, defaultOptions, plotOptions.series && plotOptions.series.dataGrouping, // #1228\n                // Set by the StockChart constructor:\n                plotOptions[type].dataGrouping, this.userOptions.dataGrouping, !options.isInternal &&\n                    rangeSelector &&\n                    isNumber(rangeSelector.selected) &&\n                    rangeSelector.buttonOptions[rangeSelector.selected].dataGrouping);\n            }\n        }\n        /**\n         * @private\n         */\n        function skipDataGrouping(series, force) {\n            return !(series.isCartesian &&\n                !series.isDirty &&\n                !series.xAxis.isDirty &&\n                !series.yAxis.isDirty &&\n                !force);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingSeriesComposition = {\n            compose: compose,\n            groupData: groupData\n        };\n\n        return DataGroupingSeriesComposition;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGrouping.js', [_modules['Extensions/DataGrouping/DataGroupingAxisComposition.js'], _modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Extensions/DataGrouping/DataGroupingSeriesComposition.js'], _modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (DataGroupingAxisComposition, DataGroupingDefaults, DataGroupingSeriesComposition, F, H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var format = F.format;\n        var composed = H.composed;\n        var addEvent = U.addEvent, extend = U.extend, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, SeriesClass, TooltipClass) {\n            DataGroupingAxisComposition.compose(AxisClass);\n            DataGroupingSeriesComposition.compose(SeriesClass);\n            if (TooltipClass &&\n                pushUnique(composed, 'DataGrouping')) {\n                addEvent(TooltipClass, 'headerFormatter', onTooltipHeaderFormatter);\n            }\n        }\n        /**\n         * Extend the original method, make the tooltip's header reflect the grouped\n         * range.\n         * @private\n         */\n        function onTooltipHeaderFormatter(e) {\n            var _a;\n            var chart = this.chart, time = chart.time, labelConfig = e.labelConfig, series = labelConfig.series, point = labelConfig.point, options = series.options, tooltipOptions = series.tooltipOptions, dataGroupingOptions = options.dataGrouping, xAxis = series.xAxis;\n            var xDateFormat = tooltipOptions.xDateFormat, xDateFormatEnd, currentDataGrouping, dateTimeLabelFormats, labelFormats, formattedKey, formatString = tooltipOptions[e.isFooter ? 'footerFormat' : 'headerFormat'];\n            // Apply only to grouped series\n            if (xAxis &&\n                xAxis.options.type === 'datetime' &&\n                dataGroupingOptions &&\n                isNumber(labelConfig.key)) {\n                // Set variables\n                currentDataGrouping = series.currentDataGrouping;\n                dateTimeLabelFormats = dataGroupingOptions.dateTimeLabelFormats ||\n                    // Fallback to commonOptions (#9693)\n                    DataGroupingDefaults.common.dateTimeLabelFormats;\n                // If we have grouped data, use the grouping information to get the\n                // right format\n                if (currentDataGrouping) {\n                    labelFormats = dateTimeLabelFormats[currentDataGrouping.unitName];\n                    if (currentDataGrouping.count === 1) {\n                        xDateFormat = labelFormats[0];\n                    }\n                    else {\n                        xDateFormat = labelFormats[1];\n                        xDateFormatEnd = labelFormats[2];\n                    }\n                    // If not grouped, and we don't have set the xDateFormat option, get the\n                    // best fit, so if the least distance between points is one minute, show\n                    // it, but if the least distance is one day, skip hours and minutes etc.\n                }\n                else if (!xDateFormat && dateTimeLabelFormats && xAxis.dateTime) {\n                    xDateFormat = xAxis.dateTime.getXDateFormat(labelConfig.x, tooltipOptions.dateTimeLabelFormats);\n                }\n                var groupStart = pick((_a = series.groupMap) === null || _a === void 0 ? void 0 : _a[point.index].groupStart, labelConfig.key), groupEnd = groupStart + (currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.totalRange) - 1;\n                formattedKey = time.dateFormat(xDateFormat, groupStart);\n                if (xDateFormatEnd) {\n                    formattedKey += time.dateFormat(xDateFormatEnd, groupEnd);\n                }\n                // Replace default header style with class name\n                if (series.chart.styledMode) {\n                    formatString = this.styledModeFormat(formatString);\n                }\n                // Return the replaced format\n                e.text = format(formatString, {\n                    point: extend(labelConfig.point, { key: formattedKey }),\n                    series: series\n                }, chart);\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingComposition = {\n            compose: compose,\n            groupData: DataGroupingSeriesComposition.groupData\n        };\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @typedef {\"average\"|\"averages\"|\"open\"|\"high\"|\"low\"|\"close\"|\"sum\"} Highcharts.DataGroupingApproximationValue\n         */\n        /**\n         * The position of the point inside the group.\n         *\n         * @typedef    {\"start\"|\"middle\"|\"end\"} Highcharts.DataGroupingAnchor\n         */\n        /**\n         * The position of the first or last point in the series inside the group.\n         *\n         * @typedef    {\"start\"|\"middle\"|\"end\"|\"firstPoint\"|\"lastPoint\"} Highcharts.DataGroupingAnchorExtremes\n         */\n        /**\n         * Highcharts Stock only.\n         *\n         * @product highstock\n         * @interface Highcharts.DataGroupingInfoObject\n         */ /**\n        * @name Highcharts.DataGroupingInfoObject#length\n        * @type {number}\n        */ /**\n        * @name Highcharts.DataGroupingInfoObject#options\n        * @type {Highcharts.SeriesOptionsType|undefined}\n        */ /**\n        * @name Highcharts.DataGroupingInfoObject#start\n        * @type {number}\n        */\n        /**\n         * Highcharts Stock only.\n         *\n         * @product highstock\n         * @interface Highcharts.DataGroupingResultObject\n         */ /**\n        * @name Highcharts.DataGroupingResultObject#groupedXData\n        * @type {Array<number>}\n        */ /**\n        * @name Highcharts.DataGroupingResultObject#groupedYData\n        * @type {Array<(number|null|undefined)>|Array<Array<(number|null|undefined)>>}\n        */ /**\n        * @name Highcharts.DataGroupingResultObject#groupMap\n        * @type {Array<DataGroupingInfoObject>}\n        */\n        /**\n         * Highcharts Stock only. If a point object is created by data\n         * grouping, it doesn't reflect actual points in the raw\n         * data. In this case, the `dataGroup` property holds\n         * information that points back to the raw data.\n         *\n         * - `dataGroup.start` is the index of the first raw data\n         *   point in the group.\n         *\n         * - `dataGroup.length` is the amount of points in the\n         *   group.\n         *\n         * @sample stock/members/point-datagroup\n         *         Click to inspect raw data points\n         *\n         * @product highstock\n         *\n         * @name Highcharts.Point#dataGroup\n         * @type {Highcharts.DataGroupingInfoObject|undefined}\n         */\n        (''); // Detach doclets above\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Data grouping is the concept of sampling the data values into larger\n         * blocks in order to ease readability and increase performance of the\n         * JavaScript charts. Highcharts Stock by default applies data grouping when\n         * the points become closer than a certain pixel value, determined by\n         * the `groupPixelWidth` option.\n         *\n         * If data grouping is applied, the grouping information of grouped\n         * points can be read from the [Point.dataGroup](\n         * /class-reference/Highcharts.Point#dataGroup). If point options other than\n         * the data itself are set, for example `name` or `color` or custom properties,\n         * the grouping logic doesn't know how to group it. In this case the options of\n         * the first point instance are copied over to the group point. This can be\n         * altered through a custom `approximation` callback function.\n         *\n         * @declare   Highcharts.DataGroupingOptionsObject\n         * @product   highstock\n         * @requires  product:highstock\n         * @requires  module:modules/datagrouping\n         * @apioption plotOptions.series.dataGrouping\n         */\n        /**\n         * Specifies how the points should be located on the X axis inside the group.\n         * Points that are extremes can be set separately. Available options:\n         *\n         * - `start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * - `middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * - `end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-anchor\n         *         Changing the point x-coordinate inside the group.\n         *\n         * @see [dataGrouping.firstAnchor](#plotOptions.series.dataGrouping.firstAnchor)\n         * @see [dataGrouping.lastAnchor](#plotOptions.series.dataGrouping.lastAnchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchor}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.anchor\n         */\n        /**\n         * The method of approximation inside a group. When for example 30 days\n         * are grouped into one month, this determines what value should represent\n         * the group. Possible values are \"average\", \"averages\", \"open\", \"high\",\n         * \"low\", \"close\" and \"sum\". For OHLC and candlestick series the approximation\n         * is \"ohlc\" by default, which finds the open, high, low and close values\n         * within all the grouped data. For ranges, the approximation is \"range\",\n         * which finds the low and high values. For multi-dimensional data,\n         * like ranges and OHLC, \"averages\" will compute the average for each\n         * dimension.\n         *\n         * Custom aggregate methods can be added by assigning a callback function\n         * as the approximation. This function takes a numeric array as the\n         * argument and should return a single numeric value or `null`. Note\n         * that the numeric array will never contain null values, only true\n         * numbers. Instead, if null values are present in the raw data, the\n         * numeric array will have an `.hasNulls` property set to `true`. For\n         * single-value data sets the data is available in the first argument\n         * of the callback function. For OHLC data sets, all the open values\n         * are in the first argument, all high values in the second etc.\n         *\n         * Since v4.2.7, grouping meta data is available in the approximation\n         * callback from `this.dataGroupInfo`. It can be used to extract information\n         * from the raw data.\n         *\n         * Defaults to `average` for line-type series, `sum` for columns, `range`\n         * for range series, `hlc` for HLC, and `ohlc` for OHLC and candlestick.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-approximation\n         *         Approximation callback with custom data\n         * @sample {highstock} stock/plotoptions/series-datagrouping-simple-approximation\n         *         Simple approximation demo\n         *\n         * @type       {Highcharts.DataGroupingApproximationValue|Function}\n         * @apioption  plotOptions.series.dataGrouping.approximation\n         */\n        /**\n         * Datetime formats for the header of the tooltip in a stock chart.\n         * The format can vary within a chart depending on the currently selected\n         * time range and the current data grouping.\n         *\n         * The default formats are:\n         * ```js\n         * {\n         *     millisecond: [\n         *         '%A, %e %b, %H:%M:%S.%L', '%A, %e %b, %H:%M:%S.%L', '-%H:%M:%S.%L'\n         *     ],\n         *     second: ['%A, %e %b, %H:%M:%S', '%A, %e %b, %H:%M:%S', '-%H:%M:%S'],\n         *     minute: ['%A, %e %b, %H:%M', '%A, %e %b, %H:%M', '-%H:%M'],\n         *     hour: ['%A, %e %b, %H:%M', '%A, %e %b, %H:%M', '-%H:%M'],\n         *     day: ['%A, %e %b %Y', '%A, %e %b', '-%A, %e %b %Y'],\n         *     week: ['Week from %A, %e %b %Y', '%A, %e %b', '-%A, %e %b %Y'],\n         *     month: ['%B %Y', '%B', '-%B %Y'],\n         *     year: ['%Y', '%Y', '-%Y']\n         * }\n         * ```\n         *\n         * For each of these array definitions, the first item is the format\n         * used when the active time span is one unit. For instance, if the\n         * current data applies to one week, the first item of the week array\n         * is used. The second and third items are used when the active time\n         * span is more than two units. For instance, if the current data applies\n         * to two weeks, the second and third item of the week array are used,\n         *  and applied to the start and end date of the time span.\n         *\n         * @type      {Object}\n         * @apioption plotOptions.series.dataGrouping.dateTimeLabelFormats\n         */\n        /**\n         * Enable or disable data grouping.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @apioption plotOptions.series.dataGrouping.enabled\n         */\n        /**\n         * Specifies how the first grouped point is positioned on the xAxis.\n         * If firstAnchor and/or lastAnchor are defined, then those options take\n         * precedence over anchor for the first and/or last grouped points.\n         * Available options:\n         *\n         * -`start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * -`middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * -`end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * -`firstPoint` the first point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:13)\n         *\n         * -`lastPoint` the last point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-first-anchor\n         *         Applying first and last anchor.\n         *\n         * @see [dataGrouping.anchor](#plotOptions.series.dataGrouping.anchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchorExtremes}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.firstAnchor\n         */\n        /**\n         * When data grouping is forced, it runs no matter how small the intervals\n         * are. This can be handy for example when the sum should be calculated\n         * for values appearing at random times within each hour.\n         *\n         * @type      {boolean}\n         * @default   false\n         * @apioption plotOptions.series.dataGrouping.forced\n         */\n        /**\n         * The approximate pixel width of each group. If for example a series\n         * with 30 points is displayed over a 600 pixel wide plot area, no grouping\n         * is performed. If however the series contains so many points that\n         * the spacing is less than the groupPixelWidth, Highcharts will try\n         * to group it into appropriate groups so that each is more or less\n         * two pixels wide. If multiple series with different group pixel widths\n         * are drawn on the same x axis, all series will take the greatest width.\n         * For example, line series have 2px default group width, while column\n         * series have 10px. If combined, both the line and the column will\n         * have 10px by default.\n         *\n         * @type      {number}\n         * @default   2\n         * @apioption plotOptions.series.dataGrouping.groupPixelWidth\n         */\n        /**\n         * By default only points within the visible range are grouped. Enabling this\n         * option will force data grouping to calculate all grouped points for a given\n         * dataset. That option prevents for example a column series from calculating\n         * a grouped point partially. The effect is similar to\n         * [Series.getExtremesFromAll](#plotOptions.series.getExtremesFromAll) but does\n         * not affect yAxis extremes.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-groupall/\n         *         Two series with the same data but different groupAll setting\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since     6.1.0\n         * @apioption plotOptions.series.dataGrouping.groupAll\n         */\n        /**\n         * Specifies how the last grouped point is positioned on the xAxis.\n         * If firstAnchor and/or lastAnchor are defined, then those options take\n         * precedence over anchor for the first and/or last grouped points.\n         * Available options:\n         *\n         * -`start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * -`middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * -`end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * -`firstPoint` the first point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:13)\n         *\n         * -`lastPoint` the last point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-first-anchor\n         *         Applying first and last anchor.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-last-anchor\n         *         Applying the last anchor in the chart with live data.\n         *\n         * @see [dataGrouping.anchor](#plotOptions.series.dataGrouping.anchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchorExtremes}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.lastAnchor\n         */\n        /**\n         * Normally, a group is indexed by the start of that group, so for example\n         * when 30 daily values are grouped into one month, that month's x value\n         * will be the 1st of the month. This apparently shifts the data to\n         * the left. When the smoothed option is true, this is compensated for.\n         * The data is shifted to the middle of the group, and min and max\n         * values are preserved. Internally, this is used in the Navigator series.\n         *\n         * @type      {boolean}\n         * @default   false\n         * @deprecated\n         * @apioption plotOptions.series.dataGrouping.smoothed\n         */\n        /**\n         * An array determining what time intervals the data is allowed to be\n         * grouped to. Each array item is an array where the first value is\n         * the time unit and the second value another array of allowed multiples.\n         *\n         * Defaults to:\n         * ```js\n         * units: [[\n         *     'millisecond', // unit name\n         *     [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples\n         * ], [\n         *     'second',\n         *     [1, 2, 5, 10, 15, 30]\n         * ], [\n         *     'minute',\n         *     [1, 2, 5, 10, 15, 30]\n         * ], [\n         *     'hour',\n         *     [1, 2, 3, 4, 6, 8, 12]\n         * ], [\n         *     'day',\n         *     [1]\n         * ], [\n         *     'week',\n         *     [1]\n         * ], [\n         *     'month',\n         *     [1, 3, 6]\n         * ], [\n         *     'year',\n         *     null\n         * ]]\n         * ```\n         *\n         * @type      {Array<Array<string,(Array<number>|null)>>}\n         * @apioption plotOptions.series.dataGrouping.units\n         */\n        /**\n         * The approximate pixel width of each group. If for example a series\n         * with 30 points is displayed over a 600 pixel wide plot area, no grouping\n         * is performed. If however the series contains so many points that\n         * the spacing is less than the groupPixelWidth, Highcharts will try\n         * to group it into appropriate groups so that each is more or less\n         * two pixels wide. Defaults to `10`.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-grouppixelwidth/\n         *         Two series with the same data density but different groupPixelWidth\n         *\n         * @type      {number}\n         * @default   10\n         * @apioption plotOptions.column.dataGrouping.groupPixelWidth\n         */\n        ''; // Required by JSDoc parsing\n\n        return DataGroupingComposition;\n    });\n    _registerModule(_modules, 'masters/modules/datagrouping.src.js', [_modules['Core/Globals.js'], _modules['Extensions/DataGrouping/ApproximationDefaults.js'], _modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Extensions/DataGrouping/DataGrouping.js']], function (Highcharts, ApproximationDefaults, ApproximationRegistry, DataGrouping) {\n\n        var G = Highcharts;\n        G.dataGrouping = G.dataGrouping || {};\n        G.dataGrouping.approximationDefaults = (G.dataGrouping.approximationDefaults ||\n            ApproximationDefaults);\n        G.dataGrouping.approximations = (G.dataGrouping.approximations ||\n            ApproximationRegistry);\n        DataGrouping.compose(G.Axis, G.Series, G.Tooltip);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindingsUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define types for editable fields per annotation. There is no need to define\n         * numbers, because they won't change their type to string.\n         * @private\n         */\n        var annotationsFieldsTypes = {\n            backgroundColor: 'string',\n            borderColor: 'string',\n            borderRadius: 'string',\n            color: 'string',\n            fill: 'string',\n            fontSize: 'string',\n            labels: 'string',\n            name: 'string',\n            stroke: 'string',\n            title: 'string'\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the first xAxis or yAxis that was clicked with its value.\n         *\n         * @private\n         *\n         * @param {Array<Highcharts.PointerAxisCoordinateObject>} coords\n         *        All the chart's x or y axes with a current pointer's axis value.\n         *\n         * @return {Highcharts.PointerAxisCoordinateObject}\n         *         Object with a first found axis and its value that pointer\n         *         is currently pointing.\n         */\n        function getAssignedAxis(coords) {\n            return coords.filter(function (coord) {\n                var extremes = coord.axis.getExtremes(), axisMin = extremes.min, axisMax = extremes.max, \n                // Correct axis edges when axis has series\n                // with pointRange (like column)\n                minPointOffset = pick(coord.axis.minPointOffset, 0);\n                return isNumber(axisMin) && isNumber(axisMax) &&\n                    coord.value >= (axisMin - minPointOffset) &&\n                    coord.value <= (axisMax + minPointOffset) &&\n                    // Don't count navigator axis\n                    !coord.axis.options.isInternal;\n            })[0]; // If the axes overlap, return the first axis that was found.\n        }\n        /**\n         * Get field type according to value\n         *\n         * @private\n         *\n         * @param {'boolean'|'number'|'string'} value\n         * Atomic type (one of: string, number, boolean)\n         *\n         * @return {'checkbox'|'number'|'text'}\n         * Field type (one of: text, number, checkbox)\n         */\n        function getFieldType(key, value) {\n            var predefinedType = annotationsFieldsTypes[key];\n            var fieldType = typeof value;\n            if (defined(predefinedType)) {\n                fieldType = predefinedType;\n            }\n            return {\n                'string': 'text',\n                'number': 'number',\n                'boolean': 'checkbox'\n            }[fieldType];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigationBindingUtilities = {\n            annotationsFieldsTypes: annotationsFieldsTypes,\n            getAssignedAxis: getAssignedAxis,\n            getFieldType: getFieldType\n        };\n\n        return NavigationBindingUtilities;\n    });\n    _registerModule(_modules, 'Extensions/MouseWheelZoom/MouseWheelZoom.js', [_modules['Core/Utilities.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js']], function (U, NBU) {\n        /* *\n         *\n         *  (c) 2023 Torstein Honsi, Askel Eirik Johansson\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, isObject = U.isObject, pick = U.pick, defined = U.defined, merge = U.merge;\n        var getAssignedAxis = NBU.getAssignedAxis;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [], defaultOptions = {\n            enabled: true,\n            sensitivity: 1.1\n        };\n        var wheelTimer;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        var optionsToObject = function (options) {\n            if (!isObject(options)) {\n                options = {\n                    enabled: options !== null && options !== void 0 ? options : true\n                };\n            }\n            return merge(defaultOptions, options);\n        };\n        /**\n         * @private\n         */\n        var zoomBy = function (chart, howMuch, xAxis, yAxis, mouseX, mouseY, options) {\n            var type = pick(options.type, chart.zooming.type, '');\n            var axes = [];\n            if (type === 'x') {\n                axes = xAxis;\n            }\n            else if (type === 'y') {\n                axes = yAxis;\n            }\n            else if (type === 'xy') {\n                axes = chart.axes;\n            }\n            var hasZoomed = chart.transform({\n                axes: axes,\n                // Create imaginary reference and target rectangles around the mouse\n                // point that scales up or down with `howMuch`;\n                to: {\n                    x: mouseX - 5,\n                    y: mouseY - 5,\n                    // Must use 10 to get passed the limit for too small reference.\n                    // Below this, the transform will default to a pan.\n                    width: 10,\n                    height: 10\n                },\n                from: {\n                    x: mouseX - 5 * howMuch,\n                    y: mouseY - 5 * howMuch,\n                    width: 10 * howMuch,\n                    height: 10 * howMuch\n                },\n                trigger: 'mousewheel'\n            });\n            if (hasZoomed) {\n                if (defined(wheelTimer)) {\n                    clearTimeout(wheelTimer);\n                }\n                // Some time after the last mousewheel event, run drop. In case any of\n                // the affected axes had `startOnTick` or `endOnTick`, they will be\n                // re-adjusted now.\n                wheelTimer = setTimeout(function () {\n                    var _a;\n                    (_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.drop();\n                }, 400);\n            }\n            return hasZoomed;\n        };\n        /**\n         * @private\n         */\n        function onAfterGetContainer() {\n            var _this = this;\n            var wheelZoomOptions = optionsToObject(this.zooming.mouseWheel);\n            if (wheelZoomOptions.enabled) {\n                addEvent(this.container, 'wheel', function (e) {\n                    var _a, _b;\n                    e = ((_a = _this.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                    var pointer = _this.pointer, allowZoom = pointer && !pointer.inClass(e.target, 'highcharts-no-mousewheel');\n                    // Firefox uses e.detail, WebKit and IE uses deltaX, deltaY, deltaZ.\n                    if (_this.isInsidePlot(e.chartX - _this.plotLeft, e.chartY - _this.plotTop) && allowZoom) {\n                        var wheelSensitivity = wheelZoomOptions.sensitivity || 1.1, delta = e.detail || ((e.deltaY || 0) / 120), xAxisCoords = getAssignedAxis(pointer.getCoordinates(e).xAxis), yAxisCoords = getAssignedAxis(pointer.getCoordinates(e).yAxis);\n                        var hasZoomed = zoomBy(_this, Math.pow(wheelSensitivity, delta), xAxisCoords ? [xAxisCoords.axis] : _this.xAxis, yAxisCoords ? [yAxisCoords.axis] : _this.yAxis, e.chartX, e.chartY, wheelZoomOptions);\n                        // Prevent page scroll\n                        if (hasZoomed) {\n                            (_b = e.preventDefault) === null || _b === void 0 ? void 0 : _b.call(e);\n                        }\n                    }\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function compose(ChartClass) {\n            if (composedClasses.indexOf(ChartClass) === -1) {\n                composedClasses.push(ChartClass);\n                addEvent(ChartClass, 'afterGetContainer', onAfterGetContainer);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var MouseWheelZoomComposition = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The mouse wheel zoom is a feature included in Highcharts Stock, but is also\n         * available for Highcharts Core as a module. Zooming with the mouse wheel is\n         * enabled by default in Highcharts Stock. In Highcharts Core it is enabled if\n         * [chart.zooming.type](chart.zooming.type) is set. It can be disabled by\n         * setting this option to `false`.\n         *\n         * @type      {boolean|object}\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @sample    {highcharts} highcharts/mouse-wheel-zoom/enabled\n         *            Enable or disable\n         * @sample    {highstock} stock/mouse-wheel-zoom/enabled\n         *            Enable or disable\n         * @apioption chart.zooming.mouseWheel\n         */\n        /**\n         * Zooming with the mouse wheel can be disabled by setting this option to\n         * `false`.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @apioption chart.zooming.mouseWheel.enabled\n         */\n        /**\n         * Adjust the sensitivity of the zoom. Sensitivity of mouse wheel or trackpad\n         * scrolling. `1` is no sensitivity, while with `2`, one mouse wheel delta will\n         * zoom in `50%`.\n         *\n         * @type      {number}\n         * @default   1.1\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @sample    {highcharts} highcharts/mouse-wheel-zoom/sensitivity\n         *            Change mouse wheel zoom sensitivity\n         * @sample    {highstock} stock/mouse-wheel-zoom/sensitivity\n         *            Change mouse wheel zoom sensitivity\n         * @apioption chart.zooming.mouseWheel.sensitivity\n         */\n        /**\n         * Decides in what dimensions the user can zoom scrolling the wheel. Can be one\n         * of `x`, `y` or `xy`. In Highcharts Core, if not specified here, it will\n         * inherit the type from [chart.zooming.type](chart.zooming.type). In Highcharts\n         * Stock, it defaults to `x`.\n         *\n         * Note that particularly with mouse wheel in the y direction, the zoom is\n         * affected by the default [yAxis.startOnTick](#yAxis.startOnTick) and\n         * [endOnTick]((#yAxis.endOnTick)) settings. In order to respect these settings,\n         * the zoom level will adjust after the user has stopped zooming. To prevent\n         * this, consider setting `startOnTick` and `endOnTick` to `false`.\n         *\n         * @type      {string}\n         * @default   {highcharts} undefined\n         * @default   {highstock} x\n         * @validvalue [\"x\", \"y\", \"xy\"]\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @apioption chart.zooming.mouseWheel.type\n         */\n        (''); // Keeps doclets above in JS file\n\n        return MouseWheelZoomComposition;\n    });\n    _registerModule(_modules, 'masters/modules/mouse-wheel-zoom.src.js', [_modules['Core/Globals.js'], _modules['Extensions/MouseWheelZoom/MouseWheelZoom.js']], function (Highcharts, MouseWheelZoom) {\n\n        var G = Highcharts;\n        G.MouseWheelZoom = G.MouseWheelZoom || MouseWheelZoom;\n        G.MouseWheelZoom.compose(G.Chart);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'masters/modules/stock.src.js', [_modules['Core/Globals.js'], _modules['Series/DataModifyComposition.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Core/Axis/OrdinalAxis.js'], _modules['Stock/RangeSelector/RangeSelector.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Chart/StockChart.js'], _modules['Series/OHLC/OHLCSeries.js'], _modules['Series/Flags/FlagsSeries.js']], function (Highcharts, DataModifyComposition, Navigator, OrdinalAxis, RangeSelector, Scrollbar, StockChart, OHLCSeries, FlagsSeries) {\n\n        var G = Highcharts;\n        // Classes\n        G.Navigator = G.Navigator || Navigator;\n        G.OrdinalAxis = G.OrdinalAxis || OrdinalAxis;\n        G.RangeSelector = G.RangeSelector || RangeSelector;\n        G.Scrollbar = G.Scrollbar || Scrollbar;\n        // Functions\n        G.stockChart = G.stockChart || StockChart.stockChart;\n        G.StockChart = G.StockChart || G.stockChart;\n        G.extend(G.StockChart, StockChart);\n        // Compositions\n        DataModifyComposition.compose(G.Series, G.Axis, G.Point);\n        FlagsSeries.compose(G.Renderer);\n        OHLCSeries.compose(G.Series);\n        G.Navigator.compose(G.Chart, G.Axis, G.Series);\n        G.OrdinalAxis.compose(G.Axis, G.Series, G.Chart);\n        G.RangeSelector.compose(G.Axis, G.Chart);\n        G.Scrollbar.compose(G.Axis);\n        G.StockChart.compose(G.Chart, G.Axis, G.Series, G.SVGRenderer);\n\n        return Highcharts;\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Axis","Point","Series","U","DataModifyComposition","pointTooltipFormatter","prototype","tooltipFormatter","addEvent","arrayMax","arrayMin","correctFloat","defined","isArray","isNumber","isString","pick","setModifier","mode","modeState","redraw","isXAxis","series","forEach","setCompare","setCumulative","chart","pointFormat","point","numberFormatter","replace","value","tooltipOptions","changeDecimals","change","cumulativeSum","afterInit","dataModify","compare","options","cumulative","Additions","initCompare","initCumulative","afterGetExtremes","e","dataExtremes","activeYData","extremes","modifyValue","dataMin","dataMax","length","getCumulativeExtremes","seriesSetCompare","userOptions","update","points","afterProcessData","xAxis","processedYData","processedXData","length_1","compareStart","keyIndex","i","pointArrayMap","indexOf","pointValKey","compareValue","min","axisSetCompare","seriesSetCumulative","axisSetCumulative","compose","SeriesClass","AxisClass","PointClass","axisProto","pointProto","seriesProto","cumulativeDataMin","Infinity","cumulativeDataMax","reduce","prev","cur","sum","Math","max","index","compareBase","prevPoint","cumulativeStart","withinRange","x","H","NavigatorConstructor","isTouchDevice","merge","composedMembers","onChartAfterAddSeries","navigator","setBaseSeries","onChartAfterSetChartSize","_a","legendOptions","yAxis","legend","scrollbarHeight","scrollButtonSize","inverted","left","opposite","chartWidth","height","spacing","top","plotTop","plotLeft","navigatorOptions","chartHeight","scrollbar","margin","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","enabled","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","animation","onChartBeforeRender","onChartBeforeShowResetZoom","chartOptions","zooming","type","pinchType","onChartCallback","getExtremes","render","onChartUpdate","scrollbarOptions","ChartClass","NavigatorClass","pushUnique","chartProto","callbacks","push","onAxisInit","axis","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","trigger","range","previousZoom","preventDefault","keepProps","includes","destroy","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","halfPointRange","pointRange","newMin","translate","horiz","newMax","Color","SeriesRegistry","color","parse","seriesTypes","maskInside","handles","width","borderRadius","symbols","lineWidth","backgroundColor","borderColor","maskFill","setOpacity","get","outlineColor","outlineWidth","areaspline","fillOpacity","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","anchor","lastAnchor","units","dataLabels","zIndex","id","className","lineColor","marker","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","style","fontSize","opacity","textOutline","y","crosshair","startOnTick","endOnTick","minPadding","maxPadding","title","text","tickWidth","rect","__spreadArray","to","from","pack","arguments","ar","l","Array","slice","call","concat","relativeLength","_x","_y","halfWidth","r","markerPosition","setFixedRange","fixedRange","D","NavigatorDefaults","NavigatorSymbols","RendererRegistry","StockUtilities","setOptions","composed","getRendererType","extend","onSeriesAfterUpdate","isInternal","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","scrollMax","onAxisAfterGetOffset","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","renderer","unitedMin","unitedMax","reversed","shouldUpdateExtremes","DOMType","animate","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","defaultOptions","crisp","destroyObjectProperties","fireEvent","removeEvent","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","init","swapXY","seg","temp","len","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","updatePosition","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","group","g","add","addClass","styledMode","attr","stroke","fill","strokeWidth","arrow","pointer","normalize","mousePosition","initPositions","grabbedCenter","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","ChartNavigatorComposition","NavigatorComposition","clamp","erase","find","splat","numExt","extreme","_i","numbers","filter","Navigator","drawHandle","verb","round","parseInt","drawOutline","zoomedMin","zoomedMax","verticalMin","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","d","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions_1","height_1","width_1","symbol","rotation","rotationOriginX","rotationOriginY","baseSeries","navigatorSeries","navigatorWidth","scrollbarXAxis","fake","navigatorEnabled","minRange","maxRange","plotWidth","plotHeight","toPixels","abs","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","container","eventsToUnbind","onMouseMove","onMouseUp","getPartsEvents","renderTo","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","ext","navigatorPosition","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","Object","keys","unbind","removeBaseSeriesEvents","adaptToUpdatedData","updatedDataHandler","modifyBaseAxisExtremes","scrollbarEnabled","Boolean","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","overscroll","keepOrdinalPadding","zoomEnabled","offsets","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","returnFalseOnNoBaseSeries","ret","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","_b","baseOptions","mergedNavSeriesOptions","baseNavigatorOptions","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","stacking","states","inactive","navSeries","base","chartNavigatorSeriesOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","initSeries","setSortedData","userSeriesOptions","colors","_this","setVisible","remove","getBaseSeriesMin","currentSeriesMin","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","convertOverscroll","hasSetExtremes","eventArgs","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","OrdinalAxis","error","timeUnits","getTimeTicks","normalizedInterval","startOfWeek","positions","closestDistance","findHigherRanks","end","segmentPositions","hasCrossedHigherRank","info","outsideMax","higherRanks","tickPixelIntervalOption","time","segmentStarts","start","groupPositions","lastGroupPosition","posLength","shift","unitRange","hour","dateFormat","translatedArr","distances","itemToRemove","translated","lastTranslated","medianDistance","distance","sort","a","b","splice","index2val","ordinalPositions","lin2val","val","localMin","old","localA","transA","getExtendedPositions","pixelVal","minPixelPadding","getIndexOfPoint","mantissa","leftNeighbour","rightNeighbour","getIndexInArray","findIndexOf","percent","onAxisFoundExtremes","originalOrdinalRange","onAxisAfterSetScale","isDirty","isOrdinal","onAxisInitialAxisTranslation","beforeSetTickPositions","tickInterval","postProcessTickInterval","onChartPan","originalEvent","panning","runBase","mouseDownX","hoverPoints","closestPointRange","overscrollPointsRange","movedUnits","translationSlope","slope","extendedOrdinalPositions","extendedAxis","index2val_1","val2lin_1","val2lin","trimmedRange","setState","test","onSeriesUpdatedData","toIndex","ordinalIndex","ordinalLength","length_2","originalPositionsReference","diff","approximateIndexOffset","ordinal2lin","uniqueOrdinalPositions","dist","minIndex","maxIndex","hasBreaks","brokenAxis","useOrdinal","adjustOrdinalExtremesPoints","isBoosted","distanceBetweenPoint_1","reserveSpace","takeOrdinalPosition","unshift","pop","forceOrdinal","getOverscrollPositions","groupIntervalFactor","sortedArray","key","indirectSearch","middle","withOverscroll","fakeAxis","constructor","grouping","currentDataGrouping","count","unitName","fakeSeries","applyGrouping","getGroupPixelWidth","getGroupIntervalFactor","_c","destroyGroupedData","noop","getProcessedData","forced","processData","hasExtremesChanged","basePointRange","xMin","xMax","median","ordinalArray","firstPointX","firstPointVal","hasPointsInside","some","firstPoint","plotX","ordinalPointPixelInterval","shiftIndex","extraRange","ordinalSlope","calculateOverscroll","overscrollPercentage","overscrollValue","pixelToPercent","limitedOverscrollValue","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","selected","buttonPosition","inputStyle","labelStyle","RangeSelectorDefaults","RangeSelectorConstructor","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","timeName","date","Date","basePeriod","set","getTime","MIN_VALUE","_offsetMin","createRangeSelector","deferredYTDClick","clickButton","extraTopMargin","redrawRangeSelector","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","onChartGetMargins","rangeSelectorHeight","marginBottom","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","RangeSelectorComposition","SVGElement","createElement","discardElement","objectEach","pad","pInt","RangeSelector","buttonOptions","defaultButtons","initialButtonGroupWidth","baseXAxisOptions","rangeMin","ctx","ytdExtremes","_range","addOffsetMin","setSelected","forcedDataGrouping","setDataGrouping","frozenStates","preserveDataGrouping","getYTDExtremes","useUTC","_offsetMax","selectedIndex","rangeSelectorButton","axisRangeUpdateEvent_1","selectedOption","blurInputs","minInput","maxInput","blur","computeButtonRange","createElements","updateButtonStates","dropdownLabel","actualRange","hasNoData","hasVisibleSeries","day","ytdMin","ytdMax","buttonStates","selectedExists","isSelectedTooGreat","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","isYTDButNotSelected","isSameRange","prevOrdinalPosition","nextOrdinalPosition","month","year","disable","select","state","button","disabled","bbox","getBBox","fixedTimes","millisecond","second","minute","week","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","hcTimeAttr","getAttribute","updatedTime","previousTime","setAttribute","inputTypeFormats","setInputExtremes","format","showInput","inputGroup","isTextInput","_d","_e","_f","border","offsetWidth","offsetHeight","hideInput","inputDate","str","split","join","isSafari","lastIndexOf","getTimezoneOffset","parts","UTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","currentExtreme","label","on","focus","preferredInputType","char","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","now","startOfYear","ts","inputsZIndex","renderButtons","parentNode","insertBefore","minElems","minLabel","maxElems","maxLabel","x_1","alignElements","buttonGroup","userButtonTheme","paddingLeft","paddingRight","hover","mouseOver","isMS","mouseOut","zoomText","textContent","textStr","callDefaultEvent","buttonEvents","click","isActive","navButtonOptions","exporting","navigation","getXOffsetForExportButton","titleCollision","positionButtons","xOffsetForExportButton_1","alignButtonGroup","hasLoaded","xOffsetForExportButton","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","buttonLeft","maxButtonWidth","buttonWidth","bBox","groupsOverlap","buttonGroupWidth","alignOptions","inputGroupX","inputGroupWidth","buttonGroupX","moveInputsDown","collapseButtons","expandButtons","isCollapsed","showDropdown","hideDropdown","top_1","hasVisibleDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","subtitle","rSelector","HTMLElement","Chart","F","extendStatics","__extends","setPrototypeOf","__proto__","p","TypeError","String","__","create","getOptions","getDefaultAxisOptions","showLastLabel","categories","getForcedAxisOptions","axisOptions","StockChart","_super","callback","xAxisOptions","yAxisOptions","mouseWheel","tooltip","crosshairs","isStock","map","createAxis","onAxisAfterDrawCrosshair","cross","posx","posy","limit","log","logarithmic","tickInside","tickPosition","snap","crossLabel","formatOption","formatFormat","lin2log","labelAlign","shape","colorIndex","labelGroup","borderWidth","fontWeight","plotY","formatter","dateTime","isInside","isPointInside","crossBox","right","anchorX","anchorY","onAxisAfterHideCrosshair","onAxisAutoLabelAlign","panes","_labelPanes","labelOptions","side","onAxisDestroy","onAxisGetPlotLinePath","x1","y1","x2","y2","axes2","uniqueAxes","transVal","isLinked","linkedParent","axisLeft","axisTop","result","translatedValue","force","acrossPanes","otherColl","opt","axes2_1","A","_loop_1","axis2","unique","pos","axes_1","uniqueAxes_1","skip","transB","uniqueAxes_2","crispPolyLine","onSeriesSetOptions","overrides","is","shadow","radius","seriesForceCropping","dataGroupingOptions","allowDG","svgRendererCrispPolyLine","SVGRendererClass","forceCropping","stockChart","c","HLCPoint","column","pointClass","stickyTracking","HLCSeriesDefaults","ColumnSeries","HLCSeries","extendStem","halfStrokeWidth","getPointPath","graphic","crispX","shapeArgs","yBottom","plotHigh","close","plotClose","drawSinglePoint","pointAttribs","getClassName","drawPoints","attribs","toYData","high","low","names","charAt","toUpperCase","tooltipPos","directTouch","pointAttrToOptions","registerSeriesType","OHLCPoint","open","resolveUpColor","upColor","resolveColor","getZone","zone","applyOptions","hlc","OHLCSeriesDefaults","onSeriesAfterSetOptions","useOhlcData","onSeriesInit","eventOptions","OHLCSeries","_args","plotOpen","CandlestickSeriesDefaults","ohlc","CandlestickSeries","isUp","upLineColor","stateOptions","reversedYAxis","points_1","topBox","bottomBox","hasTopWhisker","hasBottomWhisker","isNew","ColumnPoint","FlagsPoint","ttBelow","isValid","hasNewShapeType","symbolKey","allowOverlapX","stackDistance","fillColor","FlagsSymbols","modifiedMembers","flag","w","h","circle","createPinSymbol","labelX","startSeg","endSeg","labelY","RendererClass","OnSeriesComposition","columnProto","stableSort","getPlotBox","onSeries","lastPoint","leftPoint","lastX","rightPoint","distanceRatio","optionsOnSeries","onData","onKey","pointXOffset","barW","totalRange","substr","state_1","p0_1","p3_1","p1_1","controlPoints","p2_1","calculateCoord","t","pow","tMin","tMax","i_1","tMid","xMid","stackIndex","seriesProto_1","FlagsSeriesDefaults","R","distribute","wrap","FlagsSeries","setClip","outsideRight","centered","optionsY","boxesMap","boxes","useHTML","markerGroup","target","maxDistance_1","box","point_1","plotX_1","graphic_1","proceed","drawTracker","unbindMouseOver","raised","points_3","otherPoint","points_2","clip","sharedClipKey","sharedClips","forceCrop","invertible","noSharedTooltip","sorted","trackerGroups","buildKDTree","StackItem","BrokenAxis","setBreaks","onAxisAfterSetOptions","onAxisAfterSetTickPositions","tickPositions","newPositions","isInAnyBreak","onSeriesAfterGeneratePoints","connectNulls","isPointInBreak","onSeriesAfterRender","drawBreaks","seriesDrawBreaks","brokenAxis_1","breakArray","breaksOutOfRange","brk","isOut","otherBreak","seriesGappedPath","groupingSize","gapSize","gapUnit","current","next","xRange","isNull","stack","stacks","stackKey","stackLabels","total","getGraphPath","gappedPath","isInBreak","repeat","inclusive","lin2Val","nval","val2Lin","findBreakAt","testKeep","inbrk","keep","showPoints","forceRedraw","breaks_1","axisBreak","setAxisTranslation","unitLength","inBrk_1","repeat_1","start_1","breaks_2","breakArrayT_1","breakArray_1","pointRangePadding","min_1","max_1","move","breakSize","staticScale","minPointOffset","G","ApproximationRegistry","average","arr","hasNulls","ApproximationDefaults","averages","common","dateTimeLabelFormats","seriesSpecific","line","spline","area","arearange","columnrange","candlestick","heikinashi","DataGroupingDefaults","AxisConstructor","hasProcessed","dataLength","dgOptions","doGrouping","plotSizeX","onAfterSetScale","seriesOptions","DateTimeAxis","baseGeneratePoints","generatePoints","hasGroupedData","croppedData","groupingEnabled","lastDataGrouping","revertRequireSorting","requireSorting","skipDataGrouping","isCartesian","groupAll","yData","groupedXData","interval","normalizeTimeTickInterval","groupedData","groupData","groupedYData","smoothed","groupMap","anchorPoints","groupedDataLastIndex","anchorIndexIterator","anchorFirstIndex","groupStart","groupLength","firstGroupEnd","lastGroupStart","shiftInterval","allGroupedData","cropData","cropStart","preventGraphAnimation","getDGApproximation","pointX","pointY","groupedY","dataOptions","handleYData","values","pointArrayMapLength","extendedPointArrayMap","approximationFn","valuesLen","dataGroupInfo","optionsToObject","j","onAfterSetOptions","useCommonDataGrouping","dataGroup","DataGroupingAxisComposition","DataGroupingSeriesComposition","onTooltipHeaderFormatter","xDateFormatEnd","labelFormats","formattedKey","labelConfig","xDateFormat","formatString","isFooter","getXDateFormat","groupEnd","styledModeFormat","TooltipClass","DataGrouping","approximationDefaults","approximations","Tooltip","annotationsFieldsTypes","getAssignedAxis","coords","coord","getFieldType","predefinedType","fieldType","NBU","wheelTimer","isObject","composedClasses","sensitivity","zoomBy","howMuch","mouseX","mouseY","hasZoomed","transform","clearTimeout","drop","onAfterGetContainer","wheelZoomOptions","allowZoom","inClass","isInsidePlot","wheelSensitivity","delta","deltaY","xAxisCoords","getCoordinates","yAxisCoords","MouseWheelZoom","Renderer","SVGRenderer"],"mappings":"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"}